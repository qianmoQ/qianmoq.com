{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"","title":"Index"},{"location":"project.html","text":"DBM An awesome database management tool specified for ClickHouse . For more information: https://dbm.incubator.edurt.io .","title":"\u9879\u76ee"},{"location":"tags.html","text":"Tags \u00b6","title":"Tags"},{"location":"tags.html#tags","text":"","title":"Tags"},{"location":"apache/druid/index.html","tags":["Apache","Druid","\u5927\u6570\u636e"],"text":"Apache Druid \u662f\u4e00\u4e2a\u652f\u6301\u73b0\u4ee3\u5206\u6790\u5e94\u7528\u7a0b\u5e8f\u7684\u5b9e\u65f6\u6570\u636e\u5e93 Druid\u7279\u6027 \u00b6 \u6784\u5efa\u5feb\u901f Druid \u4e13\u4e3a\u5feb\u901f\u5373\u5e2d\u5206\u6790\u3001\u5373\u65f6\u6570\u636e\u53ef\u89c1\u6027\u6216\u652f\u6301\u9ad8\u5e76\u53d1\u6027\u5f88\u91cd\u8981\u7684\u5de5\u4f5c\u6d41\u800c\u8bbe\u8ba1\u3002\u56e0\u6b64\uff0cDruid \u901a\u5e38\u7528\u4e8e\u4e3a\u9700\u8981\u4ea4\u4e92\u5f0f\u3001\u4e00\u81f4\u7684\u7528\u6237\u4f53\u9a8c\u7684 UI \u63d0\u4f9b\u652f\u6301\u3002 \u6570\u636e\u96c6\u6210 Druid \u4eceKafka\u548cAmazon Kinesis\u7b49\u6d88\u606f\u961f\u5217\u4f20\u8f93\u6570\u636e\uff0c\u5e76\u4eceHDFS\u548cAmazon S3\u7b49\u6279\u91cf\u52a0\u8f7d\u6587\u4ef6\u3002Druid \u652f\u6301\u7ed3\u6784\u5316\u548c\u534a\u7ed3\u6784\u5316\u6570\u636e\u7684\u5927\u591a\u6570\u6587\u4ef6\u683c\u5f0f\u3002 \u5e7f\u6cdb\u9002\u7528\u6027 Druid\u4e3a\u70b9\u51fb\u6d41\u3001APM\u3001\u4f9b\u5e94\u94fe\u3001\u7f51\u7edc\u9065\u6d4b\u3001\u6570\u5b57\u8425\u9500\u3001\u98ce\u9669/\u6b3a\u8bc8\u548c\u8bb8\u591a\u5176\u4ed6\u7c7b\u578b\u7684\u6570\u636e\u89e3\u9501\u4e86\u65b0\u578b\u67e5\u8be2\u548c\u5de5\u4f5c\u6d41\u7a0b\u3002Druid \u4e13\u4e3a\u5bf9\u5b9e\u65f6\u548c\u5386\u53f2\u6570\u636e\u8fdb\u884c\u5feb\u901f\u3001\u5373\u5e2d\u67e5\u8be2\u800c\u6784\u5efa\u3002 \u6df7\u5408\u90e8\u7f72 Druid \u53ef\u4ee5\u90e8\u7f72\u5728\u5546\u7528\u786c\u4ef6\u4e0a\u7684\u4efb\u4f55 *NIX \u73af\u5883\u4e2d\uff0c\u65e0\u8bba\u662f\u5728\u4e91\u4e2d\u8fd8\u662f\u5728\u672c\u5730\u3002\u90e8\u7f72 Druid \u5f88\u7b80\u5355\uff1a\u6269\u5c55\u548c\u7f29\u51cf\u5c31\u50cf\u6dfb\u52a0\u548c\u5220\u9664 Druid \u670d\u52a1\u4e00\u6837\u7b80\u5355\u3002","title":"Index"},{"location":"apache/druid/index.html#druid","text":"\u6784\u5efa\u5feb\u901f Druid \u4e13\u4e3a\u5feb\u901f\u5373\u5e2d\u5206\u6790\u3001\u5373\u65f6\u6570\u636e\u53ef\u89c1\u6027\u6216\u652f\u6301\u9ad8\u5e76\u53d1\u6027\u5f88\u91cd\u8981\u7684\u5de5\u4f5c\u6d41\u800c\u8bbe\u8ba1\u3002\u56e0\u6b64\uff0cDruid \u901a\u5e38\u7528\u4e8e\u4e3a\u9700\u8981\u4ea4\u4e92\u5f0f\u3001\u4e00\u81f4\u7684\u7528\u6237\u4f53\u9a8c\u7684 UI \u63d0\u4f9b\u652f\u6301\u3002 \u6570\u636e\u96c6\u6210 Druid \u4eceKafka\u548cAmazon Kinesis\u7b49\u6d88\u606f\u961f\u5217\u4f20\u8f93\u6570\u636e\uff0c\u5e76\u4eceHDFS\u548cAmazon S3\u7b49\u6279\u91cf\u52a0\u8f7d\u6587\u4ef6\u3002Druid \u652f\u6301\u7ed3\u6784\u5316\u548c\u534a\u7ed3\u6784\u5316\u6570\u636e\u7684\u5927\u591a\u6570\u6587\u4ef6\u683c\u5f0f\u3002 \u5e7f\u6cdb\u9002\u7528\u6027 Druid\u4e3a\u70b9\u51fb\u6d41\u3001APM\u3001\u4f9b\u5e94\u94fe\u3001\u7f51\u7edc\u9065\u6d4b\u3001\u6570\u5b57\u8425\u9500\u3001\u98ce\u9669/\u6b3a\u8bc8\u548c\u8bb8\u591a\u5176\u4ed6\u7c7b\u578b\u7684\u6570\u636e\u89e3\u9501\u4e86\u65b0\u578b\u67e5\u8be2\u548c\u5de5\u4f5c\u6d41\u7a0b\u3002Druid \u4e13\u4e3a\u5bf9\u5b9e\u65f6\u548c\u5386\u53f2\u6570\u636e\u8fdb\u884c\u5feb\u901f\u3001\u5373\u5e2d\u67e5\u8be2\u800c\u6784\u5efa\u3002 \u6df7\u5408\u90e8\u7f72 Druid \u53ef\u4ee5\u90e8\u7f72\u5728\u5546\u7528\u786c\u4ef6\u4e0a\u7684\u4efb\u4f55 *NIX \u73af\u5883\u4e2d\uff0c\u65e0\u8bba\u662f\u5728\u4e91\u4e2d\u8fd8\u662f\u5728\u672c\u5730\u3002\u90e8\u7f72 Druid \u5f88\u7b80\u5355\uff1a\u6269\u5c55\u548c\u7f29\u51cf\u5c31\u50cf\u6dfb\u52a0\u548c\u5220\u9664 Druid \u670d\u52a1\u4e00\u6837\u7b80\u5355\u3002","title":"Druid\u7279\u6027"},{"location":"apache/druid/action/configuration_common.html","tags":["Apache","Druid","\u5927\u6570\u636e"],"text":"Note \u4ee5\u4e0b\u64cd\u4f5c\u9700\u8981\u8fdb\u5165druid-io\u5b89\u88c5\u6587\u4ef6\u7684\u6839\u76ee\u5f55\u4e0b\u64cd\u4f5c\uff0c\u6bd4\u5982\u6211\u7684druid-io\u5b89\u88c5\u76ee\u5f55\u4e3a\uff1a /hadoop/dc/druid-0.9.1.1 \u90a3\u4e48\u6211\u4eec\u9700\u8981\u64cd\u4f5c cd /hadoop/dc/druid-0.9.1.1 \u57fa\u672c\u914d\u7f6e \u00b6 common.runtime.properties\u914d\u7f6e\u6587\u4ef6 vim conf/druid/_common/common.runtime.properties \u4fee\u6539\u4e3a\u4ee5\u4e0b\u5185\u5bb9: # # Licensed to Metamarkets Group Inc. (Metamarkets) under one # or more contributor license agreements. See the NOTICE file # distributed with this work for additional information # regarding copyright ownership. Metamarkets licenses this file # to you under the Apache License, Version 2.0 (the # \"License\"); you may not use this file except in compliance # with the License. You may obtain a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, # software distributed under the License is distributed on an # \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY # KIND, either express or implied. See the License for the # specific language governing permissions and limitations # under the License. # # # Extensions # # This is not the full list of Druid extensions, but common ones that people often use. You may need to change this list # based on your particular setup. # druid.extensions.loadList=[\"druid-kafka-eight\", \"druid-s3-extensions\", \"druid-histogram\", \"druid-datasketches\", \"druid-lookups-cached-global\", \"mysql-metadata-storage\"] druid.extensions.loadList =[ \"druid-kafka-eight\" , \"druid-s3-extensions\" , \"druid-histogram\" , \"druid-datasketches\" , \"druid-lookups-cached-global\" ] # If you have a different version of Hadoop, place your Hadoop client jar files in your hadoop-dependencies directory # and uncomment the line below to point to your directory. #druid.extensions.hadoopDependenciesDir=/my/dir/hadoop-dependencies # # Logging # # Log all runtime properties on startup. Disable to avoid logging properties on startup: druid.startup.logging.logProperties = true # # Zookeeper # druid.zk.service.host = zk.host.ip druid.zk.paths.base = /druid # # Metadata storage # # For Derby server on your Druid Coordinator (only viable in a cluster with a single Coordinator, no fail-over): druid.metadata.storage.type = derby druid.metadata.storage.connector.connectURI = jdbc:derby://metadata.store.ip:1527/var/druid/metadata.db ; create = true druid.metadata.storage.connector.host = metadata.store.ip druid.metadata.storage.connector.port = 1527 # For MySQL: #druid.metadata.storage.type=mysql #druid.metadata.storage.connector.connectURI=jdbc:mysql://db.example.com:3306/druid #druid.metadata.storage.connector.user=... #druid.metadata.storage.connector.password=... # For PostgreSQL (make sure to additionally include the Postgres extension): #druid.metadata.storage.type=postgresql #druid.metadata.storage.connector.connectURI=jdbc:postgresql://db.example.com:5432/druid #druid.metadata.storage.connector.user=... #druid.metadata.storage.connector.password=... # # Deep storage # # For local disk (only viable in a cluster if this is a network mount): druid.storage.type = local druid.storage.storageDirectory = var/druid/segments # For HDFS (make sure to include the HDFS extension and that your Hadoop config files in the cp): #druid.storage.type=hdfs #druid.storage.storageDirectory=/druid/segments # For S3: #druid.storage.type=s3 #druid.storage.bucket=your-bucket #druid.storage.baseKey=druid/segments #druid.s3.accessKey=... #druid.s3.secretKey=... # # Indexing service logs # # For local disk (only viable in a cluster if this is a network mount): druid.indexer.logs.type = file druid.indexer.logs.directory = var/druid/indexing-logs # For HDFS (make sure to include the HDFS extension and that your Hadoop config files in the cp): #druid.indexer.logs.type=hdfs #druid.indexer.logs.directory=/druid/indexing-logs # For S3: #druid.indexer.logs.type=s3 #druid.indexer.logs.s3Bucket=your-bucket #druid.indexer.logs.s3Prefix=druid/indexing-logs # # Service discovery # druid.selectors.indexing.serviceName = druid/overlord druid.selectors.coordinator.serviceName = druid/coordinator # # Monitoring # druid.monitoring.monitors =[ \"com.metamx.metrics.JvmMonitor\" ] druid.emitter = logging druid.emitter.logging.logLevel = info druid.extensions.loadList: \u8be5\u5217\u8868\u52a0\u8f7d\u7684\u4f9d\u8d56\u9700\u8981\u653e\u7f6e\u5230 /extensions/ \u4e0b\u9762\u52a0\u8f7d\u7684\u4f9d\u8d56\u540d\u4e3a\u6587\u4ef6\u5939\u540d\u79f0 druid.zk.service.host && druid.zk.paths.base: \u5bf9\u4e8ezookeeper\u7684\u96c6\u7fa4\u4e3b\u673a\u914d\u7f6e&&\u5728zookeeper\u4e2d\u7684\u6839\u8def\u5f84\u914d\u7f6e druid.metadata.storage.*: \u5bf9\u4e8edruid-io\u7684\u5b58\u50a8\u4ecb\u8d28\u914d\u7f6e\u9ed8\u8ba4\u4e3a\u5185\u7f6e\u7684derby\u6570\u636e\u5e93,\u5bf9\u4e8e\u914d\u7f6emysql\u5b58\u50a8\u4ecb\u8d28\u7684\u8bdd\u9700\u8981\u63d0\u524d\u5c06mysql\u94fe\u63a5jar\u653e\u7f6e\u5230 /lib/ \u76ee\u5f55\u4e0b druid.storage.type && druid.storage.storageDirectory: \u5bf9\u4e8edruid-io\u751f\u6210\u7684segments\u4fdd\u5b58\u4f4d\u7f6e\u9ed8\u8ba4\u4e3alocal && segments\u4fdd\u5b58\u7684\u6587\u4ef6\u5939\u8def\u5f84(\u53ef\u4ee5\u4e3a local \uff0c hdfs \uff0c s3 ) druid.indexer.logs.*: \u5bf9\u4e8edruid-io\u7684\u7d22\u5f15\u65e5\u5fd7\u914d\u7f6e\u9ed8\u8ba4\u4e3alocal(\u53ef\u4ee5\u4e3a local \uff0c hdfs \uff0c s3 ) druid.selectors.indexing.serviceName: \u5bf9\u4e8edruid-io\u7684\u7d22\u5f15\u670d\u52a1\u540d\u79f0 druid.selectors.coordinator.serviceName: \u5bf9\u4e8edruid-io\u7684coordinator\u670d\u52a1\u540d\u79f0 druid.monitoring.monitors: \u5bf9\u4e8edruid-io\u7684\u76d1\u63a7\u6307\u6807\u914d\u7f6e\uff0c\u914d\u7f6e\u4e3a\u5217\u8868 druid.emitter:\u5bf9\u4e8edruid-io\u7684\u63d2\u4ef6\u53d1\u5c04\u5668\u914d\u7f6e\u6bd4\u5982log\u65e5\u5fd7\u914d\u7f6e\u4e3a: druid.emitter = logging druid.emitter.logging.logLevel = info \u65e5\u5fd7\u914d\u7f6e \u00b6 log4j2.xml\u914d\u7f6e\u6587\u4ef6 vim conf/druid/_common/log4j2.xml \u4fee\u6539\u4e3a\u4ee5\u4e0b\u5185\u5bb9: <?xml version = \"1.0\" encoding = \"UTF-8\" ?> <Configuration status = \"WARN\" > <Appenders> <Console name = \"Console\" target = \"SYSTEM_OUT\" > <PatternLayout pattern = \"%d{ISO8601} %p [%t] %c - %m%n\" /> </Console> </Appenders> <Loggers> <Root level = \"info\" > <AppenderRef ref = \"Console\" /> </Root> </Loggers> </Configuration> \u8be5\u6587\u4ef6\u8be6\u7ec6\u914d\u7f6e\u53ef\u53c2\u8003 log4j \u5b98\u7f51\u8fdb\u884c","title":"common\u5168\u5c40\u914d\u7f6e"},{"location":"apache/druid/action/configuration_common.html#_1","text":"common.runtime.properties\u914d\u7f6e\u6587\u4ef6 vim conf/druid/_common/common.runtime.properties \u4fee\u6539\u4e3a\u4ee5\u4e0b\u5185\u5bb9: # # Licensed to Metamarkets Group Inc. (Metamarkets) under one # or more contributor license agreements. See the NOTICE file # distributed with this work for additional information # regarding copyright ownership. Metamarkets licenses this file # to you under the Apache License, Version 2.0 (the # \"License\"); you may not use this file except in compliance # with the License. You may obtain a copy of the License at # # http://www.apache.org/licenses/LICENSE-2.0 # # Unless required by applicable law or agreed to in writing, # software distributed under the License is distributed on an # \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY # KIND, either express or implied. See the License for the # specific language governing permissions and limitations # under the License. # # # Extensions # # This is not the full list of Druid extensions, but common ones that people often use. You may need to change this list # based on your particular setup. # druid.extensions.loadList=[\"druid-kafka-eight\", \"druid-s3-extensions\", \"druid-histogram\", \"druid-datasketches\", \"druid-lookups-cached-global\", \"mysql-metadata-storage\"] druid.extensions.loadList =[ \"druid-kafka-eight\" , \"druid-s3-extensions\" , \"druid-histogram\" , \"druid-datasketches\" , \"druid-lookups-cached-global\" ] # If you have a different version of Hadoop, place your Hadoop client jar files in your hadoop-dependencies directory # and uncomment the line below to point to your directory. #druid.extensions.hadoopDependenciesDir=/my/dir/hadoop-dependencies # # Logging # # Log all runtime properties on startup. Disable to avoid logging properties on startup: druid.startup.logging.logProperties = true # # Zookeeper # druid.zk.service.host = zk.host.ip druid.zk.paths.base = /druid # # Metadata storage # # For Derby server on your Druid Coordinator (only viable in a cluster with a single Coordinator, no fail-over): druid.metadata.storage.type = derby druid.metadata.storage.connector.connectURI = jdbc:derby://metadata.store.ip:1527/var/druid/metadata.db ; create = true druid.metadata.storage.connector.host = metadata.store.ip druid.metadata.storage.connector.port = 1527 # For MySQL: #druid.metadata.storage.type=mysql #druid.metadata.storage.connector.connectURI=jdbc:mysql://db.example.com:3306/druid #druid.metadata.storage.connector.user=... #druid.metadata.storage.connector.password=... # For PostgreSQL (make sure to additionally include the Postgres extension): #druid.metadata.storage.type=postgresql #druid.metadata.storage.connector.connectURI=jdbc:postgresql://db.example.com:5432/druid #druid.metadata.storage.connector.user=... #druid.metadata.storage.connector.password=... # # Deep storage # # For local disk (only viable in a cluster if this is a network mount): druid.storage.type = local druid.storage.storageDirectory = var/druid/segments # For HDFS (make sure to include the HDFS extension and that your Hadoop config files in the cp): #druid.storage.type=hdfs #druid.storage.storageDirectory=/druid/segments # For S3: #druid.storage.type=s3 #druid.storage.bucket=your-bucket #druid.storage.baseKey=druid/segments #druid.s3.accessKey=... #druid.s3.secretKey=... # # Indexing service logs # # For local disk (only viable in a cluster if this is a network mount): druid.indexer.logs.type = file druid.indexer.logs.directory = var/druid/indexing-logs # For HDFS (make sure to include the HDFS extension and that your Hadoop config files in the cp): #druid.indexer.logs.type=hdfs #druid.indexer.logs.directory=/druid/indexing-logs # For S3: #druid.indexer.logs.type=s3 #druid.indexer.logs.s3Bucket=your-bucket #druid.indexer.logs.s3Prefix=druid/indexing-logs # # Service discovery # druid.selectors.indexing.serviceName = druid/overlord druid.selectors.coordinator.serviceName = druid/coordinator # # Monitoring # druid.monitoring.monitors =[ \"com.metamx.metrics.JvmMonitor\" ] druid.emitter = logging druid.emitter.logging.logLevel = info druid.extensions.loadList: \u8be5\u5217\u8868\u52a0\u8f7d\u7684\u4f9d\u8d56\u9700\u8981\u653e\u7f6e\u5230 /extensions/ \u4e0b\u9762\u52a0\u8f7d\u7684\u4f9d\u8d56\u540d\u4e3a\u6587\u4ef6\u5939\u540d\u79f0 druid.zk.service.host && druid.zk.paths.base: \u5bf9\u4e8ezookeeper\u7684\u96c6\u7fa4\u4e3b\u673a\u914d\u7f6e&&\u5728zookeeper\u4e2d\u7684\u6839\u8def\u5f84\u914d\u7f6e druid.metadata.storage.*: \u5bf9\u4e8edruid-io\u7684\u5b58\u50a8\u4ecb\u8d28\u914d\u7f6e\u9ed8\u8ba4\u4e3a\u5185\u7f6e\u7684derby\u6570\u636e\u5e93,\u5bf9\u4e8e\u914d\u7f6emysql\u5b58\u50a8\u4ecb\u8d28\u7684\u8bdd\u9700\u8981\u63d0\u524d\u5c06mysql\u94fe\u63a5jar\u653e\u7f6e\u5230 /lib/ \u76ee\u5f55\u4e0b druid.storage.type && druid.storage.storageDirectory: \u5bf9\u4e8edruid-io\u751f\u6210\u7684segments\u4fdd\u5b58\u4f4d\u7f6e\u9ed8\u8ba4\u4e3alocal && segments\u4fdd\u5b58\u7684\u6587\u4ef6\u5939\u8def\u5f84(\u53ef\u4ee5\u4e3a local \uff0c hdfs \uff0c s3 ) druid.indexer.logs.*: \u5bf9\u4e8edruid-io\u7684\u7d22\u5f15\u65e5\u5fd7\u914d\u7f6e\u9ed8\u8ba4\u4e3alocal(\u53ef\u4ee5\u4e3a local \uff0c hdfs \uff0c s3 ) druid.selectors.indexing.serviceName: \u5bf9\u4e8edruid-io\u7684\u7d22\u5f15\u670d\u52a1\u540d\u79f0 druid.selectors.coordinator.serviceName: \u5bf9\u4e8edruid-io\u7684coordinator\u670d\u52a1\u540d\u79f0 druid.monitoring.monitors: \u5bf9\u4e8edruid-io\u7684\u76d1\u63a7\u6307\u6807\u914d\u7f6e\uff0c\u914d\u7f6e\u4e3a\u5217\u8868 druid.emitter:\u5bf9\u4e8edruid-io\u7684\u63d2\u4ef6\u53d1\u5c04\u5668\u914d\u7f6e\u6bd4\u5982log\u65e5\u5fd7\u914d\u7f6e\u4e3a: druid.emitter = logging druid.emitter.logging.logLevel = info","title":"\u57fa\u672c\u914d\u7f6e"},{"location":"apache/druid/action/configuration_common.html#_2","text":"log4j2.xml\u914d\u7f6e\u6587\u4ef6 vim conf/druid/_common/log4j2.xml \u4fee\u6539\u4e3a\u4ee5\u4e0b\u5185\u5bb9: <?xml version = \"1.0\" encoding = \"UTF-8\" ?> <Configuration status = \"WARN\" > <Appenders> <Console name = \"Console\" target = \"SYSTEM_OUT\" > <PatternLayout pattern = \"%d{ISO8601} %p [%t] %c - %m%n\" /> </Console> </Appenders> <Loggers> <Root level = \"info\" > <AppenderRef ref = \"Console\" /> </Root> </Loggers> </Configuration> \u8be5\u6587\u4ef6\u8be6\u7ec6\u914d\u7f6e\u53ef\u53c2\u8003 log4j \u5b98\u7f51\u8fdb\u884c","title":"\u65e5\u5fd7\u914d\u7f6e"},{"location":"apache/druid/action/configuration_common_hdfs.html","tags":["Apache","Druid","\u5927\u6570\u636e"],"text":"Note \u4ee5\u4e0b\u64cd\u4f5c\u9700\u8981\u8fdb\u5165druid-io\u5b89\u88c5\u6587\u4ef6\u7684\u6839\u76ee\u5f55\u4e0b\u64cd\u4f5c\uff0c\u6bd4\u5982\u6211\u7684druid-io\u5b89\u88c5\u76ee\u5f55\u4e3a\uff1a /hadoop/dc/druid-0.9.1.1 \u90a3\u4e48\u6211\u4eec\u9700\u8981\u64cd\u4f5c cd /hadoop/dc/druid-0.9.1.1 \u4fee\u6539Druid\u914d\u7f6e \u00b6 \u4fee\u6539 _common/common.runtime.properties \u914d\u7f6e\u6587\u4ef6 vim _common / common . runtime . properties \u4fee\u6539\u6587\u4ef6\u4e2d druid.storage \u914d\u7f6e\u4fe1\u606f\u4e3a\u4ee5\u4e0b\u5185\u5bb9 druid . extensions . hadoopDependenciesDir =/ hadoop / dc / druid / hadoop - dependencies / hadoop - client / 2.7.3 druid . storage . type = hdfs druid . storage . storageDirectory = hdfs : //nameservice1/druid/segments # \u6ce8\u91ca\u6389\u539f\u6765\u7684\u672c\u5730\u5b58\u50a8 # druid . indexer . logs . type = file # druid . indexer . logs . directory =/ hadoop / dc / indexing - logs # druid . storage . type = local # druid . storage . storageDirectory =/ hadoop / dc / segments druid.extensions.hadoopDependenciesDir : \u7528\u4e8e\u914d\u7f6eHadoop\u76f8\u5173\u4f9d\u8d56\u7684jar\u6587\u4ef6\u5939\u5730\u5740 druid.storage.storageDirectory : \u914d\u7f6e\u6570\u636e\u5b58\u50a8\u7684\u5730\u5740\uff0c\u5bf9\u4e8eha\u7684\u96c6\u7fa4\u6765\u8bf4\u53ea\u9700\u8981\u586b\u5199ha\u7684\u5730\u5740\u5373\u53ef \u914d\u7f6ehadoop\u4f9d\u8d56 \u00b6 \u6211\u4eec\u5728 druid.extensions.hadoopDependenciesDir \u914d\u7f6e\u4e2d\u6307\u5b9a\u4e86hadoop\u4f9d\u8d56\u7684\u4f4d\u7f6e\uff0c\u5c31\u9700\u8981\u6211\u4eec\u5c06\u4f9d\u8d56jar\u653e\u7f6e\u5230\u8be5\u4f4d\u7f6e \u62f7\u8d1dhadoop\u96c6\u7fa4\u76f8\u5173\u7684\u914d\u7f6e\u4fe1\u606f\u5230_common\u6587\u4ef6\u5939\u4e2d(\u6539\u914d\u7f6e\u6587\u4ef6\u5728\u96c6\u7fa4\u4e2d\u53ef\u4e0b\u8f7dCDH or HDP\u5747\u53ef) mv core - site . xml / hadoop / dc / druid / conf / druid / _common / mv hdfs - site . xml / hadoop / dc / druid / conf / druid / _common / mv mapred - site . xml / hadoop / dc / druid / conf / druid / _common / mv yarn - site . xml / hadoop / dc / druid / conf / druid / _common / \u5c06hadoop\u76f8\u5173\u7684\u4f9d\u8d56jar\u62f7\u8d1d\u5230 druid.extensions.hadoopDependenciesDir \u914d\u7f6e\u7684\u76ee\u5f55\u4e2d\u5373\u53ef Note \u5982\u679c\u914d\u7f6e\u6587\u4ef6\u4e2d\u6709\u5176\u4ed6\u7684\u96c6\u6210\uff0c\u5217\u8868\u4e2d\u7684\u53ea\u53ef\u80fd\u4f1a\u66f4\u591a\u3002 Danger \u4fee\u6539\u914d\u7f6e\u540e\u91cd\u542f\u5404\u4e2a\u8282\u70b9\u670d\u52a1\u624d\u53ef\u751f\u6548","title":"common\u5168\u5c40\u914d\u7f6e(HDFS)"},{"location":"apache/druid/action/configuration_common_hdfs.html#druid","text":"\u4fee\u6539 _common/common.runtime.properties \u914d\u7f6e\u6587\u4ef6 vim _common / common . runtime . properties \u4fee\u6539\u6587\u4ef6\u4e2d druid.storage \u914d\u7f6e\u4fe1\u606f\u4e3a\u4ee5\u4e0b\u5185\u5bb9 druid . extensions . hadoopDependenciesDir =/ hadoop / dc / druid / hadoop - dependencies / hadoop - client / 2.7.3 druid . storage . type = hdfs druid . storage . storageDirectory = hdfs : //nameservice1/druid/segments # \u6ce8\u91ca\u6389\u539f\u6765\u7684\u672c\u5730\u5b58\u50a8 # druid . indexer . logs . type = file # druid . indexer . logs . directory =/ hadoop / dc / indexing - logs # druid . storage . type = local # druid . storage . storageDirectory =/ hadoop / dc / segments druid.extensions.hadoopDependenciesDir : \u7528\u4e8e\u914d\u7f6eHadoop\u76f8\u5173\u4f9d\u8d56\u7684jar\u6587\u4ef6\u5939\u5730\u5740 druid.storage.storageDirectory : \u914d\u7f6e\u6570\u636e\u5b58\u50a8\u7684\u5730\u5740\uff0c\u5bf9\u4e8eha\u7684\u96c6\u7fa4\u6765\u8bf4\u53ea\u9700\u8981\u586b\u5199ha\u7684\u5730\u5740\u5373\u53ef","title":"\u4fee\u6539Druid\u914d\u7f6e"},{"location":"apache/druid/action/configuration_common_hdfs.html#hadoop","text":"\u6211\u4eec\u5728 druid.extensions.hadoopDependenciesDir \u914d\u7f6e\u4e2d\u6307\u5b9a\u4e86hadoop\u4f9d\u8d56\u7684\u4f4d\u7f6e\uff0c\u5c31\u9700\u8981\u6211\u4eec\u5c06\u4f9d\u8d56jar\u653e\u7f6e\u5230\u8be5\u4f4d\u7f6e \u62f7\u8d1dhadoop\u96c6\u7fa4\u76f8\u5173\u7684\u914d\u7f6e\u4fe1\u606f\u5230_common\u6587\u4ef6\u5939\u4e2d(\u6539\u914d\u7f6e\u6587\u4ef6\u5728\u96c6\u7fa4\u4e2d\u53ef\u4e0b\u8f7dCDH or HDP\u5747\u53ef) mv core - site . xml / hadoop / dc / druid / conf / druid / _common / mv hdfs - site . xml / hadoop / dc / druid / conf / druid / _common / mv mapred - site . xml / hadoop / dc / druid / conf / druid / _common / mv yarn - site . xml / hadoop / dc / druid / conf / druid / _common / \u5c06hadoop\u76f8\u5173\u7684\u4f9d\u8d56jar\u62f7\u8d1d\u5230 druid.extensions.hadoopDependenciesDir \u914d\u7f6e\u7684\u76ee\u5f55\u4e2d\u5373\u53ef Note \u5982\u679c\u914d\u7f6e\u6587\u4ef6\u4e2d\u6709\u5176\u4ed6\u7684\u96c6\u6210\uff0c\u5217\u8868\u4e2d\u7684\u53ea\u53ef\u80fd\u4f1a\u66f4\u591a\u3002 Danger \u4fee\u6539\u914d\u7f6e\u540e\u91cd\u542f\u5404\u4e2a\u8282\u70b9\u670d\u52a1\u624d\u53ef\u751f\u6548","title":"\u914d\u7f6ehadoop\u4f9d\u8d56"},{"location":"apache/druid/action/configuration_common_mysql.html","tags":["Apache","Druid","\u5927\u6570\u636e"],"text":"Note \u4ee5\u4e0b\u64cd\u4f5c\u9700\u8981\u8fdb\u5165druid-io\u5b89\u88c5\u6587\u4ef6\u7684\u6839\u76ee\u5f55\u4e0b\u64cd\u4f5c\uff0c\u6bd4\u5982\u6211\u7684druid-io\u5b89\u88c5\u76ee\u5f55\u4e3a\uff1a /hadoop/dc/druid-0.9.1.1 \u90a3\u4e48\u6211\u4eec\u9700\u8981\u64cd\u4f5c cd /hadoop/dc/druid-0.9.1.1 \u914d\u7f6eMySQL \u00b6 \u7531\u4e8eMySQL\u8fde\u63a5\u914d\u7f6e\u9ed8\u8ba4\u5728Druid\u4e2d\u6ca1\u6709\u88ab\u6253\u5305\u8fdb\u6765\uff0c\u6240\u4ee5\u9700\u8981\u6211\u4eec\u624b\u52a8\u53bb\u8fdb\u884cMySQL\u5ba2\u6237\u7aef\u8fde\u63a5\u5305\u7684\u4e0b\u8f7d wget https : //www.mvnjar.com/central/maven2/io/druid/extensions/mysql-metadata-storage/0.9.1/mysql-metadata-storage-0.9.1.jar wget http : //central.maven.org/maven2/mysql/mysql-connector-java/5.1.38/mysql-connector-java-5.1.38.jar mysql-metadata-storage-<DruidVersion>.jar : Druid\u8fde\u63a5MySQL\u5b58\u50a8\u5de5\u5177\u7c7b mysql-connector-java-<MYSQLVERSION>.jar : MySQL JDBC\u8fde\u63a5\u5668 Warning \u6ce8\u610f\u6bcf\u4e2ajar\u7684\u7248\u672c\uff0c\u7248\u672c\u4e00\u5b9a\u8981\u5bf9\u5e94\uff0c\u5426\u5219\u65e0\u6cd5\u8fde\u63a5 \u4fee\u6539Druid\u914d\u7f6e \u00b6 \u4fee\u6539 common.runtime.properties \u914d\u7f6e\u6587\u4ef6\uff0c\u5728\u6587\u4ef6\u4e2d\u627e\u5230 druid.extensions.loadList \u53c2\u6570\uff0c\u5728\u8be5\u53c2\u6570\u7684\u5217\u8868\u4e2d\u589e\u52a0 mysql-metadata-storage \u914d\u7f6e\uff0c\u4fee\u6539\u540e\u7684\u5185\u5bb9\u5927\u6982\u5982\u4e0b druid . extensions . loadList =[ \"druid-kafka-eight\" , \"druid-s3-extensions\" , \"druid-histogram\" , \"druid-datasketches\" , \"druid-lookups-cached-global\" , \"mysql-metadata-storage\" ] Note \u5982\u679c\u914d\u7f6e\u6587\u4ef6\u4e2d\u6709\u5176\u4ed6\u7684\u96c6\u6210\uff0c\u5217\u8868\u4e2d\u7684\u53ea\u53ef\u80fd\u4f1a\u66f4\u591a\u3002 Danger \u4fee\u6539\u914d\u7f6e\u540e\u91cd\u542f\u5404\u4e2a\u8282\u70b9\u670d\u52a1\u624d\u53ef\u751f\u6548","title":"common\u5168\u5c40\u914d\u7f6e(MySQL)"},{"location":"apache/druid/action/configuration_common_mysql.html#mysql","text":"\u7531\u4e8eMySQL\u8fde\u63a5\u914d\u7f6e\u9ed8\u8ba4\u5728Druid\u4e2d\u6ca1\u6709\u88ab\u6253\u5305\u8fdb\u6765\uff0c\u6240\u4ee5\u9700\u8981\u6211\u4eec\u624b\u52a8\u53bb\u8fdb\u884cMySQL\u5ba2\u6237\u7aef\u8fde\u63a5\u5305\u7684\u4e0b\u8f7d wget https : //www.mvnjar.com/central/maven2/io/druid/extensions/mysql-metadata-storage/0.9.1/mysql-metadata-storage-0.9.1.jar wget http : //central.maven.org/maven2/mysql/mysql-connector-java/5.1.38/mysql-connector-java-5.1.38.jar mysql-metadata-storage-<DruidVersion>.jar : Druid\u8fde\u63a5MySQL\u5b58\u50a8\u5de5\u5177\u7c7b mysql-connector-java-<MYSQLVERSION>.jar : MySQL JDBC\u8fde\u63a5\u5668 Warning \u6ce8\u610f\u6bcf\u4e2ajar\u7684\u7248\u672c\uff0c\u7248\u672c\u4e00\u5b9a\u8981\u5bf9\u5e94\uff0c\u5426\u5219\u65e0\u6cd5\u8fde\u63a5","title":"\u914d\u7f6eMySQL"},{"location":"apache/druid/action/configuration_common_mysql.html#druid","text":"\u4fee\u6539 common.runtime.properties \u914d\u7f6e\u6587\u4ef6\uff0c\u5728\u6587\u4ef6\u4e2d\u627e\u5230 druid.extensions.loadList \u53c2\u6570\uff0c\u5728\u8be5\u53c2\u6570\u7684\u5217\u8868\u4e2d\u589e\u52a0 mysql-metadata-storage \u914d\u7f6e\uff0c\u4fee\u6539\u540e\u7684\u5185\u5bb9\u5927\u6982\u5982\u4e0b druid . extensions . loadList =[ \"druid-kafka-eight\" , \"druid-s3-extensions\" , \"druid-histogram\" , \"druid-datasketches\" , \"druid-lookups-cached-global\" , \"mysql-metadata-storage\" ] Note \u5982\u679c\u914d\u7f6e\u6587\u4ef6\u4e2d\u6709\u5176\u4ed6\u7684\u96c6\u6210\uff0c\u5217\u8868\u4e2d\u7684\u53ea\u53ef\u80fd\u4f1a\u66f4\u591a\u3002 Danger \u4fee\u6539\u914d\u7f6e\u540e\u91cd\u542f\u5404\u4e2a\u8282\u70b9\u670d\u52a1\u624d\u53ef\u751f\u6548","title":"\u4fee\u6539Druid\u914d\u7f6e"},{"location":"apache/druid/action/configuration_node_broker.html","tags":["Apache","Druid","\u5927\u6570\u636e"],"text":"Note \u4ee5\u4e0b\u64cd\u4f5c\u9700\u8981\u8fdb\u5165druid-io\u5b89\u88c5\u6587\u4ef6\u7684\u6839\u76ee\u5f55\u4e0b\u64cd\u4f5c\uff0c\u6bd4\u5982\u6211\u7684druid-io\u5b89\u88c5\u76ee\u5f55\u4e3a\uff1a /hadoop/dc/druid-0.9.1.1 \u90a3\u4e48\u6211\u4eec\u9700\u8981\u64cd\u4f5c cd /hadoop/dc/druid-0.9.1.1 Jvm\u914d\u7f6e \u00b6 \u7f16\u8f91 jvm.conf \u914d\u7f6e\u6587\u4ef6 vim conf/druid/broker/jvm.config \u5728\u6587\u4ef6\u4e2d\u5199\u5165\u4ee5\u4e0b\u5185\u5bb9: -server -Xms12g -Xmx12g -XX:MaxDirectMemorySize = 2048m -Duser.timezone = UTC -Dfile.encoding = UTF-8 -Djava.io.tmpdir = /hadoop/dc/temp/ -Djava.util.logging.manager = org.apache.logging.log4j.jul.LogManager -Xms : \u8bbe\u7f6e\u521d\u59cb\u7684(\u6700\u5c0f\u7684)Heap\u7684\u5927\u5c0f \u6b64\u503c\u53ef\u4ee5\u8bbe\u7f6e\u4e0e-Xmx\u76f8\u540c\uff0c\u4ee5\u907f\u514d\u6bcf\u6b21\u5783\u573e\u56de\u6536\u5b8c\u6210\u540eJVM\u91cd\u65b0\u5206\u914d\u5185\u5b58 -Xmx : \u8bbe\u7f6e\u6700\u5927Heap\u7684\u5927\u5c0f -XX:MaxDirectMemorySize : \u6b64\u53c2\u6570\u7684\u542b\u4e49\u662f\u5f53 Direct ByteBuffer \u5206\u914d\u7684\u5806\u5916\u5185\u5b58\u5230\u8fbe\u6307\u5b9a\u5927\u5c0f\u540e\uff0c\u5373\u89e6\u53d1Full GC\u3002\u6ce8\u610f\u8be5\u503c\u662f\u6709\u4e0a\u9650\u7684\uff0c\u9ed8\u8ba4\u662f 64M \uff0c\u6700\u5927\u4e3a sun.misc.VM.maxDirectMemory() \uff0c\u5728\u7a0b\u5e8f\u4e2d\u4e2d\u53ef\u4ee5\u83b7\u5f97 -XX:MaxDirectMemorySize \u7684\u8bbe\u7f6e\u7684\u503c,\u4e0d\u8981\u8bbe\u7f6e\u8fc7\u5927\uff0c\u5408\u7406\u5373\u53ef\u3002 -Duser.timezone : \u65f6\u533a\u7c7b\u578b -Dfile.encoding : \u6587\u4ef6\u7f16\u7801 -Djava.io.tmpdir : \u7cfb\u7edf\u7f13\u51b2\u4e34\u65f6\u76ee\u5f55 -Djava.util.logging.manager : Log\u76d1\u63a7\u7ba1\u7406\u5de5\u5177\u7c7b \u8282\u70b9\u914d\u7f6e \u00b6 \u7f16\u8f91 runtime.properties \u914d\u7f6e\u6587\u4ef6 vim conf/druid/broker/runtime.properties \u5728\u6587\u4ef6\u4e2d\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9: druid.service = druid/broker druid.port = 8082 # HTTP server threads druid.broker.http.numConnections = 5 druid.server.http.numThreads = 12 # Processing threads and buffers druid.processing.buffer.sizeBytes = 236870912 druid.processing.numThreads = 8 # Query cache druid.broker.cache.useCache = true druid.broker.cache.populateCache = true druid.cache.type = local druid.cache.sizeInBytes = 20000000 druid.service : \u670d\u52a1\u540d\u79f0\u548c_common\u4e2d\u76f8\u5173\u8054 druid.port : \u5f53\u524d\u670d\u52a1\u7aef\u53e3 druid.broker.http.numConnections : http\u670d\u52a1\u7684\u8fde\u63a5\u6570 druid.server.http.numThreads : http\u670d\u52a1\u7684\u6700\u5927\u94fe\u63a5\u7ebf\u7a0b druid.processing.buffer.sizeBytes : druid-io\u8fdb\u7a0bbuffer\u7684\u5355\u7ebf\u7a0b\u5927\u5c0f\uff0c\u6ce8\u610f\u8be5\u6570\u503c*\u7ebf\u7a0b\u6570\u5927\u5c0f\u4e0d\u5f97\u8d85\u8fc7jvm\u4e2d\u7684xmx\u914d\u7f6e\u6570\u636e druid.processing.numThreads : druid-io\u8fdb\u7a0bbuffer\u7684\u7ebf\u7a0b\u603b\u6570 druid.broker.cache.useCache : \u6b64\u6b21\u67e5\u8be2\u662f\u5426\u5229\u7528\u67e5\u8be2\u7f13\u5b58\uff0c\u5982\u624b\u52a8\u6307\u5b9a\uff0c\u5219\u4f1a\u8986\u76d6\u67e5\u8be2\u8282\u70b9\u6216\u5386\u53f2\u8282\u70b9\u914d\u7f6e\u7684\u503c druid.broker.cache.populateCache : \u6b64\u6b21\u67e5\u8be2\u7684\u7ed3\u679c\u662f\u5426\u7f13\u5b58\uff0c\u5982\u679c\u624b\u52a8\u6307\u5b9a\uff0c\u5219\u4f1a\u8986\u76d6\u67e5\u8be2\u8282\u70b9\u6216\u5386\u53f2\u8282\u70b9\u914d\u7f6e\u7684\u503c druid.cache.type : druid-io\u7684\u7f13\u51b2\u7c7b\u578b\uff0c\u9ed8\u8ba4\u4e3alocal\uff0c\u53ef\u914d\u7f6e\u4e3aredis\u7b49 druid.cache.sizeInBytes : druid-io\u7684\u7f13\u51b2\u5927\u5c0f \u547d\u4ee4\u884c \u00b6 Warning \u670d\u52a1\u542f\u52a8\u547d\u4ee4\u811a\u672c(\u8fdb\u5165druid-io\u5b89\u88c5\u6587\u4ef6\u7684\u6839\u76ee\u5f55) \u57fa\u672c\u542f\u52a8\u65b9\u5f0f java ` cat conf/druid/broker/jvm.config | xargs ` -cp \"conf/druid/_common:conf/druid/broker:lib/*\" io.druid.cli.Main server broker \u540e\u53f0\u542f\u52a8\u65b9\u5f0f nohup java ` cat conf/druid/broker/jvm.config | xargs ` -cp \"conf/druid/_common:conf/druid/broker:lib/*\" io.druid.cli.Main server broker > broker.log 2 > & 1 &","title":"Broker\u8282\u70b9\u914d\u7f6e\u90e8\u7f72"},{"location":"apache/druid/action/configuration_node_broker.html#jvm","text":"\u7f16\u8f91 jvm.conf \u914d\u7f6e\u6587\u4ef6 vim conf/druid/broker/jvm.config \u5728\u6587\u4ef6\u4e2d\u5199\u5165\u4ee5\u4e0b\u5185\u5bb9: -server -Xms12g -Xmx12g -XX:MaxDirectMemorySize = 2048m -Duser.timezone = UTC -Dfile.encoding = UTF-8 -Djava.io.tmpdir = /hadoop/dc/temp/ -Djava.util.logging.manager = org.apache.logging.log4j.jul.LogManager -Xms : \u8bbe\u7f6e\u521d\u59cb\u7684(\u6700\u5c0f\u7684)Heap\u7684\u5927\u5c0f \u6b64\u503c\u53ef\u4ee5\u8bbe\u7f6e\u4e0e-Xmx\u76f8\u540c\uff0c\u4ee5\u907f\u514d\u6bcf\u6b21\u5783\u573e\u56de\u6536\u5b8c\u6210\u540eJVM\u91cd\u65b0\u5206\u914d\u5185\u5b58 -Xmx : \u8bbe\u7f6e\u6700\u5927Heap\u7684\u5927\u5c0f -XX:MaxDirectMemorySize : \u6b64\u53c2\u6570\u7684\u542b\u4e49\u662f\u5f53 Direct ByteBuffer \u5206\u914d\u7684\u5806\u5916\u5185\u5b58\u5230\u8fbe\u6307\u5b9a\u5927\u5c0f\u540e\uff0c\u5373\u89e6\u53d1Full GC\u3002\u6ce8\u610f\u8be5\u503c\u662f\u6709\u4e0a\u9650\u7684\uff0c\u9ed8\u8ba4\u662f 64M \uff0c\u6700\u5927\u4e3a sun.misc.VM.maxDirectMemory() \uff0c\u5728\u7a0b\u5e8f\u4e2d\u4e2d\u53ef\u4ee5\u83b7\u5f97 -XX:MaxDirectMemorySize \u7684\u8bbe\u7f6e\u7684\u503c,\u4e0d\u8981\u8bbe\u7f6e\u8fc7\u5927\uff0c\u5408\u7406\u5373\u53ef\u3002 -Duser.timezone : \u65f6\u533a\u7c7b\u578b -Dfile.encoding : \u6587\u4ef6\u7f16\u7801 -Djava.io.tmpdir : \u7cfb\u7edf\u7f13\u51b2\u4e34\u65f6\u76ee\u5f55 -Djava.util.logging.manager : Log\u76d1\u63a7\u7ba1\u7406\u5de5\u5177\u7c7b","title":"Jvm\u914d\u7f6e"},{"location":"apache/druid/action/configuration_node_broker.html#_1","text":"\u7f16\u8f91 runtime.properties \u914d\u7f6e\u6587\u4ef6 vim conf/druid/broker/runtime.properties \u5728\u6587\u4ef6\u4e2d\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9: druid.service = druid/broker druid.port = 8082 # HTTP server threads druid.broker.http.numConnections = 5 druid.server.http.numThreads = 12 # Processing threads and buffers druid.processing.buffer.sizeBytes = 236870912 druid.processing.numThreads = 8 # Query cache druid.broker.cache.useCache = true druid.broker.cache.populateCache = true druid.cache.type = local druid.cache.sizeInBytes = 20000000 druid.service : \u670d\u52a1\u540d\u79f0\u548c_common\u4e2d\u76f8\u5173\u8054 druid.port : \u5f53\u524d\u670d\u52a1\u7aef\u53e3 druid.broker.http.numConnections : http\u670d\u52a1\u7684\u8fde\u63a5\u6570 druid.server.http.numThreads : http\u670d\u52a1\u7684\u6700\u5927\u94fe\u63a5\u7ebf\u7a0b druid.processing.buffer.sizeBytes : druid-io\u8fdb\u7a0bbuffer\u7684\u5355\u7ebf\u7a0b\u5927\u5c0f\uff0c\u6ce8\u610f\u8be5\u6570\u503c*\u7ebf\u7a0b\u6570\u5927\u5c0f\u4e0d\u5f97\u8d85\u8fc7jvm\u4e2d\u7684xmx\u914d\u7f6e\u6570\u636e druid.processing.numThreads : druid-io\u8fdb\u7a0bbuffer\u7684\u7ebf\u7a0b\u603b\u6570 druid.broker.cache.useCache : \u6b64\u6b21\u67e5\u8be2\u662f\u5426\u5229\u7528\u67e5\u8be2\u7f13\u5b58\uff0c\u5982\u624b\u52a8\u6307\u5b9a\uff0c\u5219\u4f1a\u8986\u76d6\u67e5\u8be2\u8282\u70b9\u6216\u5386\u53f2\u8282\u70b9\u914d\u7f6e\u7684\u503c druid.broker.cache.populateCache : \u6b64\u6b21\u67e5\u8be2\u7684\u7ed3\u679c\u662f\u5426\u7f13\u5b58\uff0c\u5982\u679c\u624b\u52a8\u6307\u5b9a\uff0c\u5219\u4f1a\u8986\u76d6\u67e5\u8be2\u8282\u70b9\u6216\u5386\u53f2\u8282\u70b9\u914d\u7f6e\u7684\u503c druid.cache.type : druid-io\u7684\u7f13\u51b2\u7c7b\u578b\uff0c\u9ed8\u8ba4\u4e3alocal\uff0c\u53ef\u914d\u7f6e\u4e3aredis\u7b49 druid.cache.sizeInBytes : druid-io\u7684\u7f13\u51b2\u5927\u5c0f","title":"\u8282\u70b9\u914d\u7f6e"},{"location":"apache/druid/action/configuration_node_broker.html#_2","text":"Warning \u670d\u52a1\u542f\u52a8\u547d\u4ee4\u811a\u672c(\u8fdb\u5165druid-io\u5b89\u88c5\u6587\u4ef6\u7684\u6839\u76ee\u5f55) \u57fa\u672c\u542f\u52a8\u65b9\u5f0f java ` cat conf/druid/broker/jvm.config | xargs ` -cp \"conf/druid/_common:conf/druid/broker:lib/*\" io.druid.cli.Main server broker \u540e\u53f0\u542f\u52a8\u65b9\u5f0f nohup java ` cat conf/druid/broker/jvm.config | xargs ` -cp \"conf/druid/_common:conf/druid/broker:lib/*\" io.druid.cli.Main server broker > broker.log 2 > & 1 &","title":"\u547d\u4ee4\u884c"},{"location":"apache/druid/action/configuration_node_coordinator.html","tags":["Apache","Druid","\u5927\u6570\u636e"],"text":"Note \u4ee5\u4e0b\u64cd\u4f5c\u9700\u8981\u8fdb\u5165druid-io\u5b89\u88c5\u6587\u4ef6\u7684\u6839\u76ee\u5f55\u4e0b\u64cd\u4f5c\uff0c\u6bd4\u5982\u6211\u7684druid-io\u5b89\u88c5\u76ee\u5f55\u4e3a\uff1a /hadoop/dc/druid-0.9.1.1 \u90a3\u4e48\u6211\u4eec\u9700\u8981\u64cd\u4f5c cd /hadoop/dc/druid-0.9.1.1 Jvm\u914d\u7f6e \u00b6 \u7f16\u8f91 jvm.conf \u914d\u7f6e\u6587\u4ef6 vim conf/druid/broker/jvm.config \u5728\u6587\u4ef6\u4e2d\u5199\u5165\u4ee5\u4e0b\u5185\u5bb9: -server -Xms3g -Xmx3g -Duser.timezone = UTC -Dfile.encoding = UTF-8 -Djava.io.tmpdir = var/tmp -Djava.util.logging.manager = org.apache.logging.log4j.jul.LogManager -Dderby.stream.error.file = var/druid/derby.log -Xms : \u8bbe\u7f6e\u521d\u59cb\u7684(\u6700\u5c0f\u7684)Heap\u7684\u5927\u5c0f \u6b64\u503c\u53ef\u4ee5\u8bbe\u7f6e\u4e0e -Xmx \u76f8\u540c\uff0c\u4ee5\u907f\u514d\u6bcf\u6b21\u5783\u573e\u56de\u6536\u5b8c\u6210\u540eJVM\u91cd\u65b0\u5206\u914d\u5185\u5b58 -Xmx : \u8bbe\u7f6e\u6700\u5927Heap\u7684\u5927\u5c0f -Duser.timezone : \u65f6\u533a\u7c7b\u578b -Dfile.encoding : \u6587\u4ef6\u7f16\u7801 -Djava.io.tmpdir : \u7cfb\u7edf\u7f13\u51b2\u4e34\u65f6\u76ee\u5f55 -Djava.util.logging.manager : Log\u76d1\u63a7\u7ba1\u7406\u5de5\u5177\u7c7b -Dderby.stream.error.file : \u5185\u7f6e\u6570\u636e\u5e93\u51fa\u73b0\u9519\u8bef\u5199\u5165\u7684\u6587\u4ef6 \u8282\u70b9\u914d\u7f6e \u00b6 vim conf / druid / coordinator / runtime . properties \u4fee\u6539\u4e3a\u4ee5\u4e0b\u5185\u5bb9 druid . service = druid / coordinator druid . port = 8081 druid . coordinator . startDelay = PT30S druid . coordinator . period = PT30S druid.service : \u670d\u52a1\u540d\u79f0\u548c _common \u4e2d\u76f8\u5173\u8054 druid.port : \u5f53\u524d\u670d\u52a1\u7aef\u53e3 druid.coordinator.startDelay : \u5ef6\u8fdf\u534f\u8c03\u6570\u636e\u8f7d\u5165\uff0c\u8fd9\u79cd\u5ef6\u8fdf\u662f\u4e00\u79cd\u7834\u89e3\uff0c\u8ba9\u5b83\u6709\u8db3\u591f\u7684\u65f6\u95f4\u76f8\u4fe1\u5b83\u62e5\u6709\u6240\u6709\u6570\u636e\u3002 druid.coordinator.period : \u534f\u8c03\u5668\u7684\u8fd0\u884c\u671f\u3002\u534f\u8c03\u5668\u901a\u8fc7\u5728\u5b58\u50a8\u5668\u4e2d\u7ef4\u62a4\u5f53\u524d\u72b6\u6001\u5e76\u5b9a\u671f\u67e5\u770b\u53ef\u7528\u7684\u6bb5\u96c6\u548c\u670d\u52a1\u7684\u6bb5\u6765\u8fdb\u884c\u64cd\u4f5c\uff0c\u4ee5\u51b3\u5b9a\u662f\u5426\u9700\u8981\u5bf9\u6570\u636e\u62d3\u6251\u8fdb\u884c\u4efb\u4f55\u66f4\u6539\u3002\u6b64\u5c5e\u6027\u8bbe\u7f6e\u6bcf\u6b21\u8fd0\u884c\u4e4b\u95f4\u7684\u5ef6\u8fdf\u3002 \u547d\u4ee4\u884c \u00b6 Warning \u670d\u52a1\u542f\u52a8\u547d\u4ee4\u811a\u672c(\u8fdb\u5165druid-io\u5b89\u88c5\u6587\u4ef6\u7684\u6839\u76ee\u5f55) \u57fa\u672c\u542f\u52a8\u65b9\u5f0f java ` cat conf/druid/coordinator/jvm.config | xargs ` -cp \"conf/druid/_common:conf/druid/coordinator:lib/*\" io.druid.cli.Main server coordinator \u540e\u53f0\u542f\u52a8\u65b9\u5f0f nohup java ` cat conf/druid/coordinator/jvm.config | xargs ` -cp \"conf/druid/_common:conf/druid/coordinator:lib/*\" io.druid.cli.Main server coordinator >coordinator.log 2 > & 1 &","title":"Coordinator\u8282\u70b9\u914d\u7f6e\u90e8\u7f72"},{"location":"apache/druid/action/configuration_node_coordinator.html#jvm","text":"\u7f16\u8f91 jvm.conf \u914d\u7f6e\u6587\u4ef6 vim conf/druid/broker/jvm.config \u5728\u6587\u4ef6\u4e2d\u5199\u5165\u4ee5\u4e0b\u5185\u5bb9: -server -Xms3g -Xmx3g -Duser.timezone = UTC -Dfile.encoding = UTF-8 -Djava.io.tmpdir = var/tmp -Djava.util.logging.manager = org.apache.logging.log4j.jul.LogManager -Dderby.stream.error.file = var/druid/derby.log -Xms : \u8bbe\u7f6e\u521d\u59cb\u7684(\u6700\u5c0f\u7684)Heap\u7684\u5927\u5c0f \u6b64\u503c\u53ef\u4ee5\u8bbe\u7f6e\u4e0e -Xmx \u76f8\u540c\uff0c\u4ee5\u907f\u514d\u6bcf\u6b21\u5783\u573e\u56de\u6536\u5b8c\u6210\u540eJVM\u91cd\u65b0\u5206\u914d\u5185\u5b58 -Xmx : \u8bbe\u7f6e\u6700\u5927Heap\u7684\u5927\u5c0f -Duser.timezone : \u65f6\u533a\u7c7b\u578b -Dfile.encoding : \u6587\u4ef6\u7f16\u7801 -Djava.io.tmpdir : \u7cfb\u7edf\u7f13\u51b2\u4e34\u65f6\u76ee\u5f55 -Djava.util.logging.manager : Log\u76d1\u63a7\u7ba1\u7406\u5de5\u5177\u7c7b -Dderby.stream.error.file : \u5185\u7f6e\u6570\u636e\u5e93\u51fa\u73b0\u9519\u8bef\u5199\u5165\u7684\u6587\u4ef6","title":"Jvm\u914d\u7f6e"},{"location":"apache/druid/action/configuration_node_coordinator.html#_1","text":"vim conf / druid / coordinator / runtime . properties \u4fee\u6539\u4e3a\u4ee5\u4e0b\u5185\u5bb9 druid . service = druid / coordinator druid . port = 8081 druid . coordinator . startDelay = PT30S druid . coordinator . period = PT30S druid.service : \u670d\u52a1\u540d\u79f0\u548c _common \u4e2d\u76f8\u5173\u8054 druid.port : \u5f53\u524d\u670d\u52a1\u7aef\u53e3 druid.coordinator.startDelay : \u5ef6\u8fdf\u534f\u8c03\u6570\u636e\u8f7d\u5165\uff0c\u8fd9\u79cd\u5ef6\u8fdf\u662f\u4e00\u79cd\u7834\u89e3\uff0c\u8ba9\u5b83\u6709\u8db3\u591f\u7684\u65f6\u95f4\u76f8\u4fe1\u5b83\u62e5\u6709\u6240\u6709\u6570\u636e\u3002 druid.coordinator.period : \u534f\u8c03\u5668\u7684\u8fd0\u884c\u671f\u3002\u534f\u8c03\u5668\u901a\u8fc7\u5728\u5b58\u50a8\u5668\u4e2d\u7ef4\u62a4\u5f53\u524d\u72b6\u6001\u5e76\u5b9a\u671f\u67e5\u770b\u53ef\u7528\u7684\u6bb5\u96c6\u548c\u670d\u52a1\u7684\u6bb5\u6765\u8fdb\u884c\u64cd\u4f5c\uff0c\u4ee5\u51b3\u5b9a\u662f\u5426\u9700\u8981\u5bf9\u6570\u636e\u62d3\u6251\u8fdb\u884c\u4efb\u4f55\u66f4\u6539\u3002\u6b64\u5c5e\u6027\u8bbe\u7f6e\u6bcf\u6b21\u8fd0\u884c\u4e4b\u95f4\u7684\u5ef6\u8fdf\u3002","title":"\u8282\u70b9\u914d\u7f6e"},{"location":"apache/druid/action/configuration_node_coordinator.html#_2","text":"Warning \u670d\u52a1\u542f\u52a8\u547d\u4ee4\u811a\u672c(\u8fdb\u5165druid-io\u5b89\u88c5\u6587\u4ef6\u7684\u6839\u76ee\u5f55) \u57fa\u672c\u542f\u52a8\u65b9\u5f0f java ` cat conf/druid/coordinator/jvm.config | xargs ` -cp \"conf/druid/_common:conf/druid/coordinator:lib/*\" io.druid.cli.Main server coordinator \u540e\u53f0\u542f\u52a8\u65b9\u5f0f nohup java ` cat conf/druid/coordinator/jvm.config | xargs ` -cp \"conf/druid/_common:conf/druid/coordinator:lib/*\" io.druid.cli.Main server coordinator >coordinator.log 2 > & 1 &","title":"\u547d\u4ee4\u884c"},{"location":"apache/druid/action/configuration_node_historical.html","tags":["Apache","Druid","\u5927\u6570\u636e"],"text":"Note \u4ee5\u4e0b\u64cd\u4f5c\u9700\u8981\u8fdb\u5165druid-io\u5b89\u88c5\u6587\u4ef6\u7684\u6839\u76ee\u5f55\u4e0b\u64cd\u4f5c\uff0c\u6bd4\u5982\u6211\u7684druid-io\u5b89\u88c5\u76ee\u5f55\u4e3a\uff1a /hadoop/dc/druid-0.9.1.1 \u90a3\u4e48\u6211\u4eec\u9700\u8981\u64cd\u4f5c cd /hadoop/dc/druid-0.9.1.1 Jvm\u914d\u7f6e \u00b6 \u7f16\u8f91 jvm.conf \u914d\u7f6e\u6587\u4ef6 vim conf / druid / historical / jvm . config \u4fee\u6539\u4e3a\u4ee5\u4e0b\u5185\u5bb9 - server - Xms8g - Xmx8g - XX : MaxDirectMemorySize = 4096 m - Duser . timezone = UTC - Dfile . encoding = UTF - 8 - Djava . io . tmpdir = var / tmp - Djava . util . logging . manager = org . apache . logging . log4j . jul . LogManager -Xms : \u8bbe\u7f6e\u521d\u59cb\u7684(\u6700\u5c0f\u7684)Heap\u7684\u5927\u5c0f \u6b64\u503c\u53ef\u4ee5\u8bbe\u7f6e\u4e0e -Xmx \u76f8\u540c\uff0c\u4ee5\u907f\u514d\u6bcf\u6b21\u5783\u573e\u56de\u6536\u5b8c\u6210\u540eJVM\u91cd\u65b0\u5206\u914d\u5185\u5b58 -Xmx : \u8bbe\u7f6e\u6700\u5927Heap\u7684\u5927\u5c0f -XX:MaxDirectMemorySize : \u6b64\u53c2\u6570\u7684\u542b\u4e49\u662f\u5f53 Direct ByteBuffer \u5206\u914d\u7684\u5806\u5916\u5185\u5b58\u5230\u8fbe\u6307\u5b9a\u5927\u5c0f\u540e\uff0c\u5373\u89e6\u53d1Full GC\u3002\u6ce8\u610f\u8be5\u503c\u662f\u6709\u4e0a\u9650\u7684\uff0c\u9ed8\u8ba4\u662f64M\uff0c\u6700\u5927\u4e3a sun.misc.VM.maxDirectMemory() \uff0c\u5728\u7a0b\u5e8f\u4e2d\u4e2d\u53ef\u4ee5\u83b7\u5f97 -XX:MaxDirectMemorySize \u7684\u8bbe\u7f6e\u7684\u503c,\u4e0d\u8981\u8bbe\u7f6e\u8fc7\u5927\uff0c\u5408\u7406\u5373\u53ef\u3002 -Duser.timezone : \u65f6\u533a\u7c7b\u578b -Dfile.encoding : \u6587\u4ef6\u7f16\u7801 -Djava.io.tmpdir : \u7cfb\u7edf\u7f13\u51b2\u4e34\u65f6\u76ee\u5f55 -Djava.util.logging.manager : Log\u76d1\u63a7\u7ba1\u7406\u5de5\u5177\u7c7b \u8282\u70b9\u914d\u7f6e \u00b6 vim conf / druid / historical / runtime . properties \u4fee\u6539\u4e3a\u4ee5\u4e0b\u5185\u5bb9 druid . service = druid / historical druid . port = 8083 # HTTP server threads druid . server . http . numThreads = 25 # Processing threads and buffers druid . processing . buffer . sizeBytes = 536870912 druid . processing . numThreads = 7 # Segment storage druid . segmentCache . locations =[ { \"path\" : \"var/druid/segment-cache\" , \"maxSize\" \\ : 130000000000 } ] druid . server . maxSize = 130000000000 druid.service : \u670d\u52a1\u540d\u79f0\u548c _common \u4e2d\u76f8\u5173\u8054 druid.port : \u5f53\u524d\u670d\u52a1\u7aef\u53e3 druid.server.http.numThreads : http\u670d\u52a1\u7684\u6700\u5927\u94fe\u63a5\u7ebf\u7a0b druid.processing.buffer.sizeBytes : druid-io\u8fdb\u7a0bbuffer\u7684\u5355\u7ebf\u7a0b\u5927\u5c0f\uff0c\u6ce8\u610f\u8be5\u6570\u503c*\u7ebf\u7a0b\u6570\u5927\u5c0f\u4e0d\u5f97\u8d85\u8fc7jvm\u4e2d\u7684xmx\u914d\u7f6e\u6570\u636e druid.processing.numThreads : druid-io\u8fdb\u7a0bbuffer\u7684\u7ebf\u7a0b\u603b\u6570 druid.segmentCache.locations : segment\u7f13\u51b2\u8def\u5f84\u5730\u5740\uff0c\u6700\u5927\u52a0\u8f7d\u5927\u5c0f\u5b57\u8282 druid.server.maxSize : \u670d\u52a1\u5668\u7684\u6700\u5927\u52a0\u8f7d\u5b57\u8282 \u547d\u4ee4\u884c \u00b6 Warning \u670d\u52a1\u542f\u52a8\u547d\u4ee4\u811a\u672c(\u8fdb\u5165druid-io\u5b89\u88c5\u6587\u4ef6\u7684\u6839\u76ee\u5f55) \u57fa\u672c\u542f\u52a8\u65b9\u5f0f java ` cat conf / druid / historical / jvm . config | xargs ` - cp \"conf/druid/_common:conf/druid/historical:lib/*\" io . druid . cli . Main server historical \u540e\u53f0\u542f\u52a8\u65b9\u5f0f nohup java ` cat conf / druid / historical / jvm . config | xargs ` - cp \"conf/druid/_common:conf/druid/historical:lib/*\" io . druid . cli . Main server historical > historical . log 2 >& 1 &","title":"Historical\u8282\u70b9\u914d\u7f6e\u90e8\u7f72"},{"location":"apache/druid/action/configuration_node_historical.html#jvm","text":"\u7f16\u8f91 jvm.conf \u914d\u7f6e\u6587\u4ef6 vim conf / druid / historical / jvm . config \u4fee\u6539\u4e3a\u4ee5\u4e0b\u5185\u5bb9 - server - Xms8g - Xmx8g - XX : MaxDirectMemorySize = 4096 m - Duser . timezone = UTC - Dfile . encoding = UTF - 8 - Djava . io . tmpdir = var / tmp - Djava . util . logging . manager = org . apache . logging . log4j . jul . LogManager -Xms : \u8bbe\u7f6e\u521d\u59cb\u7684(\u6700\u5c0f\u7684)Heap\u7684\u5927\u5c0f \u6b64\u503c\u53ef\u4ee5\u8bbe\u7f6e\u4e0e -Xmx \u76f8\u540c\uff0c\u4ee5\u907f\u514d\u6bcf\u6b21\u5783\u573e\u56de\u6536\u5b8c\u6210\u540eJVM\u91cd\u65b0\u5206\u914d\u5185\u5b58 -Xmx : \u8bbe\u7f6e\u6700\u5927Heap\u7684\u5927\u5c0f -XX:MaxDirectMemorySize : \u6b64\u53c2\u6570\u7684\u542b\u4e49\u662f\u5f53 Direct ByteBuffer \u5206\u914d\u7684\u5806\u5916\u5185\u5b58\u5230\u8fbe\u6307\u5b9a\u5927\u5c0f\u540e\uff0c\u5373\u89e6\u53d1Full GC\u3002\u6ce8\u610f\u8be5\u503c\u662f\u6709\u4e0a\u9650\u7684\uff0c\u9ed8\u8ba4\u662f64M\uff0c\u6700\u5927\u4e3a sun.misc.VM.maxDirectMemory() \uff0c\u5728\u7a0b\u5e8f\u4e2d\u4e2d\u53ef\u4ee5\u83b7\u5f97 -XX:MaxDirectMemorySize \u7684\u8bbe\u7f6e\u7684\u503c,\u4e0d\u8981\u8bbe\u7f6e\u8fc7\u5927\uff0c\u5408\u7406\u5373\u53ef\u3002 -Duser.timezone : \u65f6\u533a\u7c7b\u578b -Dfile.encoding : \u6587\u4ef6\u7f16\u7801 -Djava.io.tmpdir : \u7cfb\u7edf\u7f13\u51b2\u4e34\u65f6\u76ee\u5f55 -Djava.util.logging.manager : Log\u76d1\u63a7\u7ba1\u7406\u5de5\u5177\u7c7b","title":"Jvm\u914d\u7f6e"},{"location":"apache/druid/action/configuration_node_historical.html#_1","text":"vim conf / druid / historical / runtime . properties \u4fee\u6539\u4e3a\u4ee5\u4e0b\u5185\u5bb9 druid . service = druid / historical druid . port = 8083 # HTTP server threads druid . server . http . numThreads = 25 # Processing threads and buffers druid . processing . buffer . sizeBytes = 536870912 druid . processing . numThreads = 7 # Segment storage druid . segmentCache . locations =[ { \"path\" : \"var/druid/segment-cache\" , \"maxSize\" \\ : 130000000000 } ] druid . server . maxSize = 130000000000 druid.service : \u670d\u52a1\u540d\u79f0\u548c _common \u4e2d\u76f8\u5173\u8054 druid.port : \u5f53\u524d\u670d\u52a1\u7aef\u53e3 druid.server.http.numThreads : http\u670d\u52a1\u7684\u6700\u5927\u94fe\u63a5\u7ebf\u7a0b druid.processing.buffer.sizeBytes : druid-io\u8fdb\u7a0bbuffer\u7684\u5355\u7ebf\u7a0b\u5927\u5c0f\uff0c\u6ce8\u610f\u8be5\u6570\u503c*\u7ebf\u7a0b\u6570\u5927\u5c0f\u4e0d\u5f97\u8d85\u8fc7jvm\u4e2d\u7684xmx\u914d\u7f6e\u6570\u636e druid.processing.numThreads : druid-io\u8fdb\u7a0bbuffer\u7684\u7ebf\u7a0b\u603b\u6570 druid.segmentCache.locations : segment\u7f13\u51b2\u8def\u5f84\u5730\u5740\uff0c\u6700\u5927\u52a0\u8f7d\u5927\u5c0f\u5b57\u8282 druid.server.maxSize : \u670d\u52a1\u5668\u7684\u6700\u5927\u52a0\u8f7d\u5b57\u8282","title":"\u8282\u70b9\u914d\u7f6e"},{"location":"apache/druid/action/configuration_node_historical.html#_2","text":"Warning \u670d\u52a1\u542f\u52a8\u547d\u4ee4\u811a\u672c(\u8fdb\u5165druid-io\u5b89\u88c5\u6587\u4ef6\u7684\u6839\u76ee\u5f55) \u57fa\u672c\u542f\u52a8\u65b9\u5f0f java ` cat conf / druid / historical / jvm . config | xargs ` - cp \"conf/druid/_common:conf/druid/historical:lib/*\" io . druid . cli . Main server historical \u540e\u53f0\u542f\u52a8\u65b9\u5f0f nohup java ` cat conf / druid / historical / jvm . config | xargs ` - cp \"conf/druid/_common:conf/druid/historical:lib/*\" io . druid . cli . Main server historical > historical . log 2 >& 1 &","title":"\u547d\u4ee4\u884c"},{"location":"apache/druid/action/configuration_node_middleManager.html","tags":["Apache","Druid","\u5927\u6570\u636e"],"text":"Note \u4ee5\u4e0b\u64cd\u4f5c\u9700\u8981\u8fdb\u5165druid-io\u5b89\u88c5\u6587\u4ef6\u7684\u6839\u76ee\u5f55\u4e0b\u64cd\u4f5c\uff0c\u6bd4\u5982\u6211\u7684druid-io\u5b89\u88c5\u76ee\u5f55\u4e3a\uff1a /hadoop/dc/druid-0.9.1.1 \u90a3\u4e48\u6211\u4eec\u9700\u8981\u64cd\u4f5c cd /hadoop/dc/druid-0.9.1.1 Jvm\u914d\u7f6e \u00b6 \u7f16\u8f91 jvm.conf \u914d\u7f6e\u6587\u4ef6 vim conf / druid / middleManager / jvm . config \u4fee\u6539\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b - server - Xms64m - Xmx64m - XX : + UseConcMarkSweepGC - XX : + PrintGCDetails - XX : + PrintGCTimeStamps - Duser . timezone = UTC - Dfile . encoding = UTF - 8 - Djava . io . tmpdir =/ var / tmp - Djava . util . logging . manager = org . apache . logging . log4j . jul . LogManager -Xms : \u8bbe\u7f6e\u521d\u59cb\u7684(\u6700\u5c0f\u7684)Heap\u7684\u5927\u5c0f \u6b64\u503c\u53ef\u4ee5\u8bbe\u7f6e\u4e0e -Xmx \u76f8\u540c\uff0c\u4ee5\u907f\u514d\u6bcf\u6b21\u5783\u573e\u56de\u6536\u5b8c\u6210\u540eJVM\u91cd\u65b0\u5206\u914d\u5185\u5b58 -Xmx : \u8bbe\u7f6e\u6700\u5927Heap\u7684\u5927\u5c0f -XX:+UseConcMarkSweepGC : \u5f00\u542f\u6b64\u53c2\u6570\u4f7f\u7528ParNew & CMS\uff08serial old\u4e3a\u66ff\u8865\uff09\u641c\u96c6\u5668 -XX:+PrintGCDetails : \u5f00\u542fGC\u65e5\u5fd7 -XX:+PrintGCTimeStamps : PrintGC\u5fc5\u987b\u5f00\u542f\uff0c\u53ea\u5f00\u542fPrintGCDetails\u3001PrintGCTimeStamps\u4e0d\u4f1a\u8f93\u51faGC\uff0c\u5fc5\u987bPrintGC\u540c\u65f6\u5f00\u542f -Duser.timezone : \u65f6\u533a\u7c7b\u578b -Dfile.encoding : \u6587\u4ef6\u7f16\u7801 -Djava.io.tmpdir : \u7cfb\u7edf\u7f13\u51b2\u4e34\u65f6\u76ee\u5f55 -Djava.util.logging.manager : Log\u76d1\u63a7\u7ba1\u7406\u5de5\u5177\u7c7b \u8282\u70b9\u914d\u7f6e \u00b6 vim conf / druid / middleManager / runtime . properties \u4fee\u6539\u4e3a\u4ee5\u4e0b\u5185\u5bb9 druid . service = druid / middleManager druid . port = 8091 # Number of tasks per middleManager druid . worker . capacity = 20 # Task launch parameters druid . indexer . runner . javaOpts =- server - Xmx3g - XX : MaxDirectMemorySize = 36 g - XX : + UseG1GC - XX : MaxGCPauseMillis = 100 - XX : + PrintGCDetails - XX : + PrintGCTimeStamps - Duser . timezone = UTC - Dfile . encoding = UTF - 8 - Djava . util . logging . manager = org . apache . logging . log4j . jul . LogManager druid . indexer . task . baseTaskDir = var / druid / task druid . indexer . task . restoreTasksOnRestart = true # HTTP server threads druid . server . http . numThreads = 40 # Processing threads and buffers druid . processing . buffer . sizeBytes = 1036870912 druid . processing . numThreads = 20 # Hadoop indexing druid . indexer . task . hadoopWorkingPath =/ druid / hadoop - tmp druid . indexer . task . defaultHadoopCoordinates =[ \"org.apache.hadoop:hadoop-client:2.7.3\" ] druid.service : \u670d\u52a1\u540d\u79f0\u548c_common\u4e2d\u76f8\u5173\u8054 druid.port : \u5f53\u524d\u670d\u52a1\u7aef\u53e3 druid.worker.capacity : \u6bcf\u53f0middleManager\u53ef\u8fd0\u884c\u7684\u6700\u5927task\u6570\u91cf.\u9ed8\u8ba42,\u4e00\u822c\u4e3a\u53ef\u7528\u5904\u7406\u5668\u6570\u91cf-1 druid.indexer.runner.javaOpts : \u6bcf\u4e2atask\u4efb\u52a1\u8fd0\u884c\u65f6,JVM\u76f8\u5173\u914d\u7f6e druid.indexer.task.baseTaskDir : task\u7684\u57fa\u672c\u4e34\u65f6\u5de5\u4f5c\u76ee\u5f55\u3002\u9ed8\u8ba4 ${druid.indexer.task.baseDir}/persistent/tasks druid.indexer.task.restoreTasksOnRestart : \u5982\u679c\u662ftrue\uff0cMiddleManagers\u5c06\u5c1d\u8bd5\u5728\u5173\u673a\u65f6\u4f18\u96c5\u5730\u505c\u6b62task\uff0c\u5e76\u5728\u91cd\u542f\u65f6\u6062\u590d\u5b83\u4eec\u3002\u9ed8\u8ba4false druid.server.http.numThreads : HTTP\u8bf7\u6c42\u7684\u7ebf\u7a0b\u6570\u3002max(10, (\u673a\u5668\u6838\u5fc3 * 17) / 16 + 2) + 30 druid.processing.buffer.sizeBytes : \u8fd9\u6307\u5b9a\u4e86\u5b58\u50a8\u4e2d\u95f4\u7ed3\u679c\u7684\u7f13\u51b2\u533a\u5927\u5c0f\u3002Indexer\u8fdb\u7a0b\u4e2d\u7684\u8ba1\u7b97\u5f15\u64ce\u5c06\u4f7f\u7528\u8fd9\u4e2a\u5927\u5c0f\u7684scratch\u7f13\u51b2\u533a\u6765\u6267\u884c\u5806\u5916\u7684\u6240\u6709\u4e2d\u95f4\u8ba1\u7b97\u3002\u8f83\u5927\u7684\u503c\u5141\u8bb8\u5728\u4e00\u6b21\u6570\u636e\u4f20\u9012\u4e2d\u8fdb\u884c\u66f4\u591a\u7684\u805a\u5408\uff0c\u800c\u8f83\u5c0f\u7684\u503c\u53ef\u80fd\u9700\u8981\u66f4\u591a\u7684\u4f20\u9012\uff0c\u8fd9\u53d6\u51b3\u4e8e\u6b63\u5728\u6267\u884c\u7684\u67e5\u8be2\u3002auto (max 1GB ) druid.processing.numThreads : \u53ef\u7528\u4e8e\u5e76\u884c\u5904\u7406\u7684\u5904\u7406\u7ebf\u7a0b\u6570\u3002\u6211\u4eec\u7684\u7ecf\u9a8c\u6cd5\u5219\u662fnum_core - 1\uff0c\u8fd9\u610f\u5473\u7740\u5373\u4f7f\u5728\u5f88\u91cd\u7684\u8d1f\u8f7d\u4e0b\uff0c\u4ecd\u7136\u6709\u4e00\u4e2acore\u53ef\u7528\u6765\u5b8c\u6210\u540e\u53f0\u4efb\u52a1\uff0c\u6bd4\u5982\u4e0eZooKeeper\u4ea4\u4e92\u548c\u4e0b\u8f7dsegments\u3002\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u5185\u6838\u53ef\u7528\uff0c\u8be5\u5c5e\u6027\u9ed8\u8ba4\u503c\u4e3a1\u3002\u4e00\u822c\u4e3a\u6838\u5fc3\u6570\u91cf-1\u6216\u80051. druid.indexer.task.hadoopWorkingPath : Hadoop task\u7684\u4e34\u65f6\u5de5\u4f5c\u76ee\u5f55\u3002\u9ed8\u8ba4 /tmp/druid-indexing \u547d\u4ee4\u884c \u00b6 Warning \u670d\u52a1\u542f\u52a8\u547d\u4ee4\u811a\u672c(\u8fdb\u5165druid-io\u5b89\u88c5\u6587\u4ef6\u7684\u6839\u76ee\u5f55) \u57fa\u672c\u542f\u52a8\u65b9\u5f0f java ` cat conf / druid / middleManager / jvm . config | xargs ` - cp \"conf/druid/_common:conf/druid/middleManager:lib/*\" io . druid . cli . Main server middleManager \u540e\u53f0\u542f\u52a8\u65b9\u5f0f nohup java ` cat conf / druid / middleManager / jvm . config | xargs ` - cp \"conf/druid/_common:conf/druid/middleManager:lib/*\" io . druid . cli . Main server middleManager > middleManager 2 >& 1 &","title":"MiddleManager\u8282\u70b9\u914d\u7f6e\u90e8\u7f72"},{"location":"apache/druid/action/configuration_node_middleManager.html#jvm","text":"\u7f16\u8f91 jvm.conf \u914d\u7f6e\u6587\u4ef6 vim conf / druid / middleManager / jvm . config \u4fee\u6539\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b - server - Xms64m - Xmx64m - XX : + UseConcMarkSweepGC - XX : + PrintGCDetails - XX : + PrintGCTimeStamps - Duser . timezone = UTC - Dfile . encoding = UTF - 8 - Djava . io . tmpdir =/ var / tmp - Djava . util . logging . manager = org . apache . logging . log4j . jul . LogManager -Xms : \u8bbe\u7f6e\u521d\u59cb\u7684(\u6700\u5c0f\u7684)Heap\u7684\u5927\u5c0f \u6b64\u503c\u53ef\u4ee5\u8bbe\u7f6e\u4e0e -Xmx \u76f8\u540c\uff0c\u4ee5\u907f\u514d\u6bcf\u6b21\u5783\u573e\u56de\u6536\u5b8c\u6210\u540eJVM\u91cd\u65b0\u5206\u914d\u5185\u5b58 -Xmx : \u8bbe\u7f6e\u6700\u5927Heap\u7684\u5927\u5c0f -XX:+UseConcMarkSweepGC : \u5f00\u542f\u6b64\u53c2\u6570\u4f7f\u7528ParNew & CMS\uff08serial old\u4e3a\u66ff\u8865\uff09\u641c\u96c6\u5668 -XX:+PrintGCDetails : \u5f00\u542fGC\u65e5\u5fd7 -XX:+PrintGCTimeStamps : PrintGC\u5fc5\u987b\u5f00\u542f\uff0c\u53ea\u5f00\u542fPrintGCDetails\u3001PrintGCTimeStamps\u4e0d\u4f1a\u8f93\u51faGC\uff0c\u5fc5\u987bPrintGC\u540c\u65f6\u5f00\u542f -Duser.timezone : \u65f6\u533a\u7c7b\u578b -Dfile.encoding : \u6587\u4ef6\u7f16\u7801 -Djava.io.tmpdir : \u7cfb\u7edf\u7f13\u51b2\u4e34\u65f6\u76ee\u5f55 -Djava.util.logging.manager : Log\u76d1\u63a7\u7ba1\u7406\u5de5\u5177\u7c7b","title":"Jvm\u914d\u7f6e"},{"location":"apache/druid/action/configuration_node_middleManager.html#_1","text":"vim conf / druid / middleManager / runtime . properties \u4fee\u6539\u4e3a\u4ee5\u4e0b\u5185\u5bb9 druid . service = druid / middleManager druid . port = 8091 # Number of tasks per middleManager druid . worker . capacity = 20 # Task launch parameters druid . indexer . runner . javaOpts =- server - Xmx3g - XX : MaxDirectMemorySize = 36 g - XX : + UseG1GC - XX : MaxGCPauseMillis = 100 - XX : + PrintGCDetails - XX : + PrintGCTimeStamps - Duser . timezone = UTC - Dfile . encoding = UTF - 8 - Djava . util . logging . manager = org . apache . logging . log4j . jul . LogManager druid . indexer . task . baseTaskDir = var / druid / task druid . indexer . task . restoreTasksOnRestart = true # HTTP server threads druid . server . http . numThreads = 40 # Processing threads and buffers druid . processing . buffer . sizeBytes = 1036870912 druid . processing . numThreads = 20 # Hadoop indexing druid . indexer . task . hadoopWorkingPath =/ druid / hadoop - tmp druid . indexer . task . defaultHadoopCoordinates =[ \"org.apache.hadoop:hadoop-client:2.7.3\" ] druid.service : \u670d\u52a1\u540d\u79f0\u548c_common\u4e2d\u76f8\u5173\u8054 druid.port : \u5f53\u524d\u670d\u52a1\u7aef\u53e3 druid.worker.capacity : \u6bcf\u53f0middleManager\u53ef\u8fd0\u884c\u7684\u6700\u5927task\u6570\u91cf.\u9ed8\u8ba42,\u4e00\u822c\u4e3a\u53ef\u7528\u5904\u7406\u5668\u6570\u91cf-1 druid.indexer.runner.javaOpts : \u6bcf\u4e2atask\u4efb\u52a1\u8fd0\u884c\u65f6,JVM\u76f8\u5173\u914d\u7f6e druid.indexer.task.baseTaskDir : task\u7684\u57fa\u672c\u4e34\u65f6\u5de5\u4f5c\u76ee\u5f55\u3002\u9ed8\u8ba4 ${druid.indexer.task.baseDir}/persistent/tasks druid.indexer.task.restoreTasksOnRestart : \u5982\u679c\u662ftrue\uff0cMiddleManagers\u5c06\u5c1d\u8bd5\u5728\u5173\u673a\u65f6\u4f18\u96c5\u5730\u505c\u6b62task\uff0c\u5e76\u5728\u91cd\u542f\u65f6\u6062\u590d\u5b83\u4eec\u3002\u9ed8\u8ba4false druid.server.http.numThreads : HTTP\u8bf7\u6c42\u7684\u7ebf\u7a0b\u6570\u3002max(10, (\u673a\u5668\u6838\u5fc3 * 17) / 16 + 2) + 30 druid.processing.buffer.sizeBytes : \u8fd9\u6307\u5b9a\u4e86\u5b58\u50a8\u4e2d\u95f4\u7ed3\u679c\u7684\u7f13\u51b2\u533a\u5927\u5c0f\u3002Indexer\u8fdb\u7a0b\u4e2d\u7684\u8ba1\u7b97\u5f15\u64ce\u5c06\u4f7f\u7528\u8fd9\u4e2a\u5927\u5c0f\u7684scratch\u7f13\u51b2\u533a\u6765\u6267\u884c\u5806\u5916\u7684\u6240\u6709\u4e2d\u95f4\u8ba1\u7b97\u3002\u8f83\u5927\u7684\u503c\u5141\u8bb8\u5728\u4e00\u6b21\u6570\u636e\u4f20\u9012\u4e2d\u8fdb\u884c\u66f4\u591a\u7684\u805a\u5408\uff0c\u800c\u8f83\u5c0f\u7684\u503c\u53ef\u80fd\u9700\u8981\u66f4\u591a\u7684\u4f20\u9012\uff0c\u8fd9\u53d6\u51b3\u4e8e\u6b63\u5728\u6267\u884c\u7684\u67e5\u8be2\u3002auto (max 1GB ) druid.processing.numThreads : \u53ef\u7528\u4e8e\u5e76\u884c\u5904\u7406\u7684\u5904\u7406\u7ebf\u7a0b\u6570\u3002\u6211\u4eec\u7684\u7ecf\u9a8c\u6cd5\u5219\u662fnum_core - 1\uff0c\u8fd9\u610f\u5473\u7740\u5373\u4f7f\u5728\u5f88\u91cd\u7684\u8d1f\u8f7d\u4e0b\uff0c\u4ecd\u7136\u6709\u4e00\u4e2acore\u53ef\u7528\u6765\u5b8c\u6210\u540e\u53f0\u4efb\u52a1\uff0c\u6bd4\u5982\u4e0eZooKeeper\u4ea4\u4e92\u548c\u4e0b\u8f7dsegments\u3002\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u5185\u6838\u53ef\u7528\uff0c\u8be5\u5c5e\u6027\u9ed8\u8ba4\u503c\u4e3a1\u3002\u4e00\u822c\u4e3a\u6838\u5fc3\u6570\u91cf-1\u6216\u80051. druid.indexer.task.hadoopWorkingPath : Hadoop task\u7684\u4e34\u65f6\u5de5\u4f5c\u76ee\u5f55\u3002\u9ed8\u8ba4 /tmp/druid-indexing","title":"\u8282\u70b9\u914d\u7f6e"},{"location":"apache/druid/action/configuration_node_middleManager.html#_2","text":"Warning \u670d\u52a1\u542f\u52a8\u547d\u4ee4\u811a\u672c(\u8fdb\u5165druid-io\u5b89\u88c5\u6587\u4ef6\u7684\u6839\u76ee\u5f55) \u57fa\u672c\u542f\u52a8\u65b9\u5f0f java ` cat conf / druid / middleManager / jvm . config | xargs ` - cp \"conf/druid/_common:conf/druid/middleManager:lib/*\" io . druid . cli . Main server middleManager \u540e\u53f0\u542f\u52a8\u65b9\u5f0f nohup java ` cat conf / druid / middleManager / jvm . config | xargs ` - cp \"conf/druid/_common:conf/druid/middleManager:lib/*\" io . druid . cli . Main server middleManager > middleManager 2 >& 1 &","title":"\u547d\u4ee4\u884c"},{"location":"apache/druid/action/configuration_node_overlord.html","tags":["Apache","Druid","\u5927\u6570\u636e"],"text":"Note \u4ee5\u4e0b\u64cd\u4f5c\u9700\u8981\u8fdb\u5165druid-io\u5b89\u88c5\u6587\u4ef6\u7684\u6839\u76ee\u5f55\u4e0b\u64cd\u4f5c\uff0c\u6bd4\u5982\u6211\u7684druid-io\u5b89\u88c5\u76ee\u5f55\u4e3a\uff1a /hadoop/dc/druid-0.9.1.1 \u90a3\u4e48\u6211\u4eec\u9700\u8981\u64cd\u4f5c cd /hadoop/dc/druid-0.9.1.1 Jvm\u914d\u7f6e \u00b6 \u7f16\u8f91 jvm.conf \u914d\u7f6e\u6587\u4ef6 vim conf / druid / overlord / jvm . config \u4fee\u6539\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b - server - Xms3g - Xmx3g - Duser . timezone = UTC - Dfile . encoding = UTF - 8 - Djava . io . tmpdir = var / tmp - Djava . util . logging . manager = org . apache . logging . log4j . jul . LogManager -Xms : \u8bbe\u7f6e\u521d\u59cb\u7684(\u6700\u5c0f\u7684)Heap\u7684\u5927\u5c0f \u6b64\u503c\u53ef\u4ee5\u8bbe\u7f6e\u4e0e -Xmx \u76f8\u540c\uff0c\u4ee5\u907f\u514d\u6bcf\u6b21\u5783\u573e\u56de\u6536\u5b8c\u6210\u540eJVM\u91cd\u65b0\u5206\u914d\u5185\u5b58 -Xmx : \u8bbe\u7f6e\u6700\u5927Heap\u7684\u5927\u5c0f -Duser.timezone : \u65f6\u533a\u7c7b\u578b -Dfile.encoding : \u6587\u4ef6\u7f16\u7801 -Djava.io.tmpdir : \u7cfb\u7edf\u7f13\u51b2\u4e34\u65f6\u76ee\u5f55 -Djava.util.logging.manager : Log\u76d1\u63a7\u7ba1\u7406\u5de5\u5177\u7c7b \u8282\u70b9\u914d\u7f6e \u00b6 vim conf / druid / overlord / runtime . properties \u4fee\u6539\u4e3a\u4ee5\u4e0b\u5185\u5bb9 druid . service = druid / overlord druid . port = 8090 druid . indexer . queue . startDelay = PT30S druid . indexer . runner . type = remote druid . indexer . storage . type = metadata druid.service : \u670d\u52a1\u540d\u79f0\u548c _common \u4e2d\u76f8\u5173\u8054 druid.port : \u5f53\u524d\u670d\u52a1\u7aef\u53e3 druid.indexer.queue.startDelay : \u7d22\u5f15\u6570\u636e\u8f7d\u5165\uff0c\u8fd9\u79cd\u5ef6\u8fdf\u662f\u4e00\u79cd\u7834\u89e3\uff0c\u8ba9\u5b83\u6709\u8db3\u591f\u7684\u65f6\u95f4\u76f8\u4fe1\u5b83\u62e5\u6709\u6240\u6709\u6570\u636e\u3002 druid.indexer.runner.type : \u7d22\u5f15\u5668\u8fd0\u884c\u7c7b\u578b\uff0c\u9ed8\u8ba4local druid.indexer.storage.type : \u7d22\u5f15\u5668\u5b58\u50a8\u7c7b\u578b\uff0c\u9ed8\u8ba4local \u547d\u4ee4\u884c \u00b6 Warning \u670d\u52a1\u542f\u52a8\u547d\u4ee4\u811a\u672c(\u8fdb\u5165druid-io\u5b89\u88c5\u6587\u4ef6\u7684\u6839\u76ee\u5f55) \u57fa\u672c\u542f\u52a8\u65b9\u5f0f java ` cat conf / druid / overlord / jvm . config | xargs ` - cp \"conf/druid/_common:conf/druid/overlord:lib/*\" io . druid . cli . Main server overlord \u540e\u53f0\u542f\u52a8\u65b9\u5f0f nohup java ` cat conf / druid / overlord / jvm . config | xargs ` - cp \"conf/druid/_common:conf/druid/overlord:lib/*\" io . druid . cli . Main server overlord > overlord . log 2 >& 1 &","title":"Overlord\u8282\u70b9\u914d\u7f6e\u90e8\u7f72"},{"location":"apache/druid/action/configuration_node_overlord.html#jvm","text":"\u7f16\u8f91 jvm.conf \u914d\u7f6e\u6587\u4ef6 vim conf / druid / overlord / jvm . config \u4fee\u6539\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b - server - Xms3g - Xmx3g - Duser . timezone = UTC - Dfile . encoding = UTF - 8 - Djava . io . tmpdir = var / tmp - Djava . util . logging . manager = org . apache . logging . log4j . jul . LogManager -Xms : \u8bbe\u7f6e\u521d\u59cb\u7684(\u6700\u5c0f\u7684)Heap\u7684\u5927\u5c0f \u6b64\u503c\u53ef\u4ee5\u8bbe\u7f6e\u4e0e -Xmx \u76f8\u540c\uff0c\u4ee5\u907f\u514d\u6bcf\u6b21\u5783\u573e\u56de\u6536\u5b8c\u6210\u540eJVM\u91cd\u65b0\u5206\u914d\u5185\u5b58 -Xmx : \u8bbe\u7f6e\u6700\u5927Heap\u7684\u5927\u5c0f -Duser.timezone : \u65f6\u533a\u7c7b\u578b -Dfile.encoding : \u6587\u4ef6\u7f16\u7801 -Djava.io.tmpdir : \u7cfb\u7edf\u7f13\u51b2\u4e34\u65f6\u76ee\u5f55 -Djava.util.logging.manager : Log\u76d1\u63a7\u7ba1\u7406\u5de5\u5177\u7c7b","title":"Jvm\u914d\u7f6e"},{"location":"apache/druid/action/configuration_node_overlord.html#_1","text":"vim conf / druid / overlord / runtime . properties \u4fee\u6539\u4e3a\u4ee5\u4e0b\u5185\u5bb9 druid . service = druid / overlord druid . port = 8090 druid . indexer . queue . startDelay = PT30S druid . indexer . runner . type = remote druid . indexer . storage . type = metadata druid.service : \u670d\u52a1\u540d\u79f0\u548c _common \u4e2d\u76f8\u5173\u8054 druid.port : \u5f53\u524d\u670d\u52a1\u7aef\u53e3 druid.indexer.queue.startDelay : \u7d22\u5f15\u6570\u636e\u8f7d\u5165\uff0c\u8fd9\u79cd\u5ef6\u8fdf\u662f\u4e00\u79cd\u7834\u89e3\uff0c\u8ba9\u5b83\u6709\u8db3\u591f\u7684\u65f6\u95f4\u76f8\u4fe1\u5b83\u62e5\u6709\u6240\u6709\u6570\u636e\u3002 druid.indexer.runner.type : \u7d22\u5f15\u5668\u8fd0\u884c\u7c7b\u578b\uff0c\u9ed8\u8ba4local druid.indexer.storage.type : \u7d22\u5f15\u5668\u5b58\u50a8\u7c7b\u578b\uff0c\u9ed8\u8ba4local","title":"\u8282\u70b9\u914d\u7f6e"},{"location":"apache/druid/action/configuration_node_overlord.html#_2","text":"Warning \u670d\u52a1\u542f\u52a8\u547d\u4ee4\u811a\u672c(\u8fdb\u5165druid-io\u5b89\u88c5\u6587\u4ef6\u7684\u6839\u76ee\u5f55) \u57fa\u672c\u542f\u52a8\u65b9\u5f0f java ` cat conf / druid / overlord / jvm . config | xargs ` - cp \"conf/druid/_common:conf/druid/overlord:lib/*\" io . druid . cli . Main server overlord \u540e\u53f0\u542f\u52a8\u65b9\u5f0f nohup java ` cat conf / druid / overlord / jvm . config | xargs ` - cp \"conf/druid/_common:conf/druid/overlord:lib/*\" io . druid . cli . Main server overlord > overlord . log 2 >& 1 &","title":"\u547d\u4ee4\u884c"},{"location":"clickhouse/index.html","tags":["ClickHouse","OLAP","\u5927\u6570\u636e"],"text":"\u4ec0\u4e48\u662fClickHouse? \u00b6 ClickHouse\u662f\u4e00\u4e2a\u7528\u4e8e\u8054\u673a\u5206\u6790(OLAP)\u7684\u5217\u5f0f\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf(DBMS)\u3002 \u5728\u4f20\u7edf\u7684\u884c\u5f0f\u6570\u636e\u5e93\u7cfb\u7edf\u4e2d\uff0c\u6570\u636e\u6309\u5982\u4e0b\u987a\u5e8f\u5b58\u50a8\uff1a Row WatchID JavaEnable Title GoodEvent EventTime #0 89354350662 1 Investor Relations 1 2016-05-18 05:19:20 #1 90329509958 0 Contact us 1 2016-05-18 08:10:20 #2 89953706054 1 Mission 1 2016-05-18 07:38:00 #N \u2026 \u2026 \u2026 \u2026 \u2026 \u5904\u4e8e\u540c\u4e00\u884c\u4e2d\u7684\u6570\u636e\u603b\u662f\u88ab\u7269\u7406\u7684\u5b58\u50a8\u5728\u4e00\u8d77\u3002 \u5e38\u89c1\u7684\u884c\u5f0f\u6570\u636e\u5e93\u7cfb\u7edf\u6709\uff1a MySQL \u3001 Postgres \u548c MS SQL Server \u3002 \u5728\u5217\u5f0f\u6570\u636e\u5e93\u7cfb\u7edf\u4e2d\uff0c\u6570\u636e\u6309\u5982\u4e0b\u7684\u987a\u5e8f\u5b58\u50a8\uff1a Row: #0 #1 #2 #N WatchID: 89354350662 90329509958 89953706054 \u2026 JavaEnable: 1 0 1 \u2026 Title: Investor Relations Contact us Mission \u2026 GoodEvent: 1 1 1 \u2026 EventTime: 2016-05-18 05:19:20 2016-05-18 08:10:20 2016-05-18 07:38:00 \u2026 \u8fd9\u4e9b\u793a\u4f8b\u53ea\u663e\u793a\u4e86\u6570\u636e\u7684\u6392\u5217\u987a\u5e8f\u3002\u6765\u81ea\u4e0d\u540c\u5217\u7684\u503c\u88ab\u5355\u72ec\u5b58\u50a8\uff0c\u6765\u81ea\u540c\u4e00\u5217\u7684\u6570\u636e\u88ab\u5b58\u50a8\u5728\u4e00\u8d77\u3002 \u5e38\u89c1\u7684\u5217\u5f0f\u6570\u636e\u5e93\u6709\uff1a Vertica\u3001 Paraccel (Actian Matrix\uff0cAmazon Redshift)\u3001 Sybase IQ\u3001 Exasol\u3001 Infobright\u3001 InfiniDB\u3001 MonetDB (VectorWise\uff0c Actian Vector)\u3001 LucidDB\u3001 SAP HANA\u3001 Google Dremel\u3001 Google PowerDrill\u3001 Druid\u3001 kdb+\u3002 \u4e0d\u540c\u7684\u6570\u636e\u5b58\u50a8\u65b9\u5f0f\u9002\u7528\u4e0d\u540c\u7684\u4e1a\u52a1\u573a\u666f\uff0c\u6570\u636e\u8bbf\u95ee\u7684\u573a\u666f\u5305\u62ec\uff1a\u8fdb\u884c\u4e86\u4f55\u79cd\u67e5\u8be2\u3001\u591a\u4e45\u67e5\u8be2\u4e00\u6b21\u4ee5\u53ca\u5404\u7c7b\u67e5\u8be2\u7684\u6bd4\u4f8b\uff1b\u6bcf\u79cd\u7c7b\u578b\u7684\u67e5\u8be2(\u884c\u3001\u5217\u548c\u5b57\u8282)\u8bfb\u53d6\u591a\u5c11\u6570\u636e\uff1b\u8bfb\u53d6\u6570\u636e\u548c\u66f4\u65b0\u4e4b\u95f4\u7684\u5173\u7cfb\uff1b\u4f7f\u7528\u7684\u6570\u636e\u96c6\u5927\u5c0f\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u672c\u5730\u7684\u6570\u636e\u96c6\uff1b\u662f\u5426\u4f7f\u7528\u4e8b\u52a1,\u4ee5\u53ca\u5b83\u4eec\u662f\u5982\u4f55\u8fdb\u884c\u9694\u79bb\u7684\uff1b\u6570\u636e\u7684\u590d\u5236\u673a\u5236\u4e0e\u6570\u636e\u7684\u5b8c\u6574\u6027\u8981\u6c42\uff1b\u6bcf\u79cd\u7c7b\u578b\u7684\u67e5\u8be2\u8981\u6c42\u7684\u5ef6\u8fdf\u4e0e\u541e\u5410\u91cf\u7b49\u7b49\u3002 \u7cfb\u7edf\u8d1f\u8f7d\u8d8a\u9ad8\uff0c\u4f9d\u636e\u4f7f\u7528\u573a\u666f\u8fdb\u884c\u5b9a\u5236\u5316\u5c31\u8d8a\u91cd\u8981\uff0c\u5e76\u4e14\u5b9a\u5236\u5c06\u4f1a\u53d8\u7684\u8d8a\u7cbe\u7ec6\u3002\u6ca1\u6709\u4e00\u4e2a\u7cfb\u7edf\u80fd\u591f\u540c\u65f6\u9002\u7528\u6240\u6709\u4e0d\u540c\u7684\u4e1a\u52a1\u573a\u666f\u3002\u5982\u679c\u7cfb\u7edf\u9002\u7528\u4e8e\u5e7f\u6cdb\u7684\u573a\u666f\uff0c\u5728\u8d1f\u8f7d\u9ad8\u7684\u60c5\u51b5\u4e0b\uff0c\u8981\u517c\u987e\u6240\u6709\u7684\u573a\u666f\uff0c\u90a3\u4e48\u5c06\u4e0d\u5f97\u4e0d\u505a\u51fa\u9009\u62e9\u3002\u662f\u8981\u5e73\u8861\u8fd8\u662f\u8981\u6548\u7387\uff1f OLAP\u573a\u666f\u7684\u5173\u952e\u7279\u5f81 \u00b6 \u7edd\u5927\u591a\u6570\u662f\u8bfb\u8bf7\u6c42 \u6570\u636e\u4ee5\u76f8\u5f53\u5927\u7684\u6279\u6b21(> 1000\u884c)\u66f4\u65b0\uff0c\u800c\u4e0d\u662f\u5355\u884c\u66f4\u65b0;\u6216\u8005\u6839\u672c\u6ca1\u6709\u66f4\u65b0\u3002 \u5df2\u6dfb\u52a0\u5230\u6570\u636e\u5e93\u7684\u6570\u636e\u4e0d\u80fd\u4fee\u6539\u3002 \u5bf9\u4e8e\u8bfb\u53d6\uff0c\u4ece\u6570\u636e\u5e93\u4e2d\u63d0\u53d6\u76f8\u5f53\u591a\u7684\u884c\uff0c\u4f46\u53ea\u63d0\u53d6\u5217\u7684\u4e00\u5c0f\u90e8\u5206\u3002 \u5bbd\u8868\uff0c\u5373\u6bcf\u4e2a\u8868\u5305\u542b\u7740\u5927\u91cf\u7684\u5217 \u67e5\u8be2\u76f8\u5bf9\u8f83\u5c11(\u901a\u5e38\u6bcf\u53f0\u670d\u52a1\u5668\u6bcf\u79d2\u67e5\u8be2\u6570\u767e\u6b21\u6216\u66f4\u5c11) \u5bf9\u4e8e\u7b80\u5355\u67e5\u8be2\uff0c\u5141\u8bb8\u5ef6\u8fdf\u5927\u7ea650\u6beb\u79d2 \u5217\u4e2d\u7684\u6570\u636e\u76f8\u5bf9\u8f83\u5c0f\uff1a\u6570\u5b57\u548c\u77ed\u5b57\u7b26\u4e32(\u4f8b\u5982\uff0c\u6bcf\u4e2aURL 60\u4e2a\u5b57\u8282) \u5904\u7406\u5355\u4e2a\u67e5\u8be2\u65f6\u9700\u8981\u9ad8\u541e\u5410\u91cf(\u6bcf\u53f0\u670d\u52a1\u5668\u6bcf\u79d2\u53ef\u8fbe\u6570\u5341\u4ebf\u884c) \u4e8b\u52a1\u4e0d\u662f\u5fc5\u987b\u7684 \u5bf9\u6570\u636e\u4e00\u81f4\u6027\u8981\u6c42\u4f4e \u6bcf\u4e2a\u67e5\u8be2\u6709\u4e00\u4e2a\u5927\u8868\u3002\u9664\u4e86\u4ed6\u4ee5\u5916\uff0c\u5176\u4ed6\u7684\u90fd\u5f88\u5c0f\u3002 \u67e5\u8be2\u7ed3\u679c\u660e\u663e\u5c0f\u4e8e\u6e90\u6570\u636e\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6570\u636e\u7ecf\u8fc7\u8fc7\u6ee4\u6216\u805a\u5408\uff0c\u56e0\u6b64\u7ed3\u679c\u9002\u5408\u4e8e\u5355\u4e2a\u670d\u52a1\u5668\u7684RAM\u4e2d \u5f88\u5bb9\u6613\u53ef\u4ee5\u770b\u51fa\uff0cOLAP\u573a\u666f\u4e0e\u5176\u4ed6\u901a\u5e38\u4e1a\u52a1\u573a\u666f(\u4f8b\u5982,OLTP\u6216K/V)\u6709\u5f88\u5927\u7684\u4e0d\u540c\uff0c \u56e0\u6b64\u60f3\u8981\u4f7f\u7528OLTP\u6216Key-Value\u6570\u636e\u5e93\u53bb\u9ad8\u6548\u7684\u5904\u7406\u5206\u6790\u67e5\u8be2\u573a\u666f\uff0c\u5e76\u4e0d\u662f\u975e\u5e38\u5b8c\u7f8e\u7684\u9002\u7528\u65b9\u6848\u3002\u4f8b\u5982\uff0c\u4f7f\u7528OLAP\u6570\u636e\u5e93\u53bb\u5904\u7406\u5206\u6790\u8bf7\u6c42\u901a\u5e38\u8981\u4f18\u4e8e\u4f7f\u7528MongoDB\u6216Redis\u53bb\u5904\u7406\u5206\u6790\u8bf7\u6c42\u3002 \u5217\u5f0f\u6570\u636e\u5e93\u66f4\u9002\u5408OLAP\u573a\u666f\u7684\u539f\u56e0 \u00b6 \u5217\u5f0f\u6570\u636e\u5e93\u66f4\u9002\u5408\u4e8eOLAP\u573a\u666f(\u5bf9\u4e8e\u5927\u591a\u6570\u67e5\u8be2\u800c\u8a00\uff0c\u5904\u7406\u901f\u5ea6\u81f3\u5c11\u63d0\u9ad8\u4e86100\u500d)\uff0c\u4e0b\u9762\u8be6\u7ec6\u89e3\u91ca\u4e86\u539f\u56e0(\u901a\u8fc7\u56fe\u7247\u66f4\u6709\u5229\u4e8e\u76f4\u89c2\u7406\u89e3)\uff1a \u884c\u5f0f \u5217\u5f0f \u770b\u5230\u5dee\u522b\u4e86\u4e48\uff1f\u4e0b\u9762\u5c06\u8be6\u7ec6\u4ecb\u7ecd\u4e3a\u4ec0\u4e48\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002 \u8f93\u5165/\u8f93\u51fa \u00b6 \u9488\u5bf9\u5206\u6790\u7c7b\u67e5\u8be2\uff0c\u901a\u5e38\u53ea\u9700\u8981\u8bfb\u53d6\u8868\u7684\u4e00\u5c0f\u90e8\u5206\u5217\u3002\u5728\u5217\u5f0f\u6570\u636e\u5e93\u4e2d\u4f60\u53ef\u4ee5\u53ea\u8bfb\u53d6\u4f60\u9700\u8981\u7684\u6570\u636e\u3002\u4f8b\u5982\uff0c\u5982\u679c\u53ea\u9700\u8981\u8bfb\u53d6100\u5217\u4e2d\u76845\u5217\uff0c\u8fd9\u5c06\u5e2e\u52a9\u4f60\u6700\u5c11\u51cf\u5c1120\u500d\u7684I/O\u6d88\u8017\u3002 \u7531\u4e8e\u6570\u636e\u603b\u662f\u6253\u5305\u6210\u6279\u91cf\u8bfb\u53d6\u7684\uff0c\u6240\u4ee5\u538b\u7f29\u662f\u975e\u5e38\u5bb9\u6613\u7684\u3002\u540c\u65f6\u6570\u636e\u6309\u5217\u5206\u522b\u5b58\u50a8\u8fd9\u4e5f\u66f4\u5bb9\u6613\u538b\u7f29\u3002\u8fd9\u8fdb\u4e00\u6b65\u964d\u4f4e\u4e86I/O\u7684\u4f53\u79ef\u3002 \u7531\u4e8eI/O\u7684\u964d\u4f4e\uff0c\u8fd9\u5c06\u5e2e\u52a9\u66f4\u591a\u7684\u6570\u636e\u88ab\u7cfb\u7edf\u7f13\u5b58\u3002 \u4f8b\u5982\uff0c\u67e5\u8be2\u00ab\u7edf\u8ba1\u6bcf\u4e2a\u5e7f\u544a\u5e73\u53f0\u7684\u8bb0\u5f55\u6570\u91cf\u00bb\u9700\u8981\u8bfb\u53d6\u00ab\u5e7f\u544a\u5e73\u53f0ID\u00bb\u8fd9\u4e00\u5217\uff0c\u5b83\u5728\u672a\u538b\u7f29\u7684\u60c5\u51b5\u4e0b\u9700\u89811\u4e2a\u5b57\u8282\u8fdb\u884c\u5b58\u50a8\u3002\u5982\u679c\u5927\u90e8\u5206\u6d41\u91cf\u4e0d\u662f\u6765\u81ea\u5e7f\u544a\u5e73\u53f0\uff0c\u90a3\u4e48\u8fd9\u4e00\u5217\u81f3\u5c11\u53ef\u4ee5\u4ee5\u5341\u500d\u7684\u538b\u7f29\u7387\u88ab\u538b\u7f29\u3002\u5f53\u91c7\u7528\u5feb\u901f\u538b\u7f29\u7b97\u6cd5\uff0c\u5b83\u7684\u89e3\u538b\u901f\u5ea6\u6700\u5c11\u5728\u5341\u4ebf\u5b57\u8282(\u672a\u538b\u7f29\u6570\u636e)\u6bcf\u79d2\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8fd9\u4e2a\u67e5\u8be2\u53ef\u4ee5\u5728\u5355\u4e2a\u670d\u52a1\u5668\u4e0a\u4ee5\u6bcf\u79d2\u5927\u7ea6\u51e0\u5341\u4ebf\u884c\u7684\u901f\u5ea6\u8fdb\u884c\u5904\u7406\u3002\u8fd9\u5b9e\u9645\u4e0a\u662f\u5f53\u524d\u5b9e\u73b0\u7684\u901f\u5ea6\u3002 CPU \u00b6 \u7531\u4e8e\u6267\u884c\u4e00\u4e2a\u67e5\u8be2\u9700\u8981\u5904\u7406\u5927\u91cf\u7684\u884c\uff0c\u56e0\u6b64\u5728\u6574\u4e2a\u5411\u91cf\u4e0a\u6267\u884c\u6240\u6709\u64cd\u4f5c\u5c06\u6bd4\u5728\u6bcf\u4e00\u884c\u4e0a\u6267\u884c\u6240\u6709\u64cd\u4f5c\u66f4\u52a0\u9ad8\u6548\u3002\u540c\u65f6\u8fd9\u5c06\u6709\u52a9\u4e8e\u5b9e\u73b0\u4e00\u4e2a\u51e0\u4e4e\u6ca1\u6709\u8c03\u7528\u6210\u672c\u7684\u67e5\u8be2\u5f15\u64ce\u3002\u5982\u679c\u4f60\u4e0d\u8fd9\u6837\u505a\uff0c\u4f7f\u7528\u4efb\u4f55\u4e00\u4e2a\u673a\u68b0\u786c\u76d8\uff0c\u67e5\u8be2\u5f15\u64ce\u90fd\u4e0d\u53ef\u907f\u514d\u7684\u505c\u6b62CPU\u8fdb\u884c\u7b49\u5f85\u3002\u6240\u4ee5\uff0c\u5728\u6570\u636e\u6309\u5217\u5b58\u50a8\u5e76\u4e14\u6309\u5217\u6267\u884c\u662f\u5f88\u6709\u610f\u4e49\u7684\u3002 \u6709\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\uff1a \u5411\u91cf\u5f15\u64ce\uff1a\u6240\u6709\u7684\u64cd\u4f5c\u90fd\u662f\u4e3a\u5411\u91cf\u800c\u4e0d\u662f\u4e3a\u5355\u4e2a\u503c\u7f16\u5199\u7684\u3002\u8fd9\u610f\u5473\u7740\u591a\u4e2a\u64cd\u4f5c\u4e4b\u95f4\u7684\u4e0d\u518d\u9700\u8981\u9891\u7e41\u7684\u8c03\u7528\uff0c\u5e76\u4e14\u8c03\u7528\u7684\u6210\u672c\u57fa\u672c\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\u3002\u64cd\u4f5c\u4ee3\u7801\u5305\u542b\u4e00\u4e2a\u4f18\u5316\u7684\u5185\u90e8\u5faa\u73af\u3002 \u4ee3\u7801\u751f\u6210\uff1a\u751f\u6210\u4e00\u6bb5\u4ee3\u7801\uff0c\u5305\u542b\u67e5\u8be2\u4e2d\u7684\u6240\u6709\u64cd\u4f5c\u3002 \u8fd9\u662f\u4e0d\u5e94\u8be5\u5728\u4e00\u4e2a\u901a\u7528\u6570\u636e\u5e93\u4e2d\u5b9e\u73b0\u7684\uff0c\u56e0\u4e3a\u8fd9\u5728\u8fd0\u884c\u7b80\u5355\u67e5\u8be2\u65f6\u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002\u4f46\u662f\u4e5f\u6709\u4f8b\u5916\uff0c\u4f8b\u5982\uff0cMemSQL\u4f7f\u7528\u4ee3\u7801\u751f\u6210\u6765\u51cf\u5c11\u5904\u7406SQL\u67e5\u8be2\u7684\u5ef6\u8fdf(\u53ea\u662f\u4e3a\u4e86\u6bd4\u8f83\uff0c\u5206\u6790\u578b\u6570\u636e\u5e93\u901a\u5e38\u9700\u8981\u4f18\u5316\u7684\u662f\u541e\u5410\u800c\u4e0d\u662f\u5ef6\u8fdf)\u3002 \u8bf7\u6ce8\u610f\uff0c\u4e3a\u4e86\u63d0\u9ad8CPU\u6548\u7387\uff0c\u67e5\u8be2\u8bed\u8a00\u5fc5\u987b\u662f\u58f0\u660e\u578b\u7684(SQL\u6216MDX)\uff0c \u6216\u8005\u81f3\u5c11\u4e00\u4e2a\u5411\u91cf(J\uff0cK)\u3002 \u67e5\u8be2\u5e94\u8be5\u53ea\u5305\u542b\u9690\u5f0f\u5faa\u73af\uff0c\u5141\u8bb8\u8fdb\u884c\u4f18\u5316\u3002","title":"\u4ec0\u4e48\u662fClickHouse?"},{"location":"clickhouse/index.html#clickhouse","text":"ClickHouse\u662f\u4e00\u4e2a\u7528\u4e8e\u8054\u673a\u5206\u6790(OLAP)\u7684\u5217\u5f0f\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf(DBMS)\u3002 \u5728\u4f20\u7edf\u7684\u884c\u5f0f\u6570\u636e\u5e93\u7cfb\u7edf\u4e2d\uff0c\u6570\u636e\u6309\u5982\u4e0b\u987a\u5e8f\u5b58\u50a8\uff1a Row WatchID JavaEnable Title GoodEvent EventTime #0 89354350662 1 Investor Relations 1 2016-05-18 05:19:20 #1 90329509958 0 Contact us 1 2016-05-18 08:10:20 #2 89953706054 1 Mission 1 2016-05-18 07:38:00 #N \u2026 \u2026 \u2026 \u2026 \u2026 \u5904\u4e8e\u540c\u4e00\u884c\u4e2d\u7684\u6570\u636e\u603b\u662f\u88ab\u7269\u7406\u7684\u5b58\u50a8\u5728\u4e00\u8d77\u3002 \u5e38\u89c1\u7684\u884c\u5f0f\u6570\u636e\u5e93\u7cfb\u7edf\u6709\uff1a MySQL \u3001 Postgres \u548c MS SQL Server \u3002 \u5728\u5217\u5f0f\u6570\u636e\u5e93\u7cfb\u7edf\u4e2d\uff0c\u6570\u636e\u6309\u5982\u4e0b\u7684\u987a\u5e8f\u5b58\u50a8\uff1a Row: #0 #1 #2 #N WatchID: 89354350662 90329509958 89953706054 \u2026 JavaEnable: 1 0 1 \u2026 Title: Investor Relations Contact us Mission \u2026 GoodEvent: 1 1 1 \u2026 EventTime: 2016-05-18 05:19:20 2016-05-18 08:10:20 2016-05-18 07:38:00 \u2026 \u8fd9\u4e9b\u793a\u4f8b\u53ea\u663e\u793a\u4e86\u6570\u636e\u7684\u6392\u5217\u987a\u5e8f\u3002\u6765\u81ea\u4e0d\u540c\u5217\u7684\u503c\u88ab\u5355\u72ec\u5b58\u50a8\uff0c\u6765\u81ea\u540c\u4e00\u5217\u7684\u6570\u636e\u88ab\u5b58\u50a8\u5728\u4e00\u8d77\u3002 \u5e38\u89c1\u7684\u5217\u5f0f\u6570\u636e\u5e93\u6709\uff1a Vertica\u3001 Paraccel (Actian Matrix\uff0cAmazon Redshift)\u3001 Sybase IQ\u3001 Exasol\u3001 Infobright\u3001 InfiniDB\u3001 MonetDB (VectorWise\uff0c Actian Vector)\u3001 LucidDB\u3001 SAP HANA\u3001 Google Dremel\u3001 Google PowerDrill\u3001 Druid\u3001 kdb+\u3002 \u4e0d\u540c\u7684\u6570\u636e\u5b58\u50a8\u65b9\u5f0f\u9002\u7528\u4e0d\u540c\u7684\u4e1a\u52a1\u573a\u666f\uff0c\u6570\u636e\u8bbf\u95ee\u7684\u573a\u666f\u5305\u62ec\uff1a\u8fdb\u884c\u4e86\u4f55\u79cd\u67e5\u8be2\u3001\u591a\u4e45\u67e5\u8be2\u4e00\u6b21\u4ee5\u53ca\u5404\u7c7b\u67e5\u8be2\u7684\u6bd4\u4f8b\uff1b\u6bcf\u79cd\u7c7b\u578b\u7684\u67e5\u8be2(\u884c\u3001\u5217\u548c\u5b57\u8282)\u8bfb\u53d6\u591a\u5c11\u6570\u636e\uff1b\u8bfb\u53d6\u6570\u636e\u548c\u66f4\u65b0\u4e4b\u95f4\u7684\u5173\u7cfb\uff1b\u4f7f\u7528\u7684\u6570\u636e\u96c6\u5927\u5c0f\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u672c\u5730\u7684\u6570\u636e\u96c6\uff1b\u662f\u5426\u4f7f\u7528\u4e8b\u52a1,\u4ee5\u53ca\u5b83\u4eec\u662f\u5982\u4f55\u8fdb\u884c\u9694\u79bb\u7684\uff1b\u6570\u636e\u7684\u590d\u5236\u673a\u5236\u4e0e\u6570\u636e\u7684\u5b8c\u6574\u6027\u8981\u6c42\uff1b\u6bcf\u79cd\u7c7b\u578b\u7684\u67e5\u8be2\u8981\u6c42\u7684\u5ef6\u8fdf\u4e0e\u541e\u5410\u91cf\u7b49\u7b49\u3002 \u7cfb\u7edf\u8d1f\u8f7d\u8d8a\u9ad8\uff0c\u4f9d\u636e\u4f7f\u7528\u573a\u666f\u8fdb\u884c\u5b9a\u5236\u5316\u5c31\u8d8a\u91cd\u8981\uff0c\u5e76\u4e14\u5b9a\u5236\u5c06\u4f1a\u53d8\u7684\u8d8a\u7cbe\u7ec6\u3002\u6ca1\u6709\u4e00\u4e2a\u7cfb\u7edf\u80fd\u591f\u540c\u65f6\u9002\u7528\u6240\u6709\u4e0d\u540c\u7684\u4e1a\u52a1\u573a\u666f\u3002\u5982\u679c\u7cfb\u7edf\u9002\u7528\u4e8e\u5e7f\u6cdb\u7684\u573a\u666f\uff0c\u5728\u8d1f\u8f7d\u9ad8\u7684\u60c5\u51b5\u4e0b\uff0c\u8981\u517c\u987e\u6240\u6709\u7684\u573a\u666f\uff0c\u90a3\u4e48\u5c06\u4e0d\u5f97\u4e0d\u505a\u51fa\u9009\u62e9\u3002\u662f\u8981\u5e73\u8861\u8fd8\u662f\u8981\u6548\u7387\uff1f","title":"\u4ec0\u4e48\u662fClickHouse?"},{"location":"clickhouse/index.html#olap","text":"\u7edd\u5927\u591a\u6570\u662f\u8bfb\u8bf7\u6c42 \u6570\u636e\u4ee5\u76f8\u5f53\u5927\u7684\u6279\u6b21(> 1000\u884c)\u66f4\u65b0\uff0c\u800c\u4e0d\u662f\u5355\u884c\u66f4\u65b0;\u6216\u8005\u6839\u672c\u6ca1\u6709\u66f4\u65b0\u3002 \u5df2\u6dfb\u52a0\u5230\u6570\u636e\u5e93\u7684\u6570\u636e\u4e0d\u80fd\u4fee\u6539\u3002 \u5bf9\u4e8e\u8bfb\u53d6\uff0c\u4ece\u6570\u636e\u5e93\u4e2d\u63d0\u53d6\u76f8\u5f53\u591a\u7684\u884c\uff0c\u4f46\u53ea\u63d0\u53d6\u5217\u7684\u4e00\u5c0f\u90e8\u5206\u3002 \u5bbd\u8868\uff0c\u5373\u6bcf\u4e2a\u8868\u5305\u542b\u7740\u5927\u91cf\u7684\u5217 \u67e5\u8be2\u76f8\u5bf9\u8f83\u5c11(\u901a\u5e38\u6bcf\u53f0\u670d\u52a1\u5668\u6bcf\u79d2\u67e5\u8be2\u6570\u767e\u6b21\u6216\u66f4\u5c11) \u5bf9\u4e8e\u7b80\u5355\u67e5\u8be2\uff0c\u5141\u8bb8\u5ef6\u8fdf\u5927\u7ea650\u6beb\u79d2 \u5217\u4e2d\u7684\u6570\u636e\u76f8\u5bf9\u8f83\u5c0f\uff1a\u6570\u5b57\u548c\u77ed\u5b57\u7b26\u4e32(\u4f8b\u5982\uff0c\u6bcf\u4e2aURL 60\u4e2a\u5b57\u8282) \u5904\u7406\u5355\u4e2a\u67e5\u8be2\u65f6\u9700\u8981\u9ad8\u541e\u5410\u91cf(\u6bcf\u53f0\u670d\u52a1\u5668\u6bcf\u79d2\u53ef\u8fbe\u6570\u5341\u4ebf\u884c) \u4e8b\u52a1\u4e0d\u662f\u5fc5\u987b\u7684 \u5bf9\u6570\u636e\u4e00\u81f4\u6027\u8981\u6c42\u4f4e \u6bcf\u4e2a\u67e5\u8be2\u6709\u4e00\u4e2a\u5927\u8868\u3002\u9664\u4e86\u4ed6\u4ee5\u5916\uff0c\u5176\u4ed6\u7684\u90fd\u5f88\u5c0f\u3002 \u67e5\u8be2\u7ed3\u679c\u660e\u663e\u5c0f\u4e8e\u6e90\u6570\u636e\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6570\u636e\u7ecf\u8fc7\u8fc7\u6ee4\u6216\u805a\u5408\uff0c\u56e0\u6b64\u7ed3\u679c\u9002\u5408\u4e8e\u5355\u4e2a\u670d\u52a1\u5668\u7684RAM\u4e2d \u5f88\u5bb9\u6613\u53ef\u4ee5\u770b\u51fa\uff0cOLAP\u573a\u666f\u4e0e\u5176\u4ed6\u901a\u5e38\u4e1a\u52a1\u573a\u666f(\u4f8b\u5982,OLTP\u6216K/V)\u6709\u5f88\u5927\u7684\u4e0d\u540c\uff0c \u56e0\u6b64\u60f3\u8981\u4f7f\u7528OLTP\u6216Key-Value\u6570\u636e\u5e93\u53bb\u9ad8\u6548\u7684\u5904\u7406\u5206\u6790\u67e5\u8be2\u573a\u666f\uff0c\u5e76\u4e0d\u662f\u975e\u5e38\u5b8c\u7f8e\u7684\u9002\u7528\u65b9\u6848\u3002\u4f8b\u5982\uff0c\u4f7f\u7528OLAP\u6570\u636e\u5e93\u53bb\u5904\u7406\u5206\u6790\u8bf7\u6c42\u901a\u5e38\u8981\u4f18\u4e8e\u4f7f\u7528MongoDB\u6216Redis\u53bb\u5904\u7406\u5206\u6790\u8bf7\u6c42\u3002","title":"OLAP\u573a\u666f\u7684\u5173\u952e\u7279\u5f81"},{"location":"clickhouse/index.html#olap_1","text":"\u5217\u5f0f\u6570\u636e\u5e93\u66f4\u9002\u5408\u4e8eOLAP\u573a\u666f(\u5bf9\u4e8e\u5927\u591a\u6570\u67e5\u8be2\u800c\u8a00\uff0c\u5904\u7406\u901f\u5ea6\u81f3\u5c11\u63d0\u9ad8\u4e86100\u500d)\uff0c\u4e0b\u9762\u8be6\u7ec6\u89e3\u91ca\u4e86\u539f\u56e0(\u901a\u8fc7\u56fe\u7247\u66f4\u6709\u5229\u4e8e\u76f4\u89c2\u7406\u89e3)\uff1a \u884c\u5f0f \u5217\u5f0f \u770b\u5230\u5dee\u522b\u4e86\u4e48\uff1f\u4e0b\u9762\u5c06\u8be6\u7ec6\u4ecb\u7ecd\u4e3a\u4ec0\u4e48\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002","title":"\u5217\u5f0f\u6570\u636e\u5e93\u66f4\u9002\u5408OLAP\u573a\u666f\u7684\u539f\u56e0"},{"location":"clickhouse/index.html#_1","text":"\u9488\u5bf9\u5206\u6790\u7c7b\u67e5\u8be2\uff0c\u901a\u5e38\u53ea\u9700\u8981\u8bfb\u53d6\u8868\u7684\u4e00\u5c0f\u90e8\u5206\u5217\u3002\u5728\u5217\u5f0f\u6570\u636e\u5e93\u4e2d\u4f60\u53ef\u4ee5\u53ea\u8bfb\u53d6\u4f60\u9700\u8981\u7684\u6570\u636e\u3002\u4f8b\u5982\uff0c\u5982\u679c\u53ea\u9700\u8981\u8bfb\u53d6100\u5217\u4e2d\u76845\u5217\uff0c\u8fd9\u5c06\u5e2e\u52a9\u4f60\u6700\u5c11\u51cf\u5c1120\u500d\u7684I/O\u6d88\u8017\u3002 \u7531\u4e8e\u6570\u636e\u603b\u662f\u6253\u5305\u6210\u6279\u91cf\u8bfb\u53d6\u7684\uff0c\u6240\u4ee5\u538b\u7f29\u662f\u975e\u5e38\u5bb9\u6613\u7684\u3002\u540c\u65f6\u6570\u636e\u6309\u5217\u5206\u522b\u5b58\u50a8\u8fd9\u4e5f\u66f4\u5bb9\u6613\u538b\u7f29\u3002\u8fd9\u8fdb\u4e00\u6b65\u964d\u4f4e\u4e86I/O\u7684\u4f53\u79ef\u3002 \u7531\u4e8eI/O\u7684\u964d\u4f4e\uff0c\u8fd9\u5c06\u5e2e\u52a9\u66f4\u591a\u7684\u6570\u636e\u88ab\u7cfb\u7edf\u7f13\u5b58\u3002 \u4f8b\u5982\uff0c\u67e5\u8be2\u00ab\u7edf\u8ba1\u6bcf\u4e2a\u5e7f\u544a\u5e73\u53f0\u7684\u8bb0\u5f55\u6570\u91cf\u00bb\u9700\u8981\u8bfb\u53d6\u00ab\u5e7f\u544a\u5e73\u53f0ID\u00bb\u8fd9\u4e00\u5217\uff0c\u5b83\u5728\u672a\u538b\u7f29\u7684\u60c5\u51b5\u4e0b\u9700\u89811\u4e2a\u5b57\u8282\u8fdb\u884c\u5b58\u50a8\u3002\u5982\u679c\u5927\u90e8\u5206\u6d41\u91cf\u4e0d\u662f\u6765\u81ea\u5e7f\u544a\u5e73\u53f0\uff0c\u90a3\u4e48\u8fd9\u4e00\u5217\u81f3\u5c11\u53ef\u4ee5\u4ee5\u5341\u500d\u7684\u538b\u7f29\u7387\u88ab\u538b\u7f29\u3002\u5f53\u91c7\u7528\u5feb\u901f\u538b\u7f29\u7b97\u6cd5\uff0c\u5b83\u7684\u89e3\u538b\u901f\u5ea6\u6700\u5c11\u5728\u5341\u4ebf\u5b57\u8282(\u672a\u538b\u7f29\u6570\u636e)\u6bcf\u79d2\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8fd9\u4e2a\u67e5\u8be2\u53ef\u4ee5\u5728\u5355\u4e2a\u670d\u52a1\u5668\u4e0a\u4ee5\u6bcf\u79d2\u5927\u7ea6\u51e0\u5341\u4ebf\u884c\u7684\u901f\u5ea6\u8fdb\u884c\u5904\u7406\u3002\u8fd9\u5b9e\u9645\u4e0a\u662f\u5f53\u524d\u5b9e\u73b0\u7684\u901f\u5ea6\u3002","title":"\u8f93\u5165/\u8f93\u51fa"},{"location":"clickhouse/index.html#cpu","text":"\u7531\u4e8e\u6267\u884c\u4e00\u4e2a\u67e5\u8be2\u9700\u8981\u5904\u7406\u5927\u91cf\u7684\u884c\uff0c\u56e0\u6b64\u5728\u6574\u4e2a\u5411\u91cf\u4e0a\u6267\u884c\u6240\u6709\u64cd\u4f5c\u5c06\u6bd4\u5728\u6bcf\u4e00\u884c\u4e0a\u6267\u884c\u6240\u6709\u64cd\u4f5c\u66f4\u52a0\u9ad8\u6548\u3002\u540c\u65f6\u8fd9\u5c06\u6709\u52a9\u4e8e\u5b9e\u73b0\u4e00\u4e2a\u51e0\u4e4e\u6ca1\u6709\u8c03\u7528\u6210\u672c\u7684\u67e5\u8be2\u5f15\u64ce\u3002\u5982\u679c\u4f60\u4e0d\u8fd9\u6837\u505a\uff0c\u4f7f\u7528\u4efb\u4f55\u4e00\u4e2a\u673a\u68b0\u786c\u76d8\uff0c\u67e5\u8be2\u5f15\u64ce\u90fd\u4e0d\u53ef\u907f\u514d\u7684\u505c\u6b62CPU\u8fdb\u884c\u7b49\u5f85\u3002\u6240\u4ee5\uff0c\u5728\u6570\u636e\u6309\u5217\u5b58\u50a8\u5e76\u4e14\u6309\u5217\u6267\u884c\u662f\u5f88\u6709\u610f\u4e49\u7684\u3002 \u6709\u4e24\u79cd\u65b9\u6cd5\u53ef\u4ee5\u505a\u5230\u8fd9\u4e00\u70b9\uff1a \u5411\u91cf\u5f15\u64ce\uff1a\u6240\u6709\u7684\u64cd\u4f5c\u90fd\u662f\u4e3a\u5411\u91cf\u800c\u4e0d\u662f\u4e3a\u5355\u4e2a\u503c\u7f16\u5199\u7684\u3002\u8fd9\u610f\u5473\u7740\u591a\u4e2a\u64cd\u4f5c\u4e4b\u95f4\u7684\u4e0d\u518d\u9700\u8981\u9891\u7e41\u7684\u8c03\u7528\uff0c\u5e76\u4e14\u8c03\u7528\u7684\u6210\u672c\u57fa\u672c\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\u3002\u64cd\u4f5c\u4ee3\u7801\u5305\u542b\u4e00\u4e2a\u4f18\u5316\u7684\u5185\u90e8\u5faa\u73af\u3002 \u4ee3\u7801\u751f\u6210\uff1a\u751f\u6210\u4e00\u6bb5\u4ee3\u7801\uff0c\u5305\u542b\u67e5\u8be2\u4e2d\u7684\u6240\u6709\u64cd\u4f5c\u3002 \u8fd9\u662f\u4e0d\u5e94\u8be5\u5728\u4e00\u4e2a\u901a\u7528\u6570\u636e\u5e93\u4e2d\u5b9e\u73b0\u7684\uff0c\u56e0\u4e3a\u8fd9\u5728\u8fd0\u884c\u7b80\u5355\u67e5\u8be2\u65f6\u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002\u4f46\u662f\u4e5f\u6709\u4f8b\u5916\uff0c\u4f8b\u5982\uff0cMemSQL\u4f7f\u7528\u4ee3\u7801\u751f\u6210\u6765\u51cf\u5c11\u5904\u7406SQL\u67e5\u8be2\u7684\u5ef6\u8fdf(\u53ea\u662f\u4e3a\u4e86\u6bd4\u8f83\uff0c\u5206\u6790\u578b\u6570\u636e\u5e93\u901a\u5e38\u9700\u8981\u4f18\u5316\u7684\u662f\u541e\u5410\u800c\u4e0d\u662f\u5ef6\u8fdf)\u3002 \u8bf7\u6ce8\u610f\uff0c\u4e3a\u4e86\u63d0\u9ad8CPU\u6548\u7387\uff0c\u67e5\u8be2\u8bed\u8a00\u5fc5\u987b\u662f\u58f0\u660e\u578b\u7684(SQL\u6216MDX)\uff0c \u6216\u8005\u81f3\u5c11\u4e00\u4e2a\u5411\u91cf(J\uff0cK)\u3002 \u67e5\u8be2\u5e94\u8be5\u53ea\u5305\u542b\u9690\u5f0f\u5faa\u73af\uff0c\u5141\u8bb8\u8fdb\u884c\u4f18\u5316\u3002","title":"CPU"},{"location":"clickhouse/action/configuration_basic.html","tags":["ClickHouse","OLAP","\u5927\u6570\u636e"],"text":"\u672c\u6587\u7ae0\u4e3b\u8981\u8bb2\u89e3\u4e00\u5957ClickHouse\u7cfb\u7edf\u7684\u5b89\u88c5\u548c\u90e8\u7f72. \u57fa\u672c\u914d\u7f6e\u73af\u5883 \u00b6 \u4f9d\u8d56 \u7248\u672c ClickHouse 20.11.3.3-2 CentOS 7.x Gcc 4.8.5 \u4e0b\u8f7d\u5b89\u88c5ClickHouse \u00b6 \u79bb\u7ebf\u5b89\u88c5\u65b9\u5f0f(\u6211\u4eec\u4f7f\u7528\u4e0b\u8f7d\u5230\u672c\u5730\u8fdb\u884c\u5b89\u88c5) wget https://repo.yandex.ru/clickhouse/rpm/stable/x86_64/clickhouse-client-20.11.3.3-2.noarch.rpm wget https://repo.yandex.ru/clickhouse/rpm/stable/x86_64/clickhouse-common-static-20.11.3.3-2.x86_64.rpm wget https://repo.yandex.ru/clickhouse/rpm/stable/x86_64/clickhouse-common-static-dbg-20.11.3.3-2.x86_64.rpm wget https://repo.yandex.ru/clickhouse/rpm/stable/x86_64/clickhouse-server-20.11.3.3-2.noarch.rpm yum install -y clickhouse-* yum\u6e90\u5728\u7ebf\u5b89\u88c5 sudo yum install yum-utils sudo rpm --import https://repo.clickhouse.tech/CLICKHOUSE-KEY.GPG sudo yum-config-manager --add-repo https://repo.clickhouse.tech/rpm/stable/x86_64 sudo yum install clickhouse-server clickhouse-client Note \u5982\u679c\u60a8\u60f3\u4f7f\u7528\u6700\u65b0\u7248\u672c\uff0c\u8bf7\u5c06stable\u66ff\u6362\u4e3atesting\uff08\u5efa\u8bae\u60a8\u5728\u6d4b\u8bd5\u73af\u5883\u4e2d\u4f7f\u7528\uff09 \u914d\u7f6eClickHouse \u00b6 ClickHouse\u4e2d\u7684\u914d\u7f6e\u9879\u5f88\u591a\uff0c\u9ed8\u8ba4\u4f1a\u5728 /etc \u4e0b\u751f\u6210 clickhouse-server \u548c clickhouse-client \u4e24\u4e2a\u76ee\u5f55\uff0c\u7531\u4e8e\u6211\u4eec\u5b89\u88c5\u670d\u52a1\u6211\u4eec\u53bb\u4fee\u6539 clickhouse-server \u4e0b\u7684\u914d\u7f6e\u6587\u4ef6 \u4fee\u6539 /etc/clickhouse-server/config.xml <?xml version=\"1.0\"?> <!-- NOTE: User and query level settings are set up in \"users.xml\" file. --> <yandex> <logger> <!-- Possible levels: https://github.com/pocoproject/poco/blob/develop/Foundation/include/Poco/Logger.h#L105 --> <level> trace </level> <log> /data2/clickhouse/clickhouse-server.log </log> <errorlog> /data2/clickhouse/clickhouse-server.err.log </errorlog> <size> 1000M </size> <count> 10 </count> <!-- <console>1</console> --> <!-- Default behavior is autodetection (log to console if not daemon mode and is tty) --> </logger> <!--display_name>production</display_name--> <!-- It is the name that will be shown in the client --> <http_port> 9123 </http_port> <tcp_port> 9000 </tcp_port> <!-- For HTTPS and SSL over native protocol. --> <!-- <https_port>8443</https_port> <tcp_port_secure>9440</tcp_port_secure> --> <!-- Used with https_port and tcp_port_secure. Full ssl options list: https://github.com/ClickHouse-Extras/poco/blob/master/NetSSL_OpenSSL/include/Poco/Net/SSLManager.h#L71 --> <openSSL> <server> <!-- Used for https server AND secure tcp port --> <!-- openssl req -subj \"/CN=localhost\" -new -newkey rsa:2048 -days 365 -nodes -x509 -keyout /etc/clickhouse-server/server.key -out /etc/clickhouse-server/server.crt --> <certificateFile> /etc/clickhouse-server/server.crt </certificateFile> <privateKeyFile> /etc/clickhouse-server/server.key </privateKeyFile> <!-- openssl dhparam -out /etc/clickhouse-server/dhparam.pem 4096 --> <dhParamsFile> /etc/clickhouse-server/dhparam.pem </dhParamsFile> <verificationMode> none </verificationMode> <loadDefaultCAFile> true </loadDefaultCAFile> <cacheSessions> true </cacheSessions> <disableProtocols> sslv2,sslv3 </disableProtocols> <preferServerCiphers> true </preferServerCiphers> </server> <client> <!-- Used for connecting to https dictionary source --> <loadDefaultCAFile> true </loadDefaultCAFile> <cacheSessions> true </cacheSessions> <disableProtocols> sslv2,sslv3 </disableProtocols> <preferServerCiphers> true </preferServerCiphers> <!-- Use for self-signed: <verificationMode>none</verificationMode> --> <invalidCertificateHandler> <!-- Use for self-signed: <name>AcceptCertificateHandler</name> --> <name> RejectCertificateHandler </name> </invalidCertificateHandler> </client> </openSSL> <!-- Default root page on http[s] server. For example load UI from https://tabix.io/ when opening http://localhost:8123 --> <!-- <http_server_default_response><![CDATA[<html ng-app=\"SMI2\"><head><base href=\"http://ui.tabix.io/\"></head><body><div ui-view=\"\" class=\"content-ui\"></div><script src=\"http://loader.tabix.io/master.js\"></script></body></html>]]></http_server_default_response> --> <!-- Port for communication between replicas. Used for data exchange. --> <interserver_http_port> 9009 </interserver_http_port> <listen_host> 0.0.0.0 </listen_host> <!-- Don't exit if ipv6 or ipv4 unavailable, but listen_host with this protocol specified --> <!-- <listen_try>0</listen_try> --> <!-- Allow listen on same address:port --> <!-- <listen_reuse_port>0</listen_reuse_port> --> <!-- <listen_backlog>64</listen_backlog> --> <max_connections> 4096 </max_connections> <keep_alive_timeout> 3 </keep_alive_timeout> <!-- Maximum number of concurrent queries. --> <max_concurrent_queries> 100 </max_concurrent_queries> <!-- Set limit on number of open files (default: maximum). This setting makes sense on Mac OS X because getrlimit() fails to retrieve correct maximum value. --> <!-- <max_open_files>262144</max_open_files> --> <!-- Size of cache of uncompressed blocks of data, used in tables of MergeTree family. In bytes. Cache is single for server. Memory is allocated only on demand. Cache is used when 'use_uncompressed_cache' user setting turned on (off by default). Uncompressed cache is advantageous only for very short queries and in rare cases. --> <uncompressed_cache_size> 8589934592 </uncompressed_cache_size> <!-- Approximate size of mark cache, used in tables of MergeTree family. In bytes. Cache is single for server. Memory is allocated only on demand. You should not lower this value. --> <mark_cache_size> 5368709120 </mark_cache_size> <!-- Path to data directory, with trailing slash. --> <path> /data2/clickhouse/data/ </path> <!-- Path to temporary data for processing hard queries. --> <tmp_path> /data2/clickhouse/tmp/ </tmp_path> <!-- Directory with user provided files that are accessible by 'file' table function. --> <user_files_path> /data2/clickhouse/user_files/ </user_files_path> <!-- Path to configuration file with users, access rights, profiles of settings, quotas. --> <users_config> users.xml </users_config> <!-- Default profile of settings. --> <default_profile> default </default_profile> <!-- System profile of settings. This settings are used by internal processes (Buffer storage, Distibuted DDL worker and so on). --> <!-- <system_profile>default</system_profile> --> <!-- Default database. --> <default_database> default </default_database> <mlock_executable> false </mlock_executable> <zookeeper incl= \"zookeeper-servers\" optional= \"true\" /> <!-- Substitutions for parameters of replicated tables. Optional. If you don't use replicated tables, you could omit that. See https://clickhouse.yandex/docs/en/table_engines/replication/#creating-replicated-tables --> <macros incl= \"macros\" optional= \"true\" /> <!-- Reloading interval for embedded dictionaries, in seconds. Default: 3600. --> <builtin_dictionaries_reload_interval> 3600 </builtin_dictionaries_reload_interval> <!-- Maximum session timeout, in seconds. Default: 3600. --> <max_session_timeout> 3600 </max_session_timeout> <!-- Default session timeout, in seconds. Default: 60. --> <default_session_timeout> 60 </default_session_timeout> <!-- Query log. Used only for queries with setting log_queries = 1. --> <query_log> <!-- What table to insert data. If table is not exist, it will be created. When query log structure is changed after system update, then old table will be renamed and new table will be created automatically. --> <database> system </database> <table> query_log </table> <!-- PARTITION BY expr https://clickhouse.yandex/docs/en/table_engines/custom_partitioning_key/ Example: event_date toMonday(event_date) toYYYYMM(event_date) toStartOfHour(event_time) --> <partition_by> toYYYYMM(event_date) </partition_by> <!-- Interval of flushing data. --> <flush_interval_milliseconds> 7500 </flush_interval_milliseconds> </query_log> <!-- Trace log. Stores stack traces collected by query profilers. See query_profiler_real_time_period_ns and query_profiler_cpu_time_period_ns settings. --> <trace_log> <database> system </database> <table> trace_log </table> <partition_by> toYYYYMM(event_date) </partition_by> <flush_interval_milliseconds> 7500 </flush_interval_milliseconds> </trace_log> <!-- Query thread log. Has information about all threads participated in query execution. Used only for queries with setting log_query_threads = 1. --> <query_thread_log> <database> system </database> <table> query_thread_log </table> <partition_by> toYYYYMM(event_date) </partition_by> <flush_interval_milliseconds> 7500 </flush_interval_milliseconds> </query_thread_log> <dictionaries_config> *_dictionary.xml </dictionaries_config> <!-- Uncomment if you want data to be compressed 30-100% better. Don't do that if you just started using ClickHouse. --> <compression incl= \"clickhouse_compression\" > </compression> <!-- Allow to execute distributed DDL queries (CREATE, DROP, ALTER, RENAME) on cluster. Works only if ZooKeeper is enabled. Comment it if such functionality isn't required. --> <distributed_ddl> <!-- Path in ZooKeeper to queue with DDL queries --> <path> /a8root/clickhouse/task_queue/ddl </path> <!-- Settings from this profile will be used to execute DDL queries --> <!-- <profile>default</profile> --> </distributed_ddl> <graphite_rollup_example> <pattern> <regexp> click_cost </regexp> <function> any </function> <retention> <age> 0 </age> <precision> 3600 </precision> </retention> <retention> <age> 86400 </age> <precision> 60 </precision> </retention> </pattern> <default> <function> max </function> <retention> <age> 0 </age> <precision> 60 </precision> </retention> <retention> <age> 3600 </age> <precision> 300 </precision> </retention> <retention> <age> 86400 </age> <precision> 3600 </precision> </retention> </default> </graphite_rollup_example> <format_schema_path> /data2/clickhouse/format_schemas/ </format_schema_path> </yandex> \u6211\u4eec\u4e00\u822c\u4fee\u6539\u4ee5\u4e0b\u914d\u7f6e\u9879\uff1a logger \u4fee\u6539\u65e5\u5fd7\u7684\u5b58\u653e\u8def\u5f84 http_port \u4fee\u6539\u6d4f\u89c8\u5668\u8bbf\u95ee\u7684\u7aef\u53e3\uff0c\u9ed8\u8ba4\u4e3a 8123 tcp_port \u4fee\u6539tcp\u534f\u8bae\u7684\u4f20\u8f93\u7aef\u53e3 openSSL \u4e00\u4e9bssl\u7684\u8ba4\u8bc1\u914d\u7f6e\u6587\u4ef6\uff0c\u6211\u4eec\u6682\u65f6\u4e0d\u505assl\u8ba4\u8bc1\uff0c\u6b64\u5904\u4e0d\u505a\u5904\u7406 listen_host \u5982\u679c\u6211\u4eec\u8981\u5bf9\u5916\u4f7f\u7528\u670d\u52a1\u7684\u8bdd\uff0c\u6b64\u5904\u9700\u8981\u4fee\u6539\u6210 0.0.0.0 remote_servers \u6b64\u5904\u662f\u96c6\u7fa4\u76f8\u5173\u7684\u914d\u7f6e\u4fe1\u606f\u540e\u7eed\u4f1a\u8be6\u89e3 \u5176\u4ed6\u81ea\u5b9a\u4e49\u7684\u914d\u7f6e\u53ef\u81ea\u884c\u4fee\u6539\uff0c\u4fee\u6539\u914d\u7f6e\u540e\u6211\u4eec\u4fbf\u53ef\u4ee5\u542f\u52a8\u4e00\u4e2a\u672c\u5730\u7684ClickHouse\u670d\u52a1 \u521b\u5efa\u76f8\u5173\u76ee\u5f55\u53ca\u6743\u9650 mkdir -p /data2/clickhouse chown -R clickhouse:clickhouse /data2/clickhouse \u64cd\u4f5cClickHouse \u00b6 \u542f\u52a8\u670d\u52a1 sudo -u clickhouse clickhouse-server --daemon --pid-file = /var/run/clickhouse-server/clickhouse-server.pid --config-file = /etc/clickhouse-server/config.xml --daemon \u6807\u5fd7\u6211\u4eec\u8981\u540e\u53f0\u542f\u52a8\u670d\u52a1 --pid-file \u6307\u5b9a\u670d\u52a1\u542f\u52a8\u540e\u7684\u8fdb\u884c\u6587\u4ef6\u8def\u5f84 --config-file \u6307\u5b9a\u670d\u52a1\u542f\u52a8\u7684\u914d\u7f6e\u6587\u4ef6 \u5982\u679c\u6211\u4eec\u4f7f\u7528\u8c03\u8bd5\u53ef\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4 sudo -u clickhouse clickhouse-server start Note \u8981\u7528\u5355\u72ec\u7684\u7528\u6237\u542f\u52a8\uff0c\u5982\u679c\u4f7f\u7528root\u542f\u52a8\u7684\u8bdd\u7cfb\u7edf\u4f1a\u505a\u63d0\u793a\u4fe1\u606f \u8c03\u8bd5ClickHouse\u670d\u52a1 \u00b6 ClickHouse\u5b89\u88c5\u5b8c\u6210\u540e\u4f1a\u751f\u6210 clickhouse-server \u548c clickhouse-client \u4e24\u4e2a\u76ee\u5f55\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u4f7f\u7528 clickhouse-client \u53bb\u6d4b\u8bd5\u670d\u52a1 clickhouse-client -h clickhouse --port 9000 --multiquery --query = \"show databases\" Note \u6ce8\u610f\uff1a--port\u6307\u5b9a\u7684\u662ftcp\u7684\u7aef\u53e3 \u8fd0\u884c\u67e5\u8be2\u6570\u636e\u5e93\u5217\u8868\u8fd4\u56de\u7c7b\u4f3c\u4ee5\u4e0b\u4fe1\u606f _temporary_and_external_tables default system \u6b64\u8bed\u6cd5\u53ef\u4ee5\u4f7f\u7528\u591a\u4e2aSQL\u6309\u7167\u82f1\u6587 ; \u5206\u5272\u6bcf\u4e2aSQL\u5373\u53ef Note \u66f4\u591aclickhouse-client\u4fe1\u606f\u4f7f\u7528clickhouse-client --help\u67e5\u770b","title":"ClickHouse\u5b89\u88c5\u90e8\u7f72"},{"location":"clickhouse/action/configuration_basic.html#_1","text":"\u4f9d\u8d56 \u7248\u672c ClickHouse 20.11.3.3-2 CentOS 7.x Gcc 4.8.5","title":"\u57fa\u672c\u914d\u7f6e\u73af\u5883"},{"location":"clickhouse/action/configuration_basic.html#clickhouse","text":"\u79bb\u7ebf\u5b89\u88c5\u65b9\u5f0f(\u6211\u4eec\u4f7f\u7528\u4e0b\u8f7d\u5230\u672c\u5730\u8fdb\u884c\u5b89\u88c5) wget https://repo.yandex.ru/clickhouse/rpm/stable/x86_64/clickhouse-client-20.11.3.3-2.noarch.rpm wget https://repo.yandex.ru/clickhouse/rpm/stable/x86_64/clickhouse-common-static-20.11.3.3-2.x86_64.rpm wget https://repo.yandex.ru/clickhouse/rpm/stable/x86_64/clickhouse-common-static-dbg-20.11.3.3-2.x86_64.rpm wget https://repo.yandex.ru/clickhouse/rpm/stable/x86_64/clickhouse-server-20.11.3.3-2.noarch.rpm yum install -y clickhouse-* yum\u6e90\u5728\u7ebf\u5b89\u88c5 sudo yum install yum-utils sudo rpm --import https://repo.clickhouse.tech/CLICKHOUSE-KEY.GPG sudo yum-config-manager --add-repo https://repo.clickhouse.tech/rpm/stable/x86_64 sudo yum install clickhouse-server clickhouse-client Note \u5982\u679c\u60a8\u60f3\u4f7f\u7528\u6700\u65b0\u7248\u672c\uff0c\u8bf7\u5c06stable\u66ff\u6362\u4e3atesting\uff08\u5efa\u8bae\u60a8\u5728\u6d4b\u8bd5\u73af\u5883\u4e2d\u4f7f\u7528\uff09","title":"\u4e0b\u8f7d\u5b89\u88c5ClickHouse"},{"location":"clickhouse/action/configuration_basic.html#clickhouse_1","text":"ClickHouse\u4e2d\u7684\u914d\u7f6e\u9879\u5f88\u591a\uff0c\u9ed8\u8ba4\u4f1a\u5728 /etc \u4e0b\u751f\u6210 clickhouse-server \u548c clickhouse-client \u4e24\u4e2a\u76ee\u5f55\uff0c\u7531\u4e8e\u6211\u4eec\u5b89\u88c5\u670d\u52a1\u6211\u4eec\u53bb\u4fee\u6539 clickhouse-server \u4e0b\u7684\u914d\u7f6e\u6587\u4ef6 \u4fee\u6539 /etc/clickhouse-server/config.xml <?xml version=\"1.0\"?> <!-- NOTE: User and query level settings are set up in \"users.xml\" file. --> <yandex> <logger> <!-- Possible levels: https://github.com/pocoproject/poco/blob/develop/Foundation/include/Poco/Logger.h#L105 --> <level> trace </level> <log> /data2/clickhouse/clickhouse-server.log </log> <errorlog> /data2/clickhouse/clickhouse-server.err.log </errorlog> <size> 1000M </size> <count> 10 </count> <!-- <console>1</console> --> <!-- Default behavior is autodetection (log to console if not daemon mode and is tty) --> </logger> <!--display_name>production</display_name--> <!-- It is the name that will be shown in the client --> <http_port> 9123 </http_port> <tcp_port> 9000 </tcp_port> <!-- For HTTPS and SSL over native protocol. --> <!-- <https_port>8443</https_port> <tcp_port_secure>9440</tcp_port_secure> --> <!-- Used with https_port and tcp_port_secure. Full ssl options list: https://github.com/ClickHouse-Extras/poco/blob/master/NetSSL_OpenSSL/include/Poco/Net/SSLManager.h#L71 --> <openSSL> <server> <!-- Used for https server AND secure tcp port --> <!-- openssl req -subj \"/CN=localhost\" -new -newkey rsa:2048 -days 365 -nodes -x509 -keyout /etc/clickhouse-server/server.key -out /etc/clickhouse-server/server.crt --> <certificateFile> /etc/clickhouse-server/server.crt </certificateFile> <privateKeyFile> /etc/clickhouse-server/server.key </privateKeyFile> <!-- openssl dhparam -out /etc/clickhouse-server/dhparam.pem 4096 --> <dhParamsFile> /etc/clickhouse-server/dhparam.pem </dhParamsFile> <verificationMode> none </verificationMode> <loadDefaultCAFile> true </loadDefaultCAFile> <cacheSessions> true </cacheSessions> <disableProtocols> sslv2,sslv3 </disableProtocols> <preferServerCiphers> true </preferServerCiphers> </server> <client> <!-- Used for connecting to https dictionary source --> <loadDefaultCAFile> true </loadDefaultCAFile> <cacheSessions> true </cacheSessions> <disableProtocols> sslv2,sslv3 </disableProtocols> <preferServerCiphers> true </preferServerCiphers> <!-- Use for self-signed: <verificationMode>none</verificationMode> --> <invalidCertificateHandler> <!-- Use for self-signed: <name>AcceptCertificateHandler</name> --> <name> RejectCertificateHandler </name> </invalidCertificateHandler> </client> </openSSL> <!-- Default root page on http[s] server. For example load UI from https://tabix.io/ when opening http://localhost:8123 --> <!-- <http_server_default_response><![CDATA[<html ng-app=\"SMI2\"><head><base href=\"http://ui.tabix.io/\"></head><body><div ui-view=\"\" class=\"content-ui\"></div><script src=\"http://loader.tabix.io/master.js\"></script></body></html>]]></http_server_default_response> --> <!-- Port for communication between replicas. Used for data exchange. --> <interserver_http_port> 9009 </interserver_http_port> <listen_host> 0.0.0.0 </listen_host> <!-- Don't exit if ipv6 or ipv4 unavailable, but listen_host with this protocol specified --> <!-- <listen_try>0</listen_try> --> <!-- Allow listen on same address:port --> <!-- <listen_reuse_port>0</listen_reuse_port> --> <!-- <listen_backlog>64</listen_backlog> --> <max_connections> 4096 </max_connections> <keep_alive_timeout> 3 </keep_alive_timeout> <!-- Maximum number of concurrent queries. --> <max_concurrent_queries> 100 </max_concurrent_queries> <!-- Set limit on number of open files (default: maximum). This setting makes sense on Mac OS X because getrlimit() fails to retrieve correct maximum value. --> <!-- <max_open_files>262144</max_open_files> --> <!-- Size of cache of uncompressed blocks of data, used in tables of MergeTree family. In bytes. Cache is single for server. Memory is allocated only on demand. Cache is used when 'use_uncompressed_cache' user setting turned on (off by default). Uncompressed cache is advantageous only for very short queries and in rare cases. --> <uncompressed_cache_size> 8589934592 </uncompressed_cache_size> <!-- Approximate size of mark cache, used in tables of MergeTree family. In bytes. Cache is single for server. Memory is allocated only on demand. You should not lower this value. --> <mark_cache_size> 5368709120 </mark_cache_size> <!-- Path to data directory, with trailing slash. --> <path> /data2/clickhouse/data/ </path> <!-- Path to temporary data for processing hard queries. --> <tmp_path> /data2/clickhouse/tmp/ </tmp_path> <!-- Directory with user provided files that are accessible by 'file' table function. --> <user_files_path> /data2/clickhouse/user_files/ </user_files_path> <!-- Path to configuration file with users, access rights, profiles of settings, quotas. --> <users_config> users.xml </users_config> <!-- Default profile of settings. --> <default_profile> default </default_profile> <!-- System profile of settings. This settings are used by internal processes (Buffer storage, Distibuted DDL worker and so on). --> <!-- <system_profile>default</system_profile> --> <!-- Default database. --> <default_database> default </default_database> <mlock_executable> false </mlock_executable> <zookeeper incl= \"zookeeper-servers\" optional= \"true\" /> <!-- Substitutions for parameters of replicated tables. Optional. If you don't use replicated tables, you could omit that. See https://clickhouse.yandex/docs/en/table_engines/replication/#creating-replicated-tables --> <macros incl= \"macros\" optional= \"true\" /> <!-- Reloading interval for embedded dictionaries, in seconds. Default: 3600. --> <builtin_dictionaries_reload_interval> 3600 </builtin_dictionaries_reload_interval> <!-- Maximum session timeout, in seconds. Default: 3600. --> <max_session_timeout> 3600 </max_session_timeout> <!-- Default session timeout, in seconds. Default: 60. --> <default_session_timeout> 60 </default_session_timeout> <!-- Query log. Used only for queries with setting log_queries = 1. --> <query_log> <!-- What table to insert data. If table is not exist, it will be created. When query log structure is changed after system update, then old table will be renamed and new table will be created automatically. --> <database> system </database> <table> query_log </table> <!-- PARTITION BY expr https://clickhouse.yandex/docs/en/table_engines/custom_partitioning_key/ Example: event_date toMonday(event_date) toYYYYMM(event_date) toStartOfHour(event_time) --> <partition_by> toYYYYMM(event_date) </partition_by> <!-- Interval of flushing data. --> <flush_interval_milliseconds> 7500 </flush_interval_milliseconds> </query_log> <!-- Trace log. Stores stack traces collected by query profilers. See query_profiler_real_time_period_ns and query_profiler_cpu_time_period_ns settings. --> <trace_log> <database> system </database> <table> trace_log </table> <partition_by> toYYYYMM(event_date) </partition_by> <flush_interval_milliseconds> 7500 </flush_interval_milliseconds> </trace_log> <!-- Query thread log. Has information about all threads participated in query execution. Used only for queries with setting log_query_threads = 1. --> <query_thread_log> <database> system </database> <table> query_thread_log </table> <partition_by> toYYYYMM(event_date) </partition_by> <flush_interval_milliseconds> 7500 </flush_interval_milliseconds> </query_thread_log> <dictionaries_config> *_dictionary.xml </dictionaries_config> <!-- Uncomment if you want data to be compressed 30-100% better. Don't do that if you just started using ClickHouse. --> <compression incl= \"clickhouse_compression\" > </compression> <!-- Allow to execute distributed DDL queries (CREATE, DROP, ALTER, RENAME) on cluster. Works only if ZooKeeper is enabled. Comment it if such functionality isn't required. --> <distributed_ddl> <!-- Path in ZooKeeper to queue with DDL queries --> <path> /a8root/clickhouse/task_queue/ddl </path> <!-- Settings from this profile will be used to execute DDL queries --> <!-- <profile>default</profile> --> </distributed_ddl> <graphite_rollup_example> <pattern> <regexp> click_cost </regexp> <function> any </function> <retention> <age> 0 </age> <precision> 3600 </precision> </retention> <retention> <age> 86400 </age> <precision> 60 </precision> </retention> </pattern> <default> <function> max </function> <retention> <age> 0 </age> <precision> 60 </precision> </retention> <retention> <age> 3600 </age> <precision> 300 </precision> </retention> <retention> <age> 86400 </age> <precision> 3600 </precision> </retention> </default> </graphite_rollup_example> <format_schema_path> /data2/clickhouse/format_schemas/ </format_schema_path> </yandex> \u6211\u4eec\u4e00\u822c\u4fee\u6539\u4ee5\u4e0b\u914d\u7f6e\u9879\uff1a logger \u4fee\u6539\u65e5\u5fd7\u7684\u5b58\u653e\u8def\u5f84 http_port \u4fee\u6539\u6d4f\u89c8\u5668\u8bbf\u95ee\u7684\u7aef\u53e3\uff0c\u9ed8\u8ba4\u4e3a 8123 tcp_port \u4fee\u6539tcp\u534f\u8bae\u7684\u4f20\u8f93\u7aef\u53e3 openSSL \u4e00\u4e9bssl\u7684\u8ba4\u8bc1\u914d\u7f6e\u6587\u4ef6\uff0c\u6211\u4eec\u6682\u65f6\u4e0d\u505assl\u8ba4\u8bc1\uff0c\u6b64\u5904\u4e0d\u505a\u5904\u7406 listen_host \u5982\u679c\u6211\u4eec\u8981\u5bf9\u5916\u4f7f\u7528\u670d\u52a1\u7684\u8bdd\uff0c\u6b64\u5904\u9700\u8981\u4fee\u6539\u6210 0.0.0.0 remote_servers \u6b64\u5904\u662f\u96c6\u7fa4\u76f8\u5173\u7684\u914d\u7f6e\u4fe1\u606f\u540e\u7eed\u4f1a\u8be6\u89e3 \u5176\u4ed6\u81ea\u5b9a\u4e49\u7684\u914d\u7f6e\u53ef\u81ea\u884c\u4fee\u6539\uff0c\u4fee\u6539\u914d\u7f6e\u540e\u6211\u4eec\u4fbf\u53ef\u4ee5\u542f\u52a8\u4e00\u4e2a\u672c\u5730\u7684ClickHouse\u670d\u52a1 \u521b\u5efa\u76f8\u5173\u76ee\u5f55\u53ca\u6743\u9650 mkdir -p /data2/clickhouse chown -R clickhouse:clickhouse /data2/clickhouse","title":"\u914d\u7f6eClickHouse"},{"location":"clickhouse/action/configuration_basic.html#clickhouse_2","text":"\u542f\u52a8\u670d\u52a1 sudo -u clickhouse clickhouse-server --daemon --pid-file = /var/run/clickhouse-server/clickhouse-server.pid --config-file = /etc/clickhouse-server/config.xml --daemon \u6807\u5fd7\u6211\u4eec\u8981\u540e\u53f0\u542f\u52a8\u670d\u52a1 --pid-file \u6307\u5b9a\u670d\u52a1\u542f\u52a8\u540e\u7684\u8fdb\u884c\u6587\u4ef6\u8def\u5f84 --config-file \u6307\u5b9a\u670d\u52a1\u542f\u52a8\u7684\u914d\u7f6e\u6587\u4ef6 \u5982\u679c\u6211\u4eec\u4f7f\u7528\u8c03\u8bd5\u53ef\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4 sudo -u clickhouse clickhouse-server start Note \u8981\u7528\u5355\u72ec\u7684\u7528\u6237\u542f\u52a8\uff0c\u5982\u679c\u4f7f\u7528root\u542f\u52a8\u7684\u8bdd\u7cfb\u7edf\u4f1a\u505a\u63d0\u793a\u4fe1\u606f","title":"\u64cd\u4f5cClickHouse"},{"location":"clickhouse/action/configuration_basic.html#clickhouse_3","text":"ClickHouse\u5b89\u88c5\u5b8c\u6210\u540e\u4f1a\u751f\u6210 clickhouse-server \u548c clickhouse-client \u4e24\u4e2a\u76ee\u5f55\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u4f7f\u7528 clickhouse-client \u53bb\u6d4b\u8bd5\u670d\u52a1 clickhouse-client -h clickhouse --port 9000 --multiquery --query = \"show databases\" Note \u6ce8\u610f\uff1a--port\u6307\u5b9a\u7684\u662ftcp\u7684\u7aef\u53e3 \u8fd0\u884c\u67e5\u8be2\u6570\u636e\u5e93\u5217\u8868\u8fd4\u56de\u7c7b\u4f3c\u4ee5\u4e0b\u4fe1\u606f _temporary_and_external_tables default system \u6b64\u8bed\u6cd5\u53ef\u4ee5\u4f7f\u7528\u591a\u4e2aSQL\u6309\u7167\u82f1\u6587 ; \u5206\u5272\u6bcf\u4e2aSQL\u5373\u53ef Note \u66f4\u591aclickhouse-client\u4fe1\u606f\u4f7f\u7528clickhouse-client --help\u67e5\u770b","title":"\u8c03\u8bd5ClickHouse\u670d\u52a1"},{"location":"clickhouse/action/configuration_cluster.html","tags":["ClickHouse","OLAP","\u5927\u6570\u636e"],"text":"\u6ce8\u610f \u6211\u4eec\u9700\u8981\u5728\u6bcf\u53f0\u8282\u70b9\u4e2d\u90e8\u7f72ClickHouse\u90e8\u7f72\u65b9\u5f0f\u8be6\u89c1 ClickHouse\u5b89\u88c5\u90e8\u7f72 \u6211\u4eec\u4e00\u822c\u914d\u7f6eClickHouse\u96c6\u7fa4\u53ea\u9700\u8981\u4fee\u6539Zookeeper\u5b58\u50a8\u548c\u8282\u70b9\u6dfb\u52a0\u5373\u53ef\u3002 \u8282\u70b9\u4fe1\u606f \u00b6 \u4e3b\u673a IP ck1 10.10.0.1 ck2 10.10.0.2 ck3 10.10.0.3 \u914d\u7f6eZookeeper \u00b6 \u5728 /etc/clickhouse-server/config.xml \u6587\u4ef6\u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u914d\u7f6e\u4fe1\u606f <zookeeper> <node index= \"1\" > <host> zk1 </host> <port> 2181 </port> </node> <node index= \"2\" > <host> zk2 </host> <port> 2181 </port> </node> <node index= \"3\" > <host> zk3 </host> <port> 2181 </port> </node> </zookeeper> \u6539\u914d\u7f6e\u6587\u4ef6\u4e3b\u8981\u914d\u7f6e\u8fde\u63a5Zookeeper\u7684\u4fe1\u606f\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684index\u4e0d\u53ef\u91cd\u590d Note \u6ce8\u610f\u8981\u6dfb\u52a0\u5230yandex\u8282\u70b9\u4e2d \u914d\u7f6eClickHouse\u96c6\u7fa4 \u00b6 \u914d\u7f6eClickHouse\u96c6\u7fa4\u8282\u70b9\u9700\u8981\u914d\u7f6e remote_servers \u8282\u70b9 \u5728 /etc/clickhouse-server/config.xml \u6587\u4ef6\u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u914d\u7f6e\u4fe1\u606f <remote_servers> <ck_cluster> <shard> <weight> 1 </weight> <internal_replication> true </internal_replication> <replica> <host> ck1 </host> <port> 9000 </port> </replica> <replica> <host> ck2 </host> <port> 9000 </port> </replica> </shard> <shard> <weight> 1 </weight> <internal_replication> true </internal_replication> <replica> <host> ck2 </host> <port> 9000 </port> </replica> <replica> <host> ck3 </host> <port> 9000 </port> </replica> </shard> <shard> <weight> 1 </weight> <internal_replication> true </internal_replication> <replica> <host> ck3 </host> <port> 9000 </port> </replica> <replica> <host> ck1 </host> <port> 9000 </port> </replica> </shard> </ck_cluster> </remote_servers> ck_cluster \u96c6\u7fa4\u6807\u8bc6\uff0c\u53ef\u4ee5\u81ea\u884c\u89c4\u5b9a\uff0c\u5728\u521b\u5efa\u5206\u5e03\u5f0f\u8868\uff08\u5f15\u64ce\u4e3aDistributed\uff09\u65f6\u9700\u8981\u7528\u5230\u3002 weight \u6bcf\u4e2a\u5206\u7247\u7684\u5199\u5165\u6743\u91cd\u503c\uff0c\u6570\u636e\u5199\u5165\u65f6\u4f1a\u6709\u8f83\u5927\u6982\u7387\u843d\u5230weight\u503c\u8f83\u5927\u7684\u5206\u7247\uff0c\u8fd9\u91cc\u5168\u90e8\u8bbe\u4e3a1\u3002 internal_replication \u662f\u5426\u542f\u7528\u5185\u90e8\u590d\u5236\uff0c\u5373\u5199\u5165\u6570\u636e\u65f6\u53ea\u5199\u5165\u5230\u4e00\u4e2a\u526f\u672c\uff0c\u5176\u4ed6\u526f\u672c\u7684\u540c\u6b65\u5de5\u4f5c\u9760\u590d\u5236\u8868\u548cZooKeeper\u5f02\u6b65\u8fdb\u884c\u3002 Note \u6211\u4eec\u5728shard\u5206\u7247\u4e2d\u8bbe\u7f6e\u7684\u662f\u5faa\u73af\u5206\u7247\u8fd9\u6837\u4fdd\u8bc1\u6211\u4eec\u590d\u5236\u7684\u8282\u70b9\u67d0\u4e00\u4e2a\u5b95\u673a\u540e\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c \u5c06\u914d\u7f6e\u5206\u53d1\u5230\u6240\u6709\u90e8\u7f72ClickHouse\u7684\u8282\u70b9\u4e2d\u8fdb\u884c\u670d\u52a1\u91cd\u542f \u6b64\u65f6\u6211\u4eec\u7684ClickHouse\u96c6\u7fa4\u5df2\u7ecf\u642d\u5efa\u5b8c\u6210\uff01","title":"ClickHouse\u96c6\u7fa4\u914d\u7f6e"},{"location":"clickhouse/action/configuration_cluster.html#_1","text":"\u4e3b\u673a IP ck1 10.10.0.1 ck2 10.10.0.2 ck3 10.10.0.3","title":"\u8282\u70b9\u4fe1\u606f"},{"location":"clickhouse/action/configuration_cluster.html#zookeeper","text":"\u5728 /etc/clickhouse-server/config.xml \u6587\u4ef6\u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u914d\u7f6e\u4fe1\u606f <zookeeper> <node index= \"1\" > <host> zk1 </host> <port> 2181 </port> </node> <node index= \"2\" > <host> zk2 </host> <port> 2181 </port> </node> <node index= \"3\" > <host> zk3 </host> <port> 2181 </port> </node> </zookeeper> \u6539\u914d\u7f6e\u6587\u4ef6\u4e3b\u8981\u914d\u7f6e\u8fde\u63a5Zookeeper\u7684\u4fe1\u606f\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684index\u4e0d\u53ef\u91cd\u590d Note \u6ce8\u610f\u8981\u6dfb\u52a0\u5230yandex\u8282\u70b9\u4e2d","title":"\u914d\u7f6eZookeeper"},{"location":"clickhouse/action/configuration_cluster.html#clickhouse","text":"\u914d\u7f6eClickHouse\u96c6\u7fa4\u8282\u70b9\u9700\u8981\u914d\u7f6e remote_servers \u8282\u70b9 \u5728 /etc/clickhouse-server/config.xml \u6587\u4ef6\u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u914d\u7f6e\u4fe1\u606f <remote_servers> <ck_cluster> <shard> <weight> 1 </weight> <internal_replication> true </internal_replication> <replica> <host> ck1 </host> <port> 9000 </port> </replica> <replica> <host> ck2 </host> <port> 9000 </port> </replica> </shard> <shard> <weight> 1 </weight> <internal_replication> true </internal_replication> <replica> <host> ck2 </host> <port> 9000 </port> </replica> <replica> <host> ck3 </host> <port> 9000 </port> </replica> </shard> <shard> <weight> 1 </weight> <internal_replication> true </internal_replication> <replica> <host> ck3 </host> <port> 9000 </port> </replica> <replica> <host> ck1 </host> <port> 9000 </port> </replica> </shard> </ck_cluster> </remote_servers> ck_cluster \u96c6\u7fa4\u6807\u8bc6\uff0c\u53ef\u4ee5\u81ea\u884c\u89c4\u5b9a\uff0c\u5728\u521b\u5efa\u5206\u5e03\u5f0f\u8868\uff08\u5f15\u64ce\u4e3aDistributed\uff09\u65f6\u9700\u8981\u7528\u5230\u3002 weight \u6bcf\u4e2a\u5206\u7247\u7684\u5199\u5165\u6743\u91cd\u503c\uff0c\u6570\u636e\u5199\u5165\u65f6\u4f1a\u6709\u8f83\u5927\u6982\u7387\u843d\u5230weight\u503c\u8f83\u5927\u7684\u5206\u7247\uff0c\u8fd9\u91cc\u5168\u90e8\u8bbe\u4e3a1\u3002 internal_replication \u662f\u5426\u542f\u7528\u5185\u90e8\u590d\u5236\uff0c\u5373\u5199\u5165\u6570\u636e\u65f6\u53ea\u5199\u5165\u5230\u4e00\u4e2a\u526f\u672c\uff0c\u5176\u4ed6\u526f\u672c\u7684\u540c\u6b65\u5de5\u4f5c\u9760\u590d\u5236\u8868\u548cZooKeeper\u5f02\u6b65\u8fdb\u884c\u3002 Note \u6211\u4eec\u5728shard\u5206\u7247\u4e2d\u8bbe\u7f6e\u7684\u662f\u5faa\u73af\u5206\u7247\u8fd9\u6837\u4fdd\u8bc1\u6211\u4eec\u590d\u5236\u7684\u8282\u70b9\u67d0\u4e00\u4e2a\u5b95\u673a\u540e\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c \u5c06\u914d\u7f6e\u5206\u53d1\u5230\u6240\u6709\u90e8\u7f72ClickHouse\u7684\u8282\u70b9\u4e2d\u8fdb\u884c\u670d\u52a1\u91cd\u542f \u6b64\u65f6\u6211\u4eec\u7684ClickHouse\u96c6\u7fa4\u5df2\u7ecf\u642d\u5efa\u5b8c\u6210\uff01","title":"\u914d\u7f6eClickHouse\u96c6\u7fa4"},{"location":"clickhouse/action/configuration_mulit_cluster.html","tags":["ClickHouse","OLAP","\u5927\u6570\u636e"],"text":"Note \u4e3a\u4e86\u6211\u4eec\u65b9\u4fbf\u627e\u5230\u6211\u4eec\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u6211\u4eec\u5c06CK\u96c6\u7fa4\u505a\u5206\u5f00\u914d\u7f6e \u4fee\u6539\u96c6\u7fa4\u914d\u7f6e \u00b6 \u4fee\u6539 vim /etc/clickhouse-server/config.xml \u914d\u7f6e\u6587\u4ef6 <zookeeper> <node index= \"1\" > <host> zk1 </host> <port> 2181 </port> </node> <node index= \"2\" > <host> zk2 </host> <port> 2181 </port> </node> <node index= \"3\" > <host> zk3 </host> <port> 2181 </port> </node> </zookeeper> <remote_servers> <ck_cluster> <shard> <weight> 1 </weight> <internal_replication> true </internal_replication> <replica> <host> ck1 </host> <port> 9000 </port> </replica> <replica> <host> ck2 </host> <port> 9000 </port> </replica> </shard> <shard> <weight> 1 </weight> <internal_replication> true </internal_replication> <replica> <host> ck2 </host> <port> 9000 </port> </replica> <replica> <host> ck3 </host> <port> 9000 </port> </replica> </shard> <shard> <weight> 1 </weight> <internal_replication> true </internal_replication> <replica> <host> ck3 </host> <port> 9000 </port> </replica> <replica> <host> ck1 </host> <port> 9000 </port> </replica> </shard> </ck_cluster> </remote_servers> \u5220\u9664\u4ee5\u4e0a\u4e24\u4e2a\u914d\u7f6e\u4fe1\u606f\uff0c\u65b0\u589e\u4ee5\u4e0b\u5185\u5bb9 <remote_servers incl= \"clickhouse_remote_servers\" /> <zookeeper incl= \"zookeeper-servers\" optional= \"true\" /> <include_from> /etc/clickhouse-server/ck-cluster.xml </include_from> remote_servers \u6807\u5fd7\u6211\u4eec\u5728\u5916\u90e8\u6587\u4ef6\u4e2d\u5f15\u7528\u7684\u96c6\u7fa4\u914d\u7f6e\u8282\u70b9\u662f clickhouse_remote_servers zookeeper \u6807\u5fd7\u6211\u4eec\u5728\u5916\u90e8\u6587\u4ef6\u5f15\u7528\u7684ZK\u96c6\u7fa4\u914d\u7f6e\u8282\u70b9\u662f zookeeper-servers include_from \u6807\u5fd7\u6211\u4eec\u5f15\u7528\u7684\u5916\u90e8\u914d\u7f6e\u6587\u4ef6\uff0c\u6307\u5b9a\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84 \u65b0\u5efa\u96c6\u7fa4\u914d\u7f6e\u6587\u4ef6 \u00b6 \u521a\u521a\u6211\u4eec\u6307\u5b9a\u4e86 /etc/clickhouse-server/ck-cluster.xml \u914d\u7f6e\u6587\u4ef6\uff0c\u6b64\u65f6\u6211\u4eec\u9700\u8981\u53bb\u5bf9\u8be5\u6587\u4ef6\u505a\u914d\u7f6e \u521b\u5efa\u65b0\u7684\u914d\u7f6e\u6587\u4ef6 touch /etc/clickhouse-server/ck-cluster.xml \u5728\u65b0\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\u589e\u52a0 zookeeper \u548c clickhouse \u96c6\u7fa4\u4fe1\u606f <yandex> <zookeeper-servers> <node index= \"1\" > <host> zk1 </host> <port> 2181 </port> </node> <node index= \"2\" > <host> zk2 </host> <port> 2181 </port> </node> <node index= \"3\" > <host> zk3 </host> <port> 2181 </port> </node> </zookeeper-servers> <clickhouse_remote_servers> <ck_cluster> <shard_1> <weight> 1 </weight> <internal_replication> true </internal_replication> <replica> <host> ck1 </host> <port> 9000 </port> </replica> <replica> <host> ck2 </host> <port> 9000 </port> </replica> </shard_1> <shard_2> <weight> 1 </weight> <internal_replication> true </internal_replication> <replica> <host> ck2 </host> <port> 9000 </port> </replica> <replica> <host> ck3 </host> <port> 9000 </port> </replica> </shard_2> <shard_3> <weight> 1 </weight> <internal_replication> true </internal_replication> <replica> <host> ck3 </host> <port> 9000 </port> </replica> <replica> <host> ck1 </host> <port> 9000 </port> </replica> </shard_3> </ck_cluster> </clickhouse_remote_servers> <networks> <ip> ::/0 </ip> </networks> </yandex> Note \u6b64\u5904\u9700\u8981\u6ce8\u610f\u7684\u662f\u5728yandex\u4e2d\u914d\u7f6e\u7684\u76f8\u5173\u8282\u70b9\u4e00\u5b9a\u5230\u548cconfig.xml\u4e2d\u7684 <remote_servers incl=\"clickhouse_remote_servers\" /> <zookeeper incl=\"zookeeper-servers\" optional=\"true\" /> \u8fd9\u4e24\u4e2a\u5c5e\u6027\u7684incl\u4e00\u81f4\uff0c\u5426\u5219\u4f1a\u626b\u63cf\u4e0d\u5230\u96c6\u7fa4\u6807\u5fd7 \u4fee\u6539\u914d\u7f6e\u540e\u6211\u4eec\u4e0d\u9700\u8981\u91cd\u542f\u670d\u52a1\uff0cClickHouse\u4f1a\u81ea\u52a8\u52a0\u8f7d\u4fee\u6539\u540e\u7684\u914d\u7f6e\u4fe1\u606f \u6211\u4eec\u914d\u7f6e\u591a\u4e2a\u96c6\u7fa4\u4f7f\u7528\u591a\u4e2a\u914d\u7f6e\u6587\u4ef6\u5373\u53ef\uff0c\u591a\u4e2areplica\u8282\u70b9\u914d\u7f6e\u591a\u4e2a\u4e5f\u662f\u53ef\u4ee5\u7684","title":"ClickHouse\u591a\u96c6\u7fa4\u914d\u7f6e"},{"location":"clickhouse/action/configuration_mulit_cluster.html#_1","text":"\u4fee\u6539 vim /etc/clickhouse-server/config.xml \u914d\u7f6e\u6587\u4ef6 <zookeeper> <node index= \"1\" > <host> zk1 </host> <port> 2181 </port> </node> <node index= \"2\" > <host> zk2 </host> <port> 2181 </port> </node> <node index= \"3\" > <host> zk3 </host> <port> 2181 </port> </node> </zookeeper> <remote_servers> <ck_cluster> <shard> <weight> 1 </weight> <internal_replication> true </internal_replication> <replica> <host> ck1 </host> <port> 9000 </port> </replica> <replica> <host> ck2 </host> <port> 9000 </port> </replica> </shard> <shard> <weight> 1 </weight> <internal_replication> true </internal_replication> <replica> <host> ck2 </host> <port> 9000 </port> </replica> <replica> <host> ck3 </host> <port> 9000 </port> </replica> </shard> <shard> <weight> 1 </weight> <internal_replication> true </internal_replication> <replica> <host> ck3 </host> <port> 9000 </port> </replica> <replica> <host> ck1 </host> <port> 9000 </port> </replica> </shard> </ck_cluster> </remote_servers> \u5220\u9664\u4ee5\u4e0a\u4e24\u4e2a\u914d\u7f6e\u4fe1\u606f\uff0c\u65b0\u589e\u4ee5\u4e0b\u5185\u5bb9 <remote_servers incl= \"clickhouse_remote_servers\" /> <zookeeper incl= \"zookeeper-servers\" optional= \"true\" /> <include_from> /etc/clickhouse-server/ck-cluster.xml </include_from> remote_servers \u6807\u5fd7\u6211\u4eec\u5728\u5916\u90e8\u6587\u4ef6\u4e2d\u5f15\u7528\u7684\u96c6\u7fa4\u914d\u7f6e\u8282\u70b9\u662f clickhouse_remote_servers zookeeper \u6807\u5fd7\u6211\u4eec\u5728\u5916\u90e8\u6587\u4ef6\u5f15\u7528\u7684ZK\u96c6\u7fa4\u914d\u7f6e\u8282\u70b9\u662f zookeeper-servers include_from \u6807\u5fd7\u6211\u4eec\u5f15\u7528\u7684\u5916\u90e8\u914d\u7f6e\u6587\u4ef6\uff0c\u6307\u5b9a\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84","title":"\u4fee\u6539\u96c6\u7fa4\u914d\u7f6e"},{"location":"clickhouse/action/configuration_mulit_cluster.html#_2","text":"\u521a\u521a\u6211\u4eec\u6307\u5b9a\u4e86 /etc/clickhouse-server/ck-cluster.xml \u914d\u7f6e\u6587\u4ef6\uff0c\u6b64\u65f6\u6211\u4eec\u9700\u8981\u53bb\u5bf9\u8be5\u6587\u4ef6\u505a\u914d\u7f6e \u521b\u5efa\u65b0\u7684\u914d\u7f6e\u6587\u4ef6 touch /etc/clickhouse-server/ck-cluster.xml \u5728\u65b0\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\u589e\u52a0 zookeeper \u548c clickhouse \u96c6\u7fa4\u4fe1\u606f <yandex> <zookeeper-servers> <node index= \"1\" > <host> zk1 </host> <port> 2181 </port> </node> <node index= \"2\" > <host> zk2 </host> <port> 2181 </port> </node> <node index= \"3\" > <host> zk3 </host> <port> 2181 </port> </node> </zookeeper-servers> <clickhouse_remote_servers> <ck_cluster> <shard_1> <weight> 1 </weight> <internal_replication> true </internal_replication> <replica> <host> ck1 </host> <port> 9000 </port> </replica> <replica> <host> ck2 </host> <port> 9000 </port> </replica> </shard_1> <shard_2> <weight> 1 </weight> <internal_replication> true </internal_replication> <replica> <host> ck2 </host> <port> 9000 </port> </replica> <replica> <host> ck3 </host> <port> 9000 </port> </replica> </shard_2> <shard_3> <weight> 1 </weight> <internal_replication> true </internal_replication> <replica> <host> ck3 </host> <port> 9000 </port> </replica> <replica> <host> ck1 </host> <port> 9000 </port> </replica> </shard_3> </ck_cluster> </clickhouse_remote_servers> <networks> <ip> ::/0 </ip> </networks> </yandex> Note \u6b64\u5904\u9700\u8981\u6ce8\u610f\u7684\u662f\u5728yandex\u4e2d\u914d\u7f6e\u7684\u76f8\u5173\u8282\u70b9\u4e00\u5b9a\u5230\u548cconfig.xml\u4e2d\u7684 <remote_servers incl=\"clickhouse_remote_servers\" /> <zookeeper incl=\"zookeeper-servers\" optional=\"true\" /> \u8fd9\u4e24\u4e2a\u5c5e\u6027\u7684incl\u4e00\u81f4\uff0c\u5426\u5219\u4f1a\u626b\u63cf\u4e0d\u5230\u96c6\u7fa4\u6807\u5fd7 \u4fee\u6539\u914d\u7f6e\u540e\u6211\u4eec\u4e0d\u9700\u8981\u91cd\u542f\u670d\u52a1\uff0cClickHouse\u4f1a\u81ea\u52a8\u52a0\u8f7d\u4fee\u6539\u540e\u7684\u914d\u7f6e\u4fe1\u606f \u6211\u4eec\u914d\u7f6e\u591a\u4e2a\u96c6\u7fa4\u4f7f\u7528\u591a\u4e2a\u914d\u7f6e\u6587\u4ef6\u5373\u53ef\uff0c\u591a\u4e2areplica\u8282\u70b9\u914d\u7f6e\u591a\u4e2a\u4e5f\u662f\u53ef\u4ee5\u7684","title":"\u65b0\u5efa\u96c6\u7fa4\u914d\u7f6e\u6587\u4ef6"},{"location":"clickhouse/action/table/kafka/table-engine-kafka-reader.html","tags":["ClickHouse","OLAP","\u5927\u6570\u636e","Table Engine","Kafka"],"text":"\u91cd\u8bfbKafka\u6570\u636e \u00b6 \u9ed8\u8ba4\u4eceKafka Topic\u7684\u5f00\u59cb\u4f4d\u7f6e\u5f00\u59cb\uff0c\u5e76\u5728\u5230\u8fbe\u6d88\u606f\u65f6\u5bf9\u5176\u8fdb\u884c\u8bfb\u53d6\u3002\u8fd9\u662f\u6b63\u5e38\u7684\u65b9\u5f0f\uff0c\u4f46\u662f\u6709\u65f6\u91cd\u65b0\u8bfb\u53d6\u6d88\u606f\u5f88\u6709\u7528\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u80fd\u60f3\u5728\u4fee\u590d\u67b6\u6784\u4e2d\u7684\u9519\u8bef\u6216\u91cd\u65b0\u52a0\u8f7d\u5907\u4efd\u540e\u91cd\u65b0\u8bfb\u53d6\u6d88\u606f\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u8fd9\u5f88\u5bb9\u6613\u505a\u5230\u3002\u6211\u4eec\u53ea\u662f\u5728\u6d88\u8d39\u8005\u7ec4\u4e2d\u91cd\u7f6e\u504f\u79fb\u91cf\u3002 \u5047\u8bbe\u6211\u4eec\u4e22\u5931\u4e86\u8bfb\u6570\u8868\u4e2d\u7684\u6240\u6709\u6d88\u606f\uff0c\u5e76\u5e0c\u671b\u4eceKafka\u91cd\u65b0\u52a0\u8f7d\u5b83\u4eec\u3002\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u4f7f\u7528TRUNCATE\u547d\u4ee4\u91cd\u8f7d\u6570\u636e\u3002 TRUNCATE TABLE kafka_readings ; \u5728\u91cd\u7f6e\u5206\u533a\u4e0a\u7684\u504f\u79fb\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5173\u95ed\u6d88\u606f\u4f7f\u7528\u3002\u901a\u8fc7\u5728ClickHouse\u4e2d\u5206\u79bb kafka_readings_queue \u8868\u6765\u6267\u884c\u6b64\u64cd\u4f5c\uff0c\u5982\u4e0b\u6240\u793a\u3002 DETACH TABLE kafka_readings_queue ; \u63a5\u4e0b\u6765\uff0c\u4f7f\u7528\u4ee5\u4e0bKafka\u547d\u4ee4\u5728\u7528\u4e8ekafka_readings_queue\u8868\u7684\u4f7f\u7528\u8005\u7ec4\u4e2d\u91cd\u7f6e\u5206\u533a\u504f\u79fb\u91cf\u3002 \u6ce8\u610f \u6539\u547d\u4ee4\u9700\u8981\u5728Kafka\u4e2d\u8fdb\u884c\u64cd\u4f5c\u3002 kafka-consumer-groups --bootstrap-server kafka-cluster-001:9092,kafka-cluster-002:9092 \\ --topic test --group readings_consumer_group1 \\ --reset-offsets --to-earliest --execute \u767b\u5f55\u5230 ClickHouse \uff0c\u91cd\u65b0\u8fde\u63a5 kafka_readings_queue \u8868 ATTACH TABLE kafka_readings_queue ; \u7b49\u5f85\u51e0\u79d2\u949f\uff0c\u4e22\u5931\u7684\u8bb0\u5f55\u5c06\u88ab\u6062\u590d\u3002\u6b64\u65f6\u53ef\u4ee5\u4f7f\u7528 SELECT \u8fdb\u884c\u67e5\u8be2\u3002 \u6dfb\u52a0\u6570\u636e\u5217 \u00b6 \u663e\u793a\u539f\u59cbKafka\u4fe1\u606f\u4f5c\u4e3a\u884c\u901a\u5e38\u5f88\u6709\u7528\uff0cKafka\u8868\u5f15\u64ce\u4e5f\u5b9a\u4e49\u4e86\u865a\u62df\u5217\uff0c\u4ee5\u4e0b\u66f4\u6539\u6570\u636e\u8868\u4ee5\u663e\u793aTopic\u5206\u533a\u548c\u504f\u79fb\u91cf\u7684\u65b9\u6cd5\u3002 \u5206\u79bbKafka\u8868\u6765\u7981\u7528\u6d88\u606f\u4f7f\u7528\u3002\u4e0d\u5f71\u54cd\u6570\u636e\u7684\u751f\u4ea7 DETACH TABLE kafka_readings_queue ; \u4f9d\u6b21\u6267\u884c\u4ee5\u4e0bSQL\u547d\u4ee4\u6765\u66f4\u6539\u76ee\u6807\u8868\u548c\u5b9e\u4f8b\u5316\u89c6\u56fe \u6ce8\u610f \u6211\u4eec\u53ea\u662f\u91cd\u65b0\u521b\u5efa\u5b9e\u4f8b\u5316\u89c6\u56fe\uff0c\u800c\u6211\u4eec\u66f4\u6539\u4e86\u76ee\u6807\u8868\uff0c\u8be5\u8868\u4fdd\u7559\u4e86\u73b0\u6709\u6570\u636e\u3002 ALTER TABLE kafka_readings ADD COLUMN name String ; \u5220\u9664\u5e76\u91cd\u65b0\u6784\u5efa\u89c6\u56fe\u8868 DROP TABLE kafka_readings_view ; CREATE MATERIALIZED VIEW kafka_readings_distributed_view TO kafka_readings_distributed AS SELECT id , platForm , appname , time , name FROM kafka_readings_queue ; \u91cd\u65b0\u8fde\u63a5 kafka_readings_queue \u8868\u6765\u518d\u6b21\u542f\u7528\u6d88\u606f\u4f7f\u7528 ATTACH TABLE readings_queue \u67e5\u8be2\u6570\u636e\u8868\u4fe1\u606f select * from kafka_readings_view ; Query id: 52a27f19-eab1-4932-bc13-51792557809d \u250c\u2500id\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500platForm\u2500\u2500\u252c\u2500appname\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500time\u2500\u252c\u2500\u2500\u2500name\u2500\u2510 \u2502 20201123123337811 -840028 \u2502 kafka \u2502 \u2502 2020 -11-23 12 :33:42 \u2502 test \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 1 rows in set. Elapsed: 0 .003 sec. Processed 2 .51 thousand rows, 176 .96 KB ( 985 .20 thousand rows/s., 69 .38 MB/s. ) \u6ce8\u610f kafka\u6e90\u6570\u636e\u4e2d\u9700\u8981\u5305\u542b\u65b0\u7684\u5b57\u6bb5\u5217\uff0c\u5426\u5219\u6570\u636e\u5c31\u662fnull \u6d88\u606f\u683c\u5f0f\u66f4\u6539\u65f6\u5347\u7ea7\u67b6\u6784\u7684\u65b9\u6cd5\u4e0d\u53d8\u3002\u540c\u6837\uff0c\u7269\u5316\u89c6\u56fe\u63d0\u4f9b\u4e86\u4e00\u79cd\u975e\u5e38\u901a\u7528\u7684\u65b9\u5f0f\u6765\u4f7fKafka\u6d88\u606f\u9002\u5e94\u76ee\u6807\u8868\u6570\u636e\u3002\u60a8\u751a\u81f3\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u5b9e\u4f8b\u5316\u89c6\u56fe\uff0c\u4ee5\u5c06\u6d88\u606f\u6d41\u62c6\u5206\u5230\u4e0d\u540c\u7684\u76ee\u6807\u8868\u4e2d\u3002","title":"ClickHouse\u6574\u5408Kafka(\u8bfb)"},{"location":"clickhouse/action/table/kafka/table-engine-kafka-reader.html#kafka","text":"\u9ed8\u8ba4\u4eceKafka Topic\u7684\u5f00\u59cb\u4f4d\u7f6e\u5f00\u59cb\uff0c\u5e76\u5728\u5230\u8fbe\u6d88\u606f\u65f6\u5bf9\u5176\u8fdb\u884c\u8bfb\u53d6\u3002\u8fd9\u662f\u6b63\u5e38\u7684\u65b9\u5f0f\uff0c\u4f46\u662f\u6709\u65f6\u91cd\u65b0\u8bfb\u53d6\u6d88\u606f\u5f88\u6709\u7528\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u80fd\u60f3\u5728\u4fee\u590d\u67b6\u6784\u4e2d\u7684\u9519\u8bef\u6216\u91cd\u65b0\u52a0\u8f7d\u5907\u4efd\u540e\u91cd\u65b0\u8bfb\u53d6\u6d88\u606f\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u8fd9\u5f88\u5bb9\u6613\u505a\u5230\u3002\u6211\u4eec\u53ea\u662f\u5728\u6d88\u8d39\u8005\u7ec4\u4e2d\u91cd\u7f6e\u504f\u79fb\u91cf\u3002 \u5047\u8bbe\u6211\u4eec\u4e22\u5931\u4e86\u8bfb\u6570\u8868\u4e2d\u7684\u6240\u6709\u6d88\u606f\uff0c\u5e76\u5e0c\u671b\u4eceKafka\u91cd\u65b0\u52a0\u8f7d\u5b83\u4eec\u3002\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u4f7f\u7528TRUNCATE\u547d\u4ee4\u91cd\u8f7d\u6570\u636e\u3002 TRUNCATE TABLE kafka_readings ; \u5728\u91cd\u7f6e\u5206\u533a\u4e0a\u7684\u504f\u79fb\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5173\u95ed\u6d88\u606f\u4f7f\u7528\u3002\u901a\u8fc7\u5728ClickHouse\u4e2d\u5206\u79bb kafka_readings_queue \u8868\u6765\u6267\u884c\u6b64\u64cd\u4f5c\uff0c\u5982\u4e0b\u6240\u793a\u3002 DETACH TABLE kafka_readings_queue ; \u63a5\u4e0b\u6765\uff0c\u4f7f\u7528\u4ee5\u4e0bKafka\u547d\u4ee4\u5728\u7528\u4e8ekafka_readings_queue\u8868\u7684\u4f7f\u7528\u8005\u7ec4\u4e2d\u91cd\u7f6e\u5206\u533a\u504f\u79fb\u91cf\u3002 \u6ce8\u610f \u6539\u547d\u4ee4\u9700\u8981\u5728Kafka\u4e2d\u8fdb\u884c\u64cd\u4f5c\u3002 kafka-consumer-groups --bootstrap-server kafka-cluster-001:9092,kafka-cluster-002:9092 \\ --topic test --group readings_consumer_group1 \\ --reset-offsets --to-earliest --execute \u767b\u5f55\u5230 ClickHouse \uff0c\u91cd\u65b0\u8fde\u63a5 kafka_readings_queue \u8868 ATTACH TABLE kafka_readings_queue ; \u7b49\u5f85\u51e0\u79d2\u949f\uff0c\u4e22\u5931\u7684\u8bb0\u5f55\u5c06\u88ab\u6062\u590d\u3002\u6b64\u65f6\u53ef\u4ee5\u4f7f\u7528 SELECT \u8fdb\u884c\u67e5\u8be2\u3002","title":"\u91cd\u8bfbKafka\u6570\u636e"},{"location":"clickhouse/action/table/kafka/table-engine-kafka-reader.html#_1","text":"\u663e\u793a\u539f\u59cbKafka\u4fe1\u606f\u4f5c\u4e3a\u884c\u901a\u5e38\u5f88\u6709\u7528\uff0cKafka\u8868\u5f15\u64ce\u4e5f\u5b9a\u4e49\u4e86\u865a\u62df\u5217\uff0c\u4ee5\u4e0b\u66f4\u6539\u6570\u636e\u8868\u4ee5\u663e\u793aTopic\u5206\u533a\u548c\u504f\u79fb\u91cf\u7684\u65b9\u6cd5\u3002 \u5206\u79bbKafka\u8868\u6765\u7981\u7528\u6d88\u606f\u4f7f\u7528\u3002\u4e0d\u5f71\u54cd\u6570\u636e\u7684\u751f\u4ea7 DETACH TABLE kafka_readings_queue ; \u4f9d\u6b21\u6267\u884c\u4ee5\u4e0bSQL\u547d\u4ee4\u6765\u66f4\u6539\u76ee\u6807\u8868\u548c\u5b9e\u4f8b\u5316\u89c6\u56fe \u6ce8\u610f \u6211\u4eec\u53ea\u662f\u91cd\u65b0\u521b\u5efa\u5b9e\u4f8b\u5316\u89c6\u56fe\uff0c\u800c\u6211\u4eec\u66f4\u6539\u4e86\u76ee\u6807\u8868\uff0c\u8be5\u8868\u4fdd\u7559\u4e86\u73b0\u6709\u6570\u636e\u3002 ALTER TABLE kafka_readings ADD COLUMN name String ; \u5220\u9664\u5e76\u91cd\u65b0\u6784\u5efa\u89c6\u56fe\u8868 DROP TABLE kafka_readings_view ; CREATE MATERIALIZED VIEW kafka_readings_distributed_view TO kafka_readings_distributed AS SELECT id , platForm , appname , time , name FROM kafka_readings_queue ; \u91cd\u65b0\u8fde\u63a5 kafka_readings_queue \u8868\u6765\u518d\u6b21\u542f\u7528\u6d88\u606f\u4f7f\u7528 ATTACH TABLE readings_queue \u67e5\u8be2\u6570\u636e\u8868\u4fe1\u606f select * from kafka_readings_view ; Query id: 52a27f19-eab1-4932-bc13-51792557809d \u250c\u2500id\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500platForm\u2500\u2500\u252c\u2500appname\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500time\u2500\u252c\u2500\u2500\u2500name\u2500\u2510 \u2502 20201123123337811 -840028 \u2502 kafka \u2502 \u2502 2020 -11-23 12 :33:42 \u2502 test \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 1 rows in set. Elapsed: 0 .003 sec. Processed 2 .51 thousand rows, 176 .96 KB ( 985 .20 thousand rows/s., 69 .38 MB/s. ) \u6ce8\u610f kafka\u6e90\u6570\u636e\u4e2d\u9700\u8981\u5305\u542b\u65b0\u7684\u5b57\u6bb5\u5217\uff0c\u5426\u5219\u6570\u636e\u5c31\u662fnull \u6d88\u606f\u683c\u5f0f\u66f4\u6539\u65f6\u5347\u7ea7\u67b6\u6784\u7684\u65b9\u6cd5\u4e0d\u53d8\u3002\u540c\u6837\uff0c\u7269\u5316\u89c6\u56fe\u63d0\u4f9b\u4e86\u4e00\u79cd\u975e\u5e38\u901a\u7528\u7684\u65b9\u5f0f\u6765\u4f7fKafka\u6d88\u606f\u9002\u5e94\u76ee\u6807\u8868\u6570\u636e\u3002\u60a8\u751a\u81f3\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u5b9e\u4f8b\u5316\u89c6\u56fe\uff0c\u4ee5\u5c06\u6d88\u606f\u6d41\u62c6\u5206\u5230\u4e0d\u540c\u7684\u76ee\u6807\u8868\u4e2d\u3002","title":"\u6dfb\u52a0\u6570\u636e\u5217"},{"location":"clickhouse/action/table/kafka/table-engine-kafka-writer.html","tags":["ClickHouse","OLAP","\u5927\u6570\u636e","Table Engine","Kafka"],"text":"\u672c\u6587\u7ae0\u4e3b\u8981\u8bb2\u89e3\u5982\u4f55\u5c06ClickHouse\u4e2d\u7684\u6d88\u606f\u5199\u56de\u5230Kafka\u3002 ClickHouse\u8bfb\u53d6Kafka\u6570\u636e\u8be6\u89c1 ClickHouse\u6574\u5408Kafka(\u8bfb) Kafka\u76f8\u5173\u64cd\u4f5c \u00b6 \u5728Kafka\u4e2d\u521b\u5efa kafka_writers Topic\u7528\u4e8e\u63a5\u6536ClickHouse\u5199\u5165\u7684\u6570\u636e kafka-topics \\ --zookeeper localhost:2181 \\ --topic kafka_writers \\ --create --partitions 2 \\ --replication-factor 2 \u6267\u884c\u547d\u4ee4\u540e\u8fd4\u56de\u5982\u4e0b\u54cd\u5e94 Created topic \"kafka_writers\". \u8fd9\u6807\u5fd7\u7740topic\u5df2\u7ecf\u521b\u5efa\u6210\u529f\u3002 ClickHouse\u76f8\u5173\u64cd\u4f5c \u00b6 \u521b\u5efa kafka_writers_reader \u8868\uff0c\u7528\u4e8e\u6807\u8bb0\u8bfb\u53d6kafka\u6570\u636e[ \u6b64\u5904\u4e5f\u4e0d\u53ef\u4ee5\u64cd\u4f5c ] CREATE TABLE kafka_writers_reader \\ ( \\ `id` Int, \\ `platForm` String, \\ `appname` String, \\ `time` DateTime \\ ) \\ ENGINE = Kafka \\ SETTINGS kafka_broker_list = 'localhost:9092', kafka_topic_list = 'kafka_writers_reader', kafka_group_name = 'kafka_writers_reader_group', kafka_format = 'CSV'; \u6211\u4eec\u9700\u8981\u4f7f\u7528Kafka\u8868\u5f15\u64ce\u5b9a\u4e49\u4e00\u4e2a\u8868\uff0c\u8be5\u8868\u6307\u5411\u6211\u4eec\u7684 kafka_writers \u4e3b\u9898\u3002\u8be5\u8868\u53ef\u4ee5\u8bfb\u53d6\u548c\u5199\u5165Kafka\u6d88\u606f(\u6211\u4eec\u5728\u6b64\u53ea\u505a\u5199\u5165\u64cd\u4f5c)\u3002 CREATE TABLE kafka_writers_queue ( \\ id Int, \\ platForm String, \\ appname String, \\ time DateTime \\ ) \\ ENGINE = Kafka \\ SETTINGS kafka_broker_list = 'localhost:9092', \\ kafka_topic_list = 'kafka_writers', \\ kafka_group_name = 'kafka_writers_group', \\ kafka_format = 'CSV', \\ kafka_max_block_size = 1048576; Note \u6b64\u5904\u6211\u4eec\u4e3a\u4e86\u65b9\u4fbf\u4f7f\u7528\u4e86CSV\u683c\u5f0f\u5316\u6570\u636e\u683c\u5f0f\uff0c\u5177\u4f53\u7684\u6570\u636e\u683c\u5f0f\u6839\u636e\u6570\u636e\u800c\u5b9a\u3002 \u521b\u5efa kafka_writers_view \u7269\u5316\u89c6\u56fe\u7528\u4e8e\u5c06ID\u5927\u4e8e5\u7684\u6570\u636e\u8f93\u5165\u5230 kafka_writers Topic\u4e2d CREATE MATERIALIZED VIEW kafka_writers_view TO \\ kafka_writers_queue AS \\ SELECT id, platForm, appname FROM kafka_writers_reader \\ WHERE id >= 20; \u9a8c\u8bc1Kafka\u6570\u636e\u7684\u5199\u5165 \u00b6 \u767b\u5f55\u5230Kafka\u96c6\u7fa4\u4e2d\u6d88\u8d39 kafka_writers \u6570\u636e kafka-console-consumer --bootstrap-server localhost:9092 --topic kafka_writers \u65b0\u5f00\u53e6\u4e00\u4e2a\u7a97\u53e3\u5bf9 kafka_writers_reader Kafka\u4e3b\u9898\u505a\u751f\u4ea7\u6570\u636e\u64cd\u4f5c kafka-console-producer --broker-list kafka:9092 --topic kafka_writers_reader <<END 4,\"Data\",\"Test\",\"2020-12-23 14:45:31\" 5,\"Plan\",\"Test1\",\"2020-12-23 14:47:32\" 22,\"Plan\",\"Test2\",\"2020-12-23 14:52:15\" 7,\"Data\",\"Test3\",\"2020-12-23 14:54:39\" END Note \u5982\u679c\u6211\u4eec\u6ca1\u6709\u521b\u5efa kafka_writers_reader \u4e3b\u9898\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u5ffd\u7565\u6b64\u6b65\u9aa4\u4f7f\u7528\u4e0b\u4e00\u6b65\u65b9\u5f0f \u63d2\u5165ClickHouse\u6570\u636e\u5230``\u8868\u4e2d INSERT INTO kafka_writers_reader (id, platForm, appname, time) \\ VALUES (4,'Data','Test','2020-12-23 14:45:31'), \\ (5,'Plan','Test1','2020-12-23 14:47:32'), \\ (22,'Plan','Test2','2020-12-23 14:52:15'), \\ (7,'Data','Test3','2020-12-23 14:54:39'); \u7ecf\u8fc7\u77ed\u6682\u7684\u65f6\u5019\u540e\uff0c\u6211\u4eec\u4f1a\u5728\u6d88\u8d39 kafka_writers \u7a97\u53e3\u4e0b\u770b\u5230\u4ee5\u4e0b\u4fe1\u606f\u7684\u8f93\u51fa \"22\",\"Plan\",\"Test2\",\"1970-01-01 08:00:00\" \u8fd9\u6807\u5fd7\u7740\u6211\u4eec\u7684\u6570\u636e\u5df2\u7ecf\u6210\u529f\u5199\u5165Kakfa\u4e2d\u3002","title":"ClickHouse\u6574\u5408Kafka(\u5199)"},{"location":"clickhouse/action/table/kafka/table-engine-kafka-writer.html#kafka","text":"\u5728Kafka\u4e2d\u521b\u5efa kafka_writers Topic\u7528\u4e8e\u63a5\u6536ClickHouse\u5199\u5165\u7684\u6570\u636e kafka-topics \\ --zookeeper localhost:2181 \\ --topic kafka_writers \\ --create --partitions 2 \\ --replication-factor 2 \u6267\u884c\u547d\u4ee4\u540e\u8fd4\u56de\u5982\u4e0b\u54cd\u5e94 Created topic \"kafka_writers\". \u8fd9\u6807\u5fd7\u7740topic\u5df2\u7ecf\u521b\u5efa\u6210\u529f\u3002","title":"Kafka\u76f8\u5173\u64cd\u4f5c"},{"location":"clickhouse/action/table/kafka/table-engine-kafka-writer.html#clickhouse","text":"\u521b\u5efa kafka_writers_reader \u8868\uff0c\u7528\u4e8e\u6807\u8bb0\u8bfb\u53d6kafka\u6570\u636e[ \u6b64\u5904\u4e5f\u4e0d\u53ef\u4ee5\u64cd\u4f5c ] CREATE TABLE kafka_writers_reader \\ ( \\ `id` Int, \\ `platForm` String, \\ `appname` String, \\ `time` DateTime \\ ) \\ ENGINE = Kafka \\ SETTINGS kafka_broker_list = 'localhost:9092', kafka_topic_list = 'kafka_writers_reader', kafka_group_name = 'kafka_writers_reader_group', kafka_format = 'CSV'; \u6211\u4eec\u9700\u8981\u4f7f\u7528Kafka\u8868\u5f15\u64ce\u5b9a\u4e49\u4e00\u4e2a\u8868\uff0c\u8be5\u8868\u6307\u5411\u6211\u4eec\u7684 kafka_writers \u4e3b\u9898\u3002\u8be5\u8868\u53ef\u4ee5\u8bfb\u53d6\u548c\u5199\u5165Kafka\u6d88\u606f(\u6211\u4eec\u5728\u6b64\u53ea\u505a\u5199\u5165\u64cd\u4f5c)\u3002 CREATE TABLE kafka_writers_queue ( \\ id Int, \\ platForm String, \\ appname String, \\ time DateTime \\ ) \\ ENGINE = Kafka \\ SETTINGS kafka_broker_list = 'localhost:9092', \\ kafka_topic_list = 'kafka_writers', \\ kafka_group_name = 'kafka_writers_group', \\ kafka_format = 'CSV', \\ kafka_max_block_size = 1048576; Note \u6b64\u5904\u6211\u4eec\u4e3a\u4e86\u65b9\u4fbf\u4f7f\u7528\u4e86CSV\u683c\u5f0f\u5316\u6570\u636e\u683c\u5f0f\uff0c\u5177\u4f53\u7684\u6570\u636e\u683c\u5f0f\u6839\u636e\u6570\u636e\u800c\u5b9a\u3002 \u521b\u5efa kafka_writers_view \u7269\u5316\u89c6\u56fe\u7528\u4e8e\u5c06ID\u5927\u4e8e5\u7684\u6570\u636e\u8f93\u5165\u5230 kafka_writers Topic\u4e2d CREATE MATERIALIZED VIEW kafka_writers_view TO \\ kafka_writers_queue AS \\ SELECT id, platForm, appname FROM kafka_writers_reader \\ WHERE id >= 20;","title":"ClickHouse\u76f8\u5173\u64cd\u4f5c"},{"location":"clickhouse/action/table/kafka/table-engine-kafka-writer.html#kafka_1","text":"\u767b\u5f55\u5230Kafka\u96c6\u7fa4\u4e2d\u6d88\u8d39 kafka_writers \u6570\u636e kafka-console-consumer --bootstrap-server localhost:9092 --topic kafka_writers \u65b0\u5f00\u53e6\u4e00\u4e2a\u7a97\u53e3\u5bf9 kafka_writers_reader Kafka\u4e3b\u9898\u505a\u751f\u4ea7\u6570\u636e\u64cd\u4f5c kafka-console-producer --broker-list kafka:9092 --topic kafka_writers_reader <<END 4,\"Data\",\"Test\",\"2020-12-23 14:45:31\" 5,\"Plan\",\"Test1\",\"2020-12-23 14:47:32\" 22,\"Plan\",\"Test2\",\"2020-12-23 14:52:15\" 7,\"Data\",\"Test3\",\"2020-12-23 14:54:39\" END Note \u5982\u679c\u6211\u4eec\u6ca1\u6709\u521b\u5efa kafka_writers_reader \u4e3b\u9898\u7684\u8bdd\uff0c\u6211\u4eec\u53ef\u4ee5\u5ffd\u7565\u6b64\u6b65\u9aa4\u4f7f\u7528\u4e0b\u4e00\u6b65\u65b9\u5f0f \u63d2\u5165ClickHouse\u6570\u636e\u5230``\u8868\u4e2d INSERT INTO kafka_writers_reader (id, platForm, appname, time) \\ VALUES (4,'Data','Test','2020-12-23 14:45:31'), \\ (5,'Plan','Test1','2020-12-23 14:47:32'), \\ (22,'Plan','Test2','2020-12-23 14:52:15'), \\ (7,'Data','Test3','2020-12-23 14:54:39'); \u7ecf\u8fc7\u77ed\u6682\u7684\u65f6\u5019\u540e\uff0c\u6211\u4eec\u4f1a\u5728\u6d88\u8d39 kafka_writers \u7a97\u53e3\u4e0b\u770b\u5230\u4ee5\u4e0b\u4fe1\u606f\u7684\u8f93\u51fa \"22\",\"Plan\",\"Test2\",\"1970-01-01 08:00:00\" \u8fd9\u6807\u5fd7\u7740\u6211\u4eec\u7684\u6570\u636e\u5df2\u7ecf\u6210\u529f\u5199\u5165Kakfa\u4e2d\u3002","title":"\u9a8c\u8bc1Kafka\u6570\u636e\u7684\u5199\u5165"},{"location":"clickhouse/action/table/kafka/table_engine_kafka.html","tags":["ClickHouse","OLAP","\u5927\u6570\u636e","Table Engine","Kafka"],"text":"\u8981\u5c06\u6570\u636e\u4eceKafka\u4e3b\u9898\u8bfb\u53d6\u5230ClickHouse\u8868\uff0c\u6211\u4eec\u9700\u8981\u4e09\u4ef6\u4e8b\uff1a \u4e00\u4e2a\u76ee\u6807MergeTree\u8868\uff0c\u4ee5\u63d0\u4f9b\u63a5\u6536\u6570\u636e\u7684\u5bbf\u4e3b Kafka\u5f15\u64ce\u8868\uff0c\u4f7f\u4e3b\u9898\u770b\u8d77\u6765\u50cfClickHouse\u8868 \u7269\u5316\u89c6\u56fe\uff0c\u53ef\u5c06\u6570\u636e\u81ea\u52a8\u4eceKafka\u79fb\u52a8\u5230\u76ee\u6807\u8868 \u521b\u5efa\u5b58\u50a8\u6d88\u8d39\u6570\u636e\u8868 \u00b6 \u521b\u5efa kafka_readings \u7528\u4e8e\u63a5\u6536Kafka\u7684\u6570\u636e\uff0c\u767b\u5f55\u5230ClickHouse\u5e76\u6267\u884c\u4ee5\u4e0bSQL CREATE TABLE kafka_readings ( id String , platForm String , appname String , time DateTime ) Engine = MergeTree PARTITION BY toYYYYMMDD ( time ) ORDER BY ( time ); MergeTree \u6307\u5b9a\u521b\u5efa\u8868\u7684\u5f15\u64ce PARTITION BY \u6307\u5b9a\u6211\u4eec\u7684\u5206\u533a\u6570\u636e\uff0c\u6211\u4eec\u4f7f\u7528\u65f6\u95f4\u8f6c\u6362\u4e3aymd\u683c\u5f0f ORDER BY \u6307\u5b9a\u6211\u4eec\u7684\u6392\u5e8f\u89c4\u5219\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u4e0d\u6307\u5b9a \u521b\u5efa\u6d88\u8d39Kafka\u6570\u636e\u8868 \u00b6 \u4f7f\u7528Kafka\u5f15\u64ce\u521b\u5efa\u4e00\u4e2a\u8868\u4ee5\u8fde\u63a5\u5230\u4e3b\u9898\u5e76\u8bfb\u53d6\u6570\u636e\u3002\u8be5\u5f15\u64ce\u5c06\u4f7f\u7528\u6d88\u8d39\u4e3b\u9898 test \u548c\u6d88\u8d39\u8005\u7ec4 test_consumer_group1 \u4ecekafka\u7684\u96c6\u7fa4\u4e2d\u8bfb\u53d6\u6570\u636e\u3002\u8f93\u5165\u683c\u5f0f\u4e3a JSONEachRow \u3002 Note \u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u7701\u7565\u4e86 time \u5217\u3002\u8fd9\u662f\u76ee\u6807\u8868\u4e2d\u7684\u522b\u540d\uff0c\u5c06\u4ece time \u5217\u81ea\u52a8\u586b\u5145\u3002 \u767b\u5f55\u5230ClickHouse\u5e76\u6267\u884c\u4ee5\u4e0bSQL CREATE TABLE kafka_readings_queue ( id String , platForm String , appname String , time DateTime ) ENGINE = Kafka SETTINGS kafka_broker_list = 'kafka-cluster-001:9092,kafka-cluster-002:9092' , kafka_topic_list = 'test' , kafka_group_name = 'readings_consumer_group1' , kafka_format = 'JSONEachRow' ; kafka_broker_list kafka\u6d88\u8d39\u96c6\u7fa4\u7684broker\u5217\u8868 kafka_topic_list \u6d88\u8d39kafka\u7684Topic kafka_group_name kafka\u6d88\u8d39\u7ec4 kafka_format \u6d88\u8d39\u6570\u636e\u7684\u683c\u5f0f\u5316\u7c7b\u578b\uff0c\u5f53\u7136\u8fd8\u6709\u5176\u4ed6\u683c\u5f0f\u7684\u6570\u636e\u8be6\u89c1 Formats for Input and Output Data JSONEachRow\u8868\u793a\u6bcf\u884c\u4e00\u6761\u6570\u636e\u7684json\u683c\u5f0f\u3002\u4e00\u822c\u5982\u679c\u662fjson\u683c\u5f0f\u7684\u8bdd\uff0c\u8bbe\u7f6eJSONEachRow\u5373\u53ef \u5982\u679c\u9700\u8981\u8f93\u5165\u5d4c\u5957\u7684json\uff0c\u8bf7\u8bbe\u7f6einput_format_import_nested_json=1 \u521b\u5efa\u7269\u5316\u89c6\u56fe\u5408\u5e76\u8868\u4f20\u8f93\u6570\u636e \u00b6 \u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u4e86\u672c\u5730\u6570\u636e\u8868\u548c\u6d88\u8d39Kafka\u8868\uff0c\u6700\u540e\u9700\u8981\u521b\u5efa\u89c6\u56fe\u8868\u65b9\u4fbf\u628a\u6570\u636e\u5bfc\u5165\u5230ClickHouse\uff0c\u767b\u5f55\u5230ClickHouse\u5e76\u6267\u884c\u4ee5\u4e0bSQL CREATE MATERIALIZED VIEW kafka_readings_view TO kafka_readings AS SELECT id , platForm , appname , time FROM kafka_readings_queue ; \u6d4b\u8bd5\u5404\u4e2a\u6570\u636e\u8868 \u00b6 \u6211\u4eec\u4f7f\u7528\u4ee5\u4e0bSQL\u5206\u522b\u53bb\u6d4b\u8bd5\u67e5\u8be2\u6570\u636e \u67e5\u8be2 kafka_readings \u8868\uff0c\u4f1a\u8fd4\u56de\u76f8\u5173\u6570\u636e\u603b\u6570 select count ( 1 ) from kafka_readings ; SELECT count ( 1 ) FROM kafka_readings Query id: 25375f84-9271-4e7b-bf32-cf1ccadef78e \u250c\u2500count ( 1 ) \u2500\u2510 \u2502 8834 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 1 rows in set. Elapsed: 0 .003 sec. \u67e5\u8be2 kafka_readings_queue \u8868\uff0c\u4f1a\u8fd4\u56de\u5f53\u524dKafka\u65b0\u589e\u6d88\u8d39\u6570\u636e\u603b\u6570(\u8fde\u63a5kafka\u4f1a\u6709\u4e9b\u6162) select count ( 1 ) from kafka_readings_queue ; SELECT count ( 1 ) FROM kafka_readings_queue Query id: 420b4430-673e-411c-8db9-509fcc23feef \u250c\u2500count ( 1 ) \u2500\u2510 \u2502 0 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 1 rows in set. Elapsed: 7 .215 sec. \u5982\u679c\u6709\u65b0\u589e\u6570\u636e\u7684\u8bdd\u90a3\u4e48\u8fd9\u91cc\u7684 count(1) \u5c31\u662f\u975e0\u6570\u636e\uff0c\u8fd9\u91cc\u7684\u6570\u4f1a\u51fa\u73b0\u53d8\u5316\uff0c\u6839\u636e\u65b0\u7684\u6570\u636e\u800c\u5b9a \u67e5\u8be2 kafka_readings_view \u8868\uff0c\u4e00\u822c\u5f97\u5230\u7684\u6570\u636e\u548c kafka_readings \u76f8\u5dee\u65e0\u51e0\uff0c\u9664\u975e\u5b9e\u65f6\u6570\u636e\u5f88\u591a select count ( 1 ) from kafka_readings_view ; SELECT count ( 1 ) FROM kafka_readings_view Query id: 302e3306-dc38-4668-9469-edd109430e39 \u250c\u2500count ( 1 ) \u2500\u2510 \u2502 8861 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 1 rows in set. Elapsed: 0 .003 sec. Processed 8 .86 thousand rows, 35 .44 KB ( 3 .13 million rows/s., 12 .50 MB/s. ) \u521b\u5efa\u5206\u5e03\u5f0f\u8868 \u00b6 CREATE TABLE kafka_readings_distributed ON CLUSTER mycluster_1 ( id String , platForm String , appname String , time DateTime ) ENGINE = ReplicatedMergeTree ( '/clickhouse/tables/replicated/{shard}/kafka_readings_distributed' , '{replica}' ) PARTITION BY ymd ORDER BY id Note \u8fd9\u91cc\u4e5f\u53ef\u4ee5\u53bb\u521b\u5efaDistributed\u8868\uff0c\u770b\u60c5\u51b5\u800c\u5b9a \u521b\u5efa\u89c6\u56fe\u7684\u8f6c\u6362 CREATE MATERIALIZED VIEW kafka_readings_distributed_view TO kafka_readings_distributed AS SELECT id , platForm , appname , time FROM kafka_readings_queue ; \u6b64\u65f6\u53bb\u67e5\u8be2\u8be5\u8868\u6570\u636e\u5373\u53ef\u3002","title":"ClickHouse\u6574\u5408Kafka"},{"location":"clickhouse/action/table/kafka/table_engine_kafka.html#_1","text":"\u521b\u5efa kafka_readings \u7528\u4e8e\u63a5\u6536Kafka\u7684\u6570\u636e\uff0c\u767b\u5f55\u5230ClickHouse\u5e76\u6267\u884c\u4ee5\u4e0bSQL CREATE TABLE kafka_readings ( id String , platForm String , appname String , time DateTime ) Engine = MergeTree PARTITION BY toYYYYMMDD ( time ) ORDER BY ( time ); MergeTree \u6307\u5b9a\u521b\u5efa\u8868\u7684\u5f15\u64ce PARTITION BY \u6307\u5b9a\u6211\u4eec\u7684\u5206\u533a\u6570\u636e\uff0c\u6211\u4eec\u4f7f\u7528\u65f6\u95f4\u8f6c\u6362\u4e3aymd\u683c\u5f0f ORDER BY \u6307\u5b9a\u6211\u4eec\u7684\u6392\u5e8f\u89c4\u5219\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u4e0d\u6307\u5b9a","title":"\u521b\u5efa\u5b58\u50a8\u6d88\u8d39\u6570\u636e\u8868"},{"location":"clickhouse/action/table/kafka/table_engine_kafka.html#kafka","text":"\u4f7f\u7528Kafka\u5f15\u64ce\u521b\u5efa\u4e00\u4e2a\u8868\u4ee5\u8fde\u63a5\u5230\u4e3b\u9898\u5e76\u8bfb\u53d6\u6570\u636e\u3002\u8be5\u5f15\u64ce\u5c06\u4f7f\u7528\u6d88\u8d39\u4e3b\u9898 test \u548c\u6d88\u8d39\u8005\u7ec4 test_consumer_group1 \u4ecekafka\u7684\u96c6\u7fa4\u4e2d\u8bfb\u53d6\u6570\u636e\u3002\u8f93\u5165\u683c\u5f0f\u4e3a JSONEachRow \u3002 Note \u8bf7\u6ce8\u610f\uff0c\u6211\u4eec\u7701\u7565\u4e86 time \u5217\u3002\u8fd9\u662f\u76ee\u6807\u8868\u4e2d\u7684\u522b\u540d\uff0c\u5c06\u4ece time \u5217\u81ea\u52a8\u586b\u5145\u3002 \u767b\u5f55\u5230ClickHouse\u5e76\u6267\u884c\u4ee5\u4e0bSQL CREATE TABLE kafka_readings_queue ( id String , platForm String , appname String , time DateTime ) ENGINE = Kafka SETTINGS kafka_broker_list = 'kafka-cluster-001:9092,kafka-cluster-002:9092' , kafka_topic_list = 'test' , kafka_group_name = 'readings_consumer_group1' , kafka_format = 'JSONEachRow' ; kafka_broker_list kafka\u6d88\u8d39\u96c6\u7fa4\u7684broker\u5217\u8868 kafka_topic_list \u6d88\u8d39kafka\u7684Topic kafka_group_name kafka\u6d88\u8d39\u7ec4 kafka_format \u6d88\u8d39\u6570\u636e\u7684\u683c\u5f0f\u5316\u7c7b\u578b\uff0c\u5f53\u7136\u8fd8\u6709\u5176\u4ed6\u683c\u5f0f\u7684\u6570\u636e\u8be6\u89c1 Formats for Input and Output Data JSONEachRow\u8868\u793a\u6bcf\u884c\u4e00\u6761\u6570\u636e\u7684json\u683c\u5f0f\u3002\u4e00\u822c\u5982\u679c\u662fjson\u683c\u5f0f\u7684\u8bdd\uff0c\u8bbe\u7f6eJSONEachRow\u5373\u53ef \u5982\u679c\u9700\u8981\u8f93\u5165\u5d4c\u5957\u7684json\uff0c\u8bf7\u8bbe\u7f6einput_format_import_nested_json=1","title":"\u521b\u5efa\u6d88\u8d39Kafka\u6570\u636e\u8868"},{"location":"clickhouse/action/table/kafka/table_engine_kafka.html#_2","text":"\u6211\u4eec\u5df2\u7ecf\u521b\u5efa\u4e86\u672c\u5730\u6570\u636e\u8868\u548c\u6d88\u8d39Kafka\u8868\uff0c\u6700\u540e\u9700\u8981\u521b\u5efa\u89c6\u56fe\u8868\u65b9\u4fbf\u628a\u6570\u636e\u5bfc\u5165\u5230ClickHouse\uff0c\u767b\u5f55\u5230ClickHouse\u5e76\u6267\u884c\u4ee5\u4e0bSQL CREATE MATERIALIZED VIEW kafka_readings_view TO kafka_readings AS SELECT id , platForm , appname , time FROM kafka_readings_queue ;","title":"\u521b\u5efa\u7269\u5316\u89c6\u56fe\u5408\u5e76\u8868\u4f20\u8f93\u6570\u636e"},{"location":"clickhouse/action/table/kafka/table_engine_kafka.html#_3","text":"\u6211\u4eec\u4f7f\u7528\u4ee5\u4e0bSQL\u5206\u522b\u53bb\u6d4b\u8bd5\u67e5\u8be2\u6570\u636e \u67e5\u8be2 kafka_readings \u8868\uff0c\u4f1a\u8fd4\u56de\u76f8\u5173\u6570\u636e\u603b\u6570 select count ( 1 ) from kafka_readings ; SELECT count ( 1 ) FROM kafka_readings Query id: 25375f84-9271-4e7b-bf32-cf1ccadef78e \u250c\u2500count ( 1 ) \u2500\u2510 \u2502 8834 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 1 rows in set. Elapsed: 0 .003 sec. \u67e5\u8be2 kafka_readings_queue \u8868\uff0c\u4f1a\u8fd4\u56de\u5f53\u524dKafka\u65b0\u589e\u6d88\u8d39\u6570\u636e\u603b\u6570(\u8fde\u63a5kafka\u4f1a\u6709\u4e9b\u6162) select count ( 1 ) from kafka_readings_queue ; SELECT count ( 1 ) FROM kafka_readings_queue Query id: 420b4430-673e-411c-8db9-509fcc23feef \u250c\u2500count ( 1 ) \u2500\u2510 \u2502 0 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 1 rows in set. Elapsed: 7 .215 sec. \u5982\u679c\u6709\u65b0\u589e\u6570\u636e\u7684\u8bdd\u90a3\u4e48\u8fd9\u91cc\u7684 count(1) \u5c31\u662f\u975e0\u6570\u636e\uff0c\u8fd9\u91cc\u7684\u6570\u4f1a\u51fa\u73b0\u53d8\u5316\uff0c\u6839\u636e\u65b0\u7684\u6570\u636e\u800c\u5b9a \u67e5\u8be2 kafka_readings_view \u8868\uff0c\u4e00\u822c\u5f97\u5230\u7684\u6570\u636e\u548c kafka_readings \u76f8\u5dee\u65e0\u51e0\uff0c\u9664\u975e\u5b9e\u65f6\u6570\u636e\u5f88\u591a select count ( 1 ) from kafka_readings_view ; SELECT count ( 1 ) FROM kafka_readings_view Query id: 302e3306-dc38-4668-9469-edd109430e39 \u250c\u2500count ( 1 ) \u2500\u2510 \u2502 8861 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 1 rows in set. Elapsed: 0 .003 sec. Processed 8 .86 thousand rows, 35 .44 KB ( 3 .13 million rows/s., 12 .50 MB/s. )","title":"\u6d4b\u8bd5\u5404\u4e2a\u6570\u636e\u8868"},{"location":"clickhouse/action/table/kafka/table_engine_kafka.html#_4","text":"CREATE TABLE kafka_readings_distributed ON CLUSTER mycluster_1 ( id String , platForm String , appname String , time DateTime ) ENGINE = ReplicatedMergeTree ( '/clickhouse/tables/replicated/{shard}/kafka_readings_distributed' , '{replica}' ) PARTITION BY ymd ORDER BY id Note \u8fd9\u91cc\u4e5f\u53ef\u4ee5\u53bb\u521b\u5efaDistributed\u8868\uff0c\u770b\u60c5\u51b5\u800c\u5b9a \u521b\u5efa\u89c6\u56fe\u7684\u8f6c\u6362 CREATE MATERIALIZED VIEW kafka_readings_distributed_view TO kafka_readings_distributed AS SELECT id , platForm , appname , time FROM kafka_readings_queue ; \u6b64\u65f6\u53bb\u67e5\u8be2\u8be5\u8868\u6570\u636e\u5373\u53ef\u3002","title":"\u521b\u5efa\u5206\u5e03\u5f0f\u8868"},{"location":"clickhouse/action/table/kafka/table_engine_kafka_issues_001.html","tags":["ClickHouse","OLAP","\u5927\u6570\u636e","Table Engine","Kafka","Issues"],"text":"\u7ebf\u4e0aClickHouse\u96c6\u7fa4\u53d1\u73b0Kafka\u5f15\u64ce\u8868\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c\uff0c\u7269\u5316\u89c6\u56fe\u672a\u89e6\u53d1\uff0c\u65e0\u6cd5\u5c06\u6570\u636e\u6b63\u5e38\u7684\u6444\u53d6\u5230ClickHouse\u672c\u5730\u8868\u4e2d,\u67e5\u770bClickHouse\u65e5\u5fd7( clickhouse-server.err.log )\u53d1\u73b0Kafka\u5f15\u64ce\u8868\u51fa\u73b0poll\u5931\u8d25\u9000\u51fa\u7684\u95ee\u9898,\u65e5\u5fd7\u4e2d\u663e\u793a\u5982\u4e0b\u5185\u5bb9 2022.03.09 16 : 49 : 11.188012 [ 538056 ] { de2d06ca - 8 b96 - 4 ad7 - b805 - 09414 f05fdad } < Error > StorageKafka ( kafka_engine_table ): Error during draining : Local : Maximum application poll interval ( max . poll . interval . ms ) exceeded 2022.03.09 16 : 49 : 11.289315 [ 538056 ] { de2d06ca - 8 b96 - 4 ad7 - b805 - 09414 f05fdad } < Error > StorageKafka ( kafka_engine_table ): Error during draining : Local : Maximum application poll interval ( max . poll . interval . ms ) exceeded 2022.03.09 16 : 55 : 40.776456 [ 8094 ] {} < Warning > StorageKafka ( kafka_engine_table ): [ rdk : MAXPOLL ] [ thrd : main ] : Application maximum poll interval ( 300000 ms ) exceeded by 51 ms ( adjust max . poll . interval . ms for long - running message processing ): leaving group 2022.03.09 16 : 55 : 45.277079 [ 8100 ] {} < Warning > StorageKafka ( kafka_engine_table ): [ rdk : MAXPOLL ] [ thrd : main ] : Application maximum poll interval ( 300000 ms ) exceeded by 50 ms ( adjust max . poll . interval . ms for long - running message processing ): leaving group \u95ee\u9898\u6392\u67e5 \u00b6 Kafka\u5f15\u64ce\u8868\u5728poll\u6570\u636e\u7684\u65f6\u5019\u76f4\u63a5\u8d85\u65f6\u5e76\u79bb\u5f00\u6d88\u8d39\u7ec4. \u4f46\u662f\u5728\u96c6\u7fa4\u4e2d\u6709\u5927\u91cf\u7684Kafka\u5f15\u64ce\u8868\u90fd\u53ef\u4ee5\u6b63\u5e38\u6444\u53d6\u6570\u636e,\u6211\u4eec\u9996\u5148\u6392\u9664\u4e86\u8fd9\u662f\u7f51\u7edc\u7684\u95ee\u9898. \u671f\u95f4\u4e5f\u5c1d\u8bd5\u8fc7\u5220\u9664Kafka\u5f15\u64ce\u8868\u91cd\u5efa\u8fd8\u662f\u540c\u6837\u7684\u95ee\u9898, \u76f4\u63a5\u67e5\u8be2Kafka\u5f15\u64ce\u8868\u53ef\u4ee5\u6b63\u5e38\u83b7\u53d6\u6570\u636e select * from kafka_engine_table_name limit 100 \u6392\u9664\u662fKafka\u670d\u52a1\u7684\u95ee\u9898. \u67e5\u770b\u4e86\u4ee5\u4e0b\u6211\u4eec\u7684ClickHouse\u7248\u672c\u662f 20.11.3.3 , \u7ecf\u8fc7\u7ffb\u9605ClickHouse\u6e90\u7801\u53d1\u73b0 https://github.com/ClickHouse/ClickHouse/blob/master/src/Core/Settings.h \u914d\u7f6e\u4e2d\u6709\u4e00\u4e2a\u540d\u4e3a background_schedule_pool_size \u7684\u914d\u7f6e\u9009\u9879. \u6e90\u7801\u89e3\u91ca\u5982\u4e0b: Note M(UInt64, background_schedule_pool_size, 128, \"Number of threads performing background tasks for replicated tables, dns cache updates. Only has meaning at server startup.\", 0) \u6539\u53c2\u6570\u7528\u4e8e\u914d\u7f6e\u8868\u540e\u53f0\u8fd0\u884ctask\u7684\u9009\u9879,\u521d\u6b65\u5224\u65ad\u662f\u8fd9\u91cc\u7684\u95ee\u9898,\u4f46\u662f\u770b\u6e90\u7801\u8fd9\u91cc\u663e\u793a\u7684\u662f\u9ed8\u8ba4\u503c 128 \u7406\u8bba\u4e0a\u6211\u4eec\u7684\u96c6\u7fa4\u4e2d\u662f\u4e0d\u4f1a\u8d85\u8fc7\u8fd9\u4e2a\u503c\u7684, \u6211\u4eec\u524d\u5f80ClickHouse\u670d\u52a1\u5668\u4e2d\u8fdb\u884c\u4e86\u53c2\u6570\u7684\u67e5\u8be2\u53d1\u73b0\u7cfb\u7edf\u914d\u7f6e\u7684\u662f 16 \u7136\u540e\u7ed3\u5408\u8be5\u6587\u4ef6\u7684\u63d0\u4ea4\u5386\u53f2\u53d1\u73b0 alesapin 2021/6/8, 18:55 Increase background schedule pool default size \u63d0\u4ea4\u5386\u53f2\u7684 commit \u7136\u540e\u7ed3\u5408\u53d1\u5e03\u5386\u53f2\u7248\u672c\u53d1\u73b0\u6539\u53c2\u6570\u662f\u5728 21.3.9.83 \u7248\u672c\u4ee5\u540e\u624d\u8bbe\u7f6e\u7684\u9ed8\u8ba4\u503c 128 \u6211\u4eec\u901a\u8fc7\u4ee5\u4e0bSQL\u67e5\u8be2ClickHouse\u670d\u52a1\u5668\u7684\u9ed8\u8ba4\u914d\u7f6e\u548c\u76d1\u63a7\u6307\u6807: WITH t0 AS ( SELECT value AS defaultValue FROM ` system ` . settings WHERE name = 'background_schedule_pool_size' ), t1 AS ( SELECT value AS currentValue FROM ` system ` . metrics WHERE metric = 'BackgroundSchedulePoolTask' ) SELECT defaultValue , currentValue FROM t0 , t1 \u5f97\u5230\u4ee5\u4e0b\u7ed3\u679c Query id: 82dfca06-b416-49c8-8a96-5d30b2abebc2 \u250c\u2500defaultValue\u2500\u252c\u2500currentValue\u2500\u2510 \u2502 16 \u2502 16 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 1 rows in set. Elapsed: 0 .003 sec. \u53d1\u73b0\u5f53\u524d\u503c\u5df2\u7ecf\u8fbe\u5230\u914d\u7f6e\u7684\u6700\u5927\u503c\uff0c\u9700\u8981\u589e\u52a0\u4ee5\u6269\u5c55\u540e\u53f0\u6267\u884c\u7684Task\u4efb\u52a1\u6570, \u6211\u4eec\u53c2\u7167\u65b0\u6e90\u7801\u7684 128 \u914d\u7f6e. Warning \u6839\u636e\u6e90\u7801\u89e3\u91ca\u8bf4\u8be5\u53c2\u6570\u9700\u8981\u91cd\u542f\u670d\u52a1,\u914d\u7f6e\u5b8c\u6210\u540e\u91cd\u542fClickHouse\u96c6\u7fa4. \u914d\u7f6e\u65b9\u5f0f \u00b6 \u4fee\u6539 users.xml \u589e\u52a0\u5982\u4e0b\u914d\u7f6e <background_schedule_pool_size> 128 </background_schedule_pool_size> Warning \u589e\u52a0\u5230 profiles ---> default \u8282\u70b9\u4e0b \u91cd\u542fClickHouse\u96c6\u7fa4\u540e,Kafka\u5f15\u64ce\u8868\u53ef\u4ee5\u6b63\u5e38\u6444\u53d6\u6570\u636e!!!","title":"Kafka\u5f15\u64ce\u8868\u5e38\u89c1\u95ee\u9898001"},{"location":"clickhouse/action/table/kafka/table_engine_kafka_issues_001.html#_1","text":"Kafka\u5f15\u64ce\u8868\u5728poll\u6570\u636e\u7684\u65f6\u5019\u76f4\u63a5\u8d85\u65f6\u5e76\u79bb\u5f00\u6d88\u8d39\u7ec4. \u4f46\u662f\u5728\u96c6\u7fa4\u4e2d\u6709\u5927\u91cf\u7684Kafka\u5f15\u64ce\u8868\u90fd\u53ef\u4ee5\u6b63\u5e38\u6444\u53d6\u6570\u636e,\u6211\u4eec\u9996\u5148\u6392\u9664\u4e86\u8fd9\u662f\u7f51\u7edc\u7684\u95ee\u9898. \u671f\u95f4\u4e5f\u5c1d\u8bd5\u8fc7\u5220\u9664Kafka\u5f15\u64ce\u8868\u91cd\u5efa\u8fd8\u662f\u540c\u6837\u7684\u95ee\u9898, \u76f4\u63a5\u67e5\u8be2Kafka\u5f15\u64ce\u8868\u53ef\u4ee5\u6b63\u5e38\u83b7\u53d6\u6570\u636e select * from kafka_engine_table_name limit 100 \u6392\u9664\u662fKafka\u670d\u52a1\u7684\u95ee\u9898. \u67e5\u770b\u4e86\u4ee5\u4e0b\u6211\u4eec\u7684ClickHouse\u7248\u672c\u662f 20.11.3.3 , \u7ecf\u8fc7\u7ffb\u9605ClickHouse\u6e90\u7801\u53d1\u73b0 https://github.com/ClickHouse/ClickHouse/blob/master/src/Core/Settings.h \u914d\u7f6e\u4e2d\u6709\u4e00\u4e2a\u540d\u4e3a background_schedule_pool_size \u7684\u914d\u7f6e\u9009\u9879. \u6e90\u7801\u89e3\u91ca\u5982\u4e0b: Note M(UInt64, background_schedule_pool_size, 128, \"Number of threads performing background tasks for replicated tables, dns cache updates. Only has meaning at server startup.\", 0) \u6539\u53c2\u6570\u7528\u4e8e\u914d\u7f6e\u8868\u540e\u53f0\u8fd0\u884ctask\u7684\u9009\u9879,\u521d\u6b65\u5224\u65ad\u662f\u8fd9\u91cc\u7684\u95ee\u9898,\u4f46\u662f\u770b\u6e90\u7801\u8fd9\u91cc\u663e\u793a\u7684\u662f\u9ed8\u8ba4\u503c 128 \u7406\u8bba\u4e0a\u6211\u4eec\u7684\u96c6\u7fa4\u4e2d\u662f\u4e0d\u4f1a\u8d85\u8fc7\u8fd9\u4e2a\u503c\u7684, \u6211\u4eec\u524d\u5f80ClickHouse\u670d\u52a1\u5668\u4e2d\u8fdb\u884c\u4e86\u53c2\u6570\u7684\u67e5\u8be2\u53d1\u73b0\u7cfb\u7edf\u914d\u7f6e\u7684\u662f 16 \u7136\u540e\u7ed3\u5408\u8be5\u6587\u4ef6\u7684\u63d0\u4ea4\u5386\u53f2\u53d1\u73b0 alesapin 2021/6/8, 18:55 Increase background schedule pool default size \u63d0\u4ea4\u5386\u53f2\u7684 commit \u7136\u540e\u7ed3\u5408\u53d1\u5e03\u5386\u53f2\u7248\u672c\u53d1\u73b0\u6539\u53c2\u6570\u662f\u5728 21.3.9.83 \u7248\u672c\u4ee5\u540e\u624d\u8bbe\u7f6e\u7684\u9ed8\u8ba4\u503c 128 \u6211\u4eec\u901a\u8fc7\u4ee5\u4e0bSQL\u67e5\u8be2ClickHouse\u670d\u52a1\u5668\u7684\u9ed8\u8ba4\u914d\u7f6e\u548c\u76d1\u63a7\u6307\u6807: WITH t0 AS ( SELECT value AS defaultValue FROM ` system ` . settings WHERE name = 'background_schedule_pool_size' ), t1 AS ( SELECT value AS currentValue FROM ` system ` . metrics WHERE metric = 'BackgroundSchedulePoolTask' ) SELECT defaultValue , currentValue FROM t0 , t1 \u5f97\u5230\u4ee5\u4e0b\u7ed3\u679c Query id: 82dfca06-b416-49c8-8a96-5d30b2abebc2 \u250c\u2500defaultValue\u2500\u252c\u2500currentValue\u2500\u2510 \u2502 16 \u2502 16 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 1 rows in set. Elapsed: 0 .003 sec. \u53d1\u73b0\u5f53\u524d\u503c\u5df2\u7ecf\u8fbe\u5230\u914d\u7f6e\u7684\u6700\u5927\u503c\uff0c\u9700\u8981\u589e\u52a0\u4ee5\u6269\u5c55\u540e\u53f0\u6267\u884c\u7684Task\u4efb\u52a1\u6570, \u6211\u4eec\u53c2\u7167\u65b0\u6e90\u7801\u7684 128 \u914d\u7f6e. Warning \u6839\u636e\u6e90\u7801\u89e3\u91ca\u8bf4\u8be5\u53c2\u6570\u9700\u8981\u91cd\u542f\u670d\u52a1,\u914d\u7f6e\u5b8c\u6210\u540e\u91cd\u542fClickHouse\u96c6\u7fa4.","title":"\u95ee\u9898\u6392\u67e5"},{"location":"clickhouse/action/table/kafka/table_engine_kafka_issues_001.html#_2","text":"\u4fee\u6539 users.xml \u589e\u52a0\u5982\u4e0b\u914d\u7f6e <background_schedule_pool_size> 128 </background_schedule_pool_size> Warning \u589e\u52a0\u5230 profiles ---> default \u8282\u70b9\u4e0b \u91cd\u542fClickHouse\u96c6\u7fa4\u540e,Kafka\u5f15\u64ce\u8868\u53ef\u4ee5\u6b63\u5e38\u6444\u53d6\u6570\u636e!!!","title":"\u914d\u7f6e\u65b9\u5f0f"},{"location":"google/guice/index.html","tags":["Google","Guice","Java","\u4f9d\u8d56\u6ce8\u5165"],"text":"Guice\u662fJava\u7684\u8f7b\u91cf\u7ea7 \u4f9d\u8d56\u6ce8\u5165 (DI) \u6846\u67b6\u3002 \u4f7f\u7528\u4f9d\u8d56\u9879\u6ce8\u5165\u6709\u5f88\u591a\u4f18\u70b9\uff0c\u4f46\u662f\u624b\u5de5\u8fdb\u884c\u8fd9\u6837\u505a\u5e38\u5e38\u4f1a\u5bfc\u81f4\u7f16\u5199\u5927\u91cf\u7684\u6837\u677f\u4ee3\u7801\u3002Guice\u662f\u4e00\u4e2a\u6846\u67b6\uff0c\u5b83\u4f7f\u7f16\u5199\u4f7f\u7528\u4f9d\u8d56\u6ce8\u5165\u7684\u4ee3\u7801\u6210\u4e3a\u53ef\u80fd\uff0c\u800c\u65e0\u9700\u7f16\u5199\u5927\u91cf\u6837\u677f\u4ee3\u7801. \u7b80\u5355\u5730\u8bf4\uff0cGuice\u51cf\u8f7b\u4e86\u5bf9\u5de5\u5382\u7684\u9700\u6c42\u548cJava\u4ee3\u7801\u4e2dnew\u7684\u4f7f\u7528\u3002\u53ef\u4ee5\u5c06Guice\u7684@Inject\u770b\u4f5c\u662fnew\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u60a8\u4ecd\u7136\u9700\u8981\u7f16\u5199\u5de5\u5382\uff0c\u4f46\u60a8\u7684\u4ee3\u7801\u5c06\u4e0d\u4f1a\u76f4\u63a5\u4f9d\u8d56\u4e8e\u5b83\u4eec\u3002\u60a8\u7684\u4ee3\u7801\u5c06\u66f4\u5bb9\u6613\u66f4\u6539\u3001\u5355\u5143\u6d4b\u8bd5\u548c\u5728\u5176\u4ed6\u73af\u5883\u4e2d\u91cd\u7528\u3002 Guice\u652f\u6301Java\u7684\u7c7b\u578b\u5b89\u5168\u7279\u6027\uff0c\u7279\u522b\u662f\u6d89\u53ca\u5230Java 5\u4e2d\u5f15\u5165\u7684\u7279\u6027\u65f6\uff0c\u6bd4\u5982\u6cdb\u578b\u548c\u6ce8\u91ca\u3002\u60a8\u53ef\u80fd\u8ba4\u4e3aGuice\u586b\u8865\u4e86\u6838\u5fc3Java\u6240\u7f3a\u5c11\u7684\u7279\u6027\u3002\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u8bed\u8a00\u672c\u8eab\u5e94\u8be5\u63d0\u4f9b\u5927\u591a\u6570\u76f8\u540c\u7684\u7279\u6027\uff0c\u4f46\u662f\u5728\u51fa\u73b0\u8fd9\u6837\u4e00\u79cd\u8bed\u8a00\u4e4b\u524d\uff0c\u6211\u4eec\u6709Guice\u3002 Guice\u5e2e\u52a9\u60a8\u8bbe\u8ba1\u66f4\u597d\u7684API, Guice API\u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50\u3002Guice\u4e0d\u662f\u53a8\u623f\u91cc\u7684\u6c34\u69fd\u3002\u6211\u4eec\u81f3\u5c11\u7528\u4e09\u4e2a\u7528\u4f8b\u6765\u8bc1\u660e\u6bcf\u4e2a\u7279\u6027\u3002\u6709\u7591\u95ee\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u4e0d\u8bf4\u4e86\u3002\u6211\u4eec\u6784\u5efa\u901a\u7528\u529f\u80fd\uff0c\u4f7f\u60a8\u80fd\u591f\u6269\u5c55Guice\uff0c\u800c\u4e0d\u662f\u5c06\u6240\u6709\u7279\u6027\u6dfb\u52a0\u5230\u6838\u5fc3\u6846\u67b6\u4e2d\u3002 Guice\u7684\u76ee\u6807\u662f\u4f7f\u5f00\u53d1\u548c\u8c03\u8bd5\u53d8\u5f97\u66f4\u5bb9\u6613\u548c\u66f4\u5feb\uff0c\u800c\u4e0d\u662f\u66f4\u56f0\u96be\u548c\u66f4\u6162\u3002\u5728\u8fd9\u4e00\u70b9\u4e0a\uff0cGuice\u907f\u5f00\u4e86\u60ca\u559c\u548c\u9b54\u6cd5\u3002\u65e0\u8bba\u662f\u5426\u4f7f\u7528\u5de5\u5177\uff0c\u60a8\u90fd\u5e94\u8be5\u80fd\u591f\u7406\u89e3\u4ee3\u7801\uff0c\u5c3d\u7ba1\u5de5\u5177\u53ef\u4ee5\u4f7f\u4e8b\u60c5\u53d8\u5f97\u66f4\u5bb9\u6613\u3002\u5f53\u786e\u5b9e\u53d1\u751f\u9519\u8bef\u65f6\uff0cGuice\u4f1a\u66f4\u52aa\u529b\u5730\u751f\u6210\u6709\u7528\u7684\u6d88\u606f\u3002","title":"Index"},{"location":"google/guice/aop-basic.html","tags":["Google","Guice","Java","AOP"],"text":"\u672c\u6559\u7a0b\u4e3b\u8981\u8be6\u7ec6\u8bb2\u89e3Guice\u7684\u4e00\u4e9bAOP\u65b9\u5f0f,\u901a\u8fc7\u8be5\u7b80\u5355\u6559\u7a0b\u8ba9\u6211\u4eec\u53ef\u4ee5\u5feb\u901f\u4f7f\u7528Guice\u8fdb\u884cAOP\u5f00\u53d1,\u540e\u7eed\u6211\u4eec\u4f1a\u66f4\u6df1\u5165\u8bb2\u89e3\u66f4\u591aGuice\u4e2d\u7684AOP. \u57fa\u7840\u73af\u5883 \u00b6 \u6280\u672f \u7248\u672c Java 1.8+ Guice 4.2.3 \u521d\u59cb\u5316\u9879\u76ee \u00b6 \u521d\u59cb\u5316\u9879\u76ee mvn archetype:generate -DgroupId = io.edurt.lc.guice -DartifactId = guice-aop-basic -DarchetypeArtifactId = maven-archetype-quickstart -Dversion = 1 .0.0 -DinteractiveMode = false \u4fee\u6539pom.xml\u589e\u52a0Guice\u4f9d\u8d56 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <parent> <artifactId> lc-guice </artifactId> <groupId> io.edurt.lc.guice </groupId> <version> 1.0.0 </version> </parent> <modelVersion> 4.0.0 </modelVersion> <artifactId> guice-aop-basic </artifactId> <name> Learning Center for Guice AOP(Basic) </name> <properties> <maven.compiler.source> 1.8 </maven.compiler.source> <maven.compiler.target> 1.8 </maven.compiler.target> </properties> <dependencies> <dependency> <groupId> com.google.inject </groupId> <artifactId> guice </artifactId> <version> 4.2.3 </version> </dependency> <dependency> <groupId> junit </groupId> <artifactId> junit </artifactId> <version> 4.12 </version> <scope> test </scope> </dependency> </dependencies> </project> guice : guice\u5c31\u662f\u6211\u4eec\u6838\u5fc3\u8981\u4f7f\u7528\u7684\u4f9d\u8d56 \u521d\u59cb\u5316Service \u00b6 \u9996\u5148\u6211\u4eec\u5b9a\u4e49\u670d\u52a1Service\uff0c\u8fd9\u4e2a\u670d\u52a1\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u65b9\u6cd5 println . \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceAopService \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; public interface GuiceAopService { void println ( String input ); } \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceAopServiceImpl \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; public class GuiceAopServiceImpl implements GuiceAopService { @Override public void println ( String input ) { System . out . println ( \"Guice AOP Service : \" + input ); } } \u5b9a\u4e49AOP\u6a21\u578b \u00b6 \u63a5\u4e0b\u6765\u5b9a\u4e49\u4e00\u4e2aAOP\u7684\u5b9e\u73b0\u3002\u5728Aopalliance\u4e2d\uff08\u5927\u5bb6\u90fd\u8ba4\u53ef\u7684AOP\u8054\u76df\uff09\u5b9e\u73b0\u6211\u4eec\u7684\u62e6\u622a\u5668\u3002 GuiceAopLoggerMethodInterceptor \u62e6\u622a\u5668\u4e5f\u6ca1\u6709\u505a\u4ec0\u4e48\u7279\u522b\u7684\u4e8b\u60c5\uff0c\u53ea\u662f\u8bb0\u5f55\u4e9b\u6267\u884c\u7684\u65f6\u95f4\uff0c\u7531\u4e8e\u6267\u884c\u65f6\u95f4\u6bd4\u8f83\u77ed\u6211\u4eec\u7528\u7eb3\u79d2\u6765\u8868\u793a\u3002 \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceAopLoggerMethodInterceptor \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; import org.aopalliance.intercept.MethodInterceptor ; import org.aopalliance.intercept.MethodInvocation ; public class GuiceAopLoggerMethodInterceptor implements MethodInterceptor { @Override public Object invoke ( MethodInvocation methodInvocation ) throws Throwable { String methodName = methodInvocation . getMethod (). getName (); long startTime = System . nanoTime (); System . out . println ( String . format ( \"Before Method[%s] start in %s\" , methodName , startTime )); Object response ; try { response = methodInvocation . proceed (); } finally { long endTime = System . nanoTime (); System . out . println ( String . format ( \"After Method[%s] stop %s, Elapsed(nanosecond): %d\" , methodName , endTime , ( endTime - startTime ))); } return response ; } } \u63a5\u4e0b\u6765\u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.TestGuiceAOP \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.Guice ; import com.google.inject.Injector ; import com.google.inject.matcher.Matchers ; import org.junit.Test ; public class TestGuiceAOP { @Test public void test () { Injector injector = Guice . createInjector ( binder -> binder . bindInterceptor ( Matchers . any (), Matchers . any (), new GuiceAopLoggerMethodInterceptor ())); GuiceAopService aopService = injector . getInstance ( GuiceAopService . class ); aopService . println ( \"AOP Demo\" ); } } \u6211\u4eec\u8fd0\u884c\u7a0b\u5e8f\u8f93\u51fa Before Method [ println ] start in 206944653651583 Guice AOP Service : AOP Demo After Method [ println ] stop 206944657624333 , Elapsed ( nanosecond ) : 3972750 \u9700\u8981\u6ce8\u610f\u7684\u662f: \u7531\u4e8e\u4f7f\u7528\u4e86AOP\u6211\u4eec\u7684\u670d\u52a1\u5f97\u5230\u7684\u4e0d\u518d\u662f\u6211\u4eec\u5199\u7684\u670d\u52a1\u5b9e\u73b0\u7c7b\u4e86\uff0c\u800c\u662f\u4e00\u4e2a\u7ee7\u627f\u7684\u5b50\u7c7b\uff0c\u8fd9\u4e2a\u5b50\u7c7b\u662f\u5728\u5185\u5b58\u4e2d\u5b8c\u6210\u7684\u3002 \u9664\u4e86\u7b2c\u4e00\u6b21\u8c03\u7528\u6bd4\u8f83\u8017\u65f6\u5916(Guice\u5185\u90e8\u505a\u4e86\u6bd4\u8f83\u591a\u7684\u5904\u7406),\u5176\u5b83\u8c03\u7528\u4e8b\u4ef6\u6beb\u79d2\u6570\u4f1a\u964d\u4f4e(\u8fd9\u4e2a\u548c\u6211\u4eec\u670d\u52a1\u672c\u8eab\u6709\u5173\u7cfb) \u7c7b\u5fc5\u987b\u662fpublic\u6216\u8005package(default) \u7c7b\u4e0d\u80fd\u662ffinal\u7c7b\u578b \u65b9\u6cd5\u5fc5\u987b\u662fpublic,package\u6216\u8005protected \u65b9\u6cd5\u4e0d\u80fd\u4f7ffinal\u7c7b\u578b \u5b9e\u4f8b\u5fc5\u987b\u901a\u8fc7Guice\u7684@Inject\u6ce8\u5165\u6216\u8005\u6709\u4e00\u4e2a\u65e0\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570 \u6e90\u7801\u5730\u5740 \u00b6 GitHub","title":"Guice AOP(\u57fa\u7840\u7248)"},{"location":"google/guice/aop-basic.html#_1","text":"\u6280\u672f \u7248\u672c Java 1.8+ Guice 4.2.3","title":"\u57fa\u7840\u73af\u5883"},{"location":"google/guice/aop-basic.html#_2","text":"\u521d\u59cb\u5316\u9879\u76ee mvn archetype:generate -DgroupId = io.edurt.lc.guice -DartifactId = guice-aop-basic -DarchetypeArtifactId = maven-archetype-quickstart -Dversion = 1 .0.0 -DinteractiveMode = false \u4fee\u6539pom.xml\u589e\u52a0Guice\u4f9d\u8d56 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <parent> <artifactId> lc-guice </artifactId> <groupId> io.edurt.lc.guice </groupId> <version> 1.0.0 </version> </parent> <modelVersion> 4.0.0 </modelVersion> <artifactId> guice-aop-basic </artifactId> <name> Learning Center for Guice AOP(Basic) </name> <properties> <maven.compiler.source> 1.8 </maven.compiler.source> <maven.compiler.target> 1.8 </maven.compiler.target> </properties> <dependencies> <dependency> <groupId> com.google.inject </groupId> <artifactId> guice </artifactId> <version> 4.2.3 </version> </dependency> <dependency> <groupId> junit </groupId> <artifactId> junit </artifactId> <version> 4.12 </version> <scope> test </scope> </dependency> </dependencies> </project> guice : guice\u5c31\u662f\u6211\u4eec\u6838\u5fc3\u8981\u4f7f\u7528\u7684\u4f9d\u8d56","title":"\u521d\u59cb\u5316\u9879\u76ee"},{"location":"google/guice/aop-basic.html#service","text":"\u9996\u5148\u6211\u4eec\u5b9a\u4e49\u670d\u52a1Service\uff0c\u8fd9\u4e2a\u670d\u52a1\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u65b9\u6cd5 println . \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceAopService \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; public interface GuiceAopService { void println ( String input ); } \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceAopServiceImpl \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; public class GuiceAopServiceImpl implements GuiceAopService { @Override public void println ( String input ) { System . out . println ( \"Guice AOP Service : \" + input ); } }","title":"\u521d\u59cb\u5316Service"},{"location":"google/guice/aop-basic.html#aop","text":"\u63a5\u4e0b\u6765\u5b9a\u4e49\u4e00\u4e2aAOP\u7684\u5b9e\u73b0\u3002\u5728Aopalliance\u4e2d\uff08\u5927\u5bb6\u90fd\u8ba4\u53ef\u7684AOP\u8054\u76df\uff09\u5b9e\u73b0\u6211\u4eec\u7684\u62e6\u622a\u5668\u3002 GuiceAopLoggerMethodInterceptor \u62e6\u622a\u5668\u4e5f\u6ca1\u6709\u505a\u4ec0\u4e48\u7279\u522b\u7684\u4e8b\u60c5\uff0c\u53ea\u662f\u8bb0\u5f55\u4e9b\u6267\u884c\u7684\u65f6\u95f4\uff0c\u7531\u4e8e\u6267\u884c\u65f6\u95f4\u6bd4\u8f83\u77ed\u6211\u4eec\u7528\u7eb3\u79d2\u6765\u8868\u793a\u3002 \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceAopLoggerMethodInterceptor \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; import org.aopalliance.intercept.MethodInterceptor ; import org.aopalliance.intercept.MethodInvocation ; public class GuiceAopLoggerMethodInterceptor implements MethodInterceptor { @Override public Object invoke ( MethodInvocation methodInvocation ) throws Throwable { String methodName = methodInvocation . getMethod (). getName (); long startTime = System . nanoTime (); System . out . println ( String . format ( \"Before Method[%s] start in %s\" , methodName , startTime )); Object response ; try { response = methodInvocation . proceed (); } finally { long endTime = System . nanoTime (); System . out . println ( String . format ( \"After Method[%s] stop %s, Elapsed(nanosecond): %d\" , methodName , endTime , ( endTime - startTime ))); } return response ; } } \u63a5\u4e0b\u6765\u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.TestGuiceAOP \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.Guice ; import com.google.inject.Injector ; import com.google.inject.matcher.Matchers ; import org.junit.Test ; public class TestGuiceAOP { @Test public void test () { Injector injector = Guice . createInjector ( binder -> binder . bindInterceptor ( Matchers . any (), Matchers . any (), new GuiceAopLoggerMethodInterceptor ())); GuiceAopService aopService = injector . getInstance ( GuiceAopService . class ); aopService . println ( \"AOP Demo\" ); } } \u6211\u4eec\u8fd0\u884c\u7a0b\u5e8f\u8f93\u51fa Before Method [ println ] start in 206944653651583 Guice AOP Service : AOP Demo After Method [ println ] stop 206944657624333 , Elapsed ( nanosecond ) : 3972750 \u9700\u8981\u6ce8\u610f\u7684\u662f: \u7531\u4e8e\u4f7f\u7528\u4e86AOP\u6211\u4eec\u7684\u670d\u52a1\u5f97\u5230\u7684\u4e0d\u518d\u662f\u6211\u4eec\u5199\u7684\u670d\u52a1\u5b9e\u73b0\u7c7b\u4e86\uff0c\u800c\u662f\u4e00\u4e2a\u7ee7\u627f\u7684\u5b50\u7c7b\uff0c\u8fd9\u4e2a\u5b50\u7c7b\u662f\u5728\u5185\u5b58\u4e2d\u5b8c\u6210\u7684\u3002 \u9664\u4e86\u7b2c\u4e00\u6b21\u8c03\u7528\u6bd4\u8f83\u8017\u65f6\u5916(Guice\u5185\u90e8\u505a\u4e86\u6bd4\u8f83\u591a\u7684\u5904\u7406),\u5176\u5b83\u8c03\u7528\u4e8b\u4ef6\u6beb\u79d2\u6570\u4f1a\u964d\u4f4e(\u8fd9\u4e2a\u548c\u6211\u4eec\u670d\u52a1\u672c\u8eab\u6709\u5173\u7cfb) \u7c7b\u5fc5\u987b\u662fpublic\u6216\u8005package(default) \u7c7b\u4e0d\u80fd\u662ffinal\u7c7b\u578b \u65b9\u6cd5\u5fc5\u987b\u662fpublic,package\u6216\u8005protected \u65b9\u6cd5\u4e0d\u80fd\u4f7ffinal\u7c7b\u578b \u5b9e\u4f8b\u5fc5\u987b\u901a\u8fc7Guice\u7684@Inject\u6ce8\u5165\u6216\u8005\u6709\u4e00\u4e2a\u65e0\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570","title":"\u5b9a\u4e49AOP\u6a21\u578b"},{"location":"google/guice/aop-basic.html#_3","text":"GitHub","title":"\u6e90\u7801\u5730\u5740"},{"location":"google/guice/aop-matcher.html","tags":["Google","Guice","Java","AOP"],"text":"\u672c\u6559\u7a0b\u4e3b\u8981\u8be6\u7ec6\u8bb2\u89e3Guice\u7684\u4e00\u4e9bAOP\u65b9\u5f0f,\u901a\u8fc7\u8be5\u7b80\u5355\u6559\u7a0b\u8ba9\u6211\u4eec\u53ef\u4ee5\u5feb\u901f\u4f7f\u7528Guice\u8fdb\u884cAOP\u5f00\u53d1,\u540e\u7eed\u6211\u4eec\u4f1a\u66f4\u6df1\u5165\u8bb2\u89e3\u66f4\u591aGuice\u4e2d\u7684AOP. \u57fa\u7840\u73af\u5883 \u00b6 \u6280\u672f \u7248\u672c Java 1.8+ Guice 4.2.3 \u521d\u59cb\u5316\u9879\u76ee \u00b6 \u521d\u59cb\u5316\u9879\u76ee mvn archetype:generate -DgroupId = io.edurt.lc.guice -DartifactId = guice-aop-matcher -DarchetypeArtifactId = maven-archetype-quickstart -Dversion = 1 .0.0 -DinteractiveMode = false \u4fee\u6539pom.xml\u589e\u52a0Guice\u4f9d\u8d56 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <parent> <artifactId> lc-guice </artifactId> <groupId> io.edurt.lc.guice </groupId> <version> 1.0.0 </version> </parent> <modelVersion> 4.0.0 </modelVersion> <artifactId> guice-aop-matcher </artifactId> <name> Learning Center for Guice AOP(Matcher) </name> <properties> <maven.compiler.source> 1.8 </maven.compiler.source> <maven.compiler.target> 1.8 </maven.compiler.target> </properties> <dependencies> <dependency> <groupId> com.google.inject </groupId> <artifactId> guice </artifactId> <version> 4.2.3 </version> </dependency> <dependency> <groupId> junit </groupId> <artifactId> junit </artifactId> <version> 4.12 </version> <scope> test </scope> </dependency> </dependencies> </project> \u521d\u59cb\u5316Service \u00b6 \u9996\u5148\u6211\u4eec\u5b9a\u4e49\u670d\u52a1Service\uff0c\u8fd9\u4e2a\u670d\u52a1\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u65b9\u6cd5 println . \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceAopMatcherService \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; import com.google.inject.ImplementedBy ; @ImplementedBy ( value = GuiceAopMatcherServiceImpl . class ) public interface GuiceAopMatcherService { void println ( String input ); } \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceAopMatcherServiceImpl \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; public class GuiceAopMatcherServiceImpl implements GuiceAopMatcherService { @Override public void println ( String input ) { System . out . println ( \"Matcher input : \" + input ); } } AOP\u6ce8\u5165\u4f9d\u8d56 \u00b6 Guice\u5141\u8bb8\u5728\u5173\u8054AOP\u4e4b\u524d\u5c06AOP\u7684\u4f9d\u8d56\u90fd\u6ce8\u5165\u5230\u5bb9\u5668\u4e2d! \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceAopMatcherMethodInterceptor \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; import org.aopalliance.intercept.MethodInterceptor ; import org.aopalliance.intercept.MethodInvocation ; public class GuiceAopMatcherMethodInterceptor implements MethodInterceptor { @Override public Object invoke ( MethodInvocation methodInvocation ) throws Throwable { String methodName = methodInvocation . getMethod (). getName (); long startTime = System . nanoTime (); System . out . println ( String . format ( \"Before Method[%s] start in %s\" , methodName , startTime )); Object response ; try { response = methodInvocation . proceed (); } finally { long endTime = System . nanoTime (); System . out . println ( String . format ( \"After Method[%s] stop %s, Elapsed(nanosecond): %d\" , methodName , endTime , ( endTime - startTime ))); } return response ; } } \u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.GuiceAopJavaServiceMatcher \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.matcher.Matcher ; public class GuiceAopJavaServiceMatcher implements Matcher < Class <?>> { @Override public boolean matches ( Class <?> aClass ) { // return aClass == GuiceAopMatcherService.class; return aClass == GuiceAopMatcherServiceImpl . class ; } @Override public Matcher < Class <?>> and ( Matcher <? super Class <?>> matcher ) { return null ; } @Override public Matcher < Class <?>> or ( Matcher <? super Class <?>> matcher ) { return null ; } } \u63a5\u4e0b\u6765\u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.TestGuiceAopJavaServiceMatcher \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.Guice ; import com.google.inject.Injector ; import com.google.inject.matcher.Matchers ; import org.junit.Test ; public class TestGuiceAopJavaServiceMatcher { @Test public void test () { Injector injector = Guice . createInjector ( binder -> binder . bindInterceptor ( new GuiceAopJavaServiceMatcher (), Matchers . any (), new GuiceAopMatcherMethodInterceptor ())); GuiceAopMatcherService javaServiceMatcher = injector . getInstance ( GuiceAopMatcherServiceImpl . class ); javaServiceMatcher . println ( \"Hello Guice!!!\" ); } } \u6211\u4eec\u8fd0\u884c\u7a0b\u5e8f\u8f93\u51fa Before Method [ println ] start in 174453945750833 Matcher input : Hello Guice!!! After Method [ println ] stop 174453952765375 , Elapsed ( nanosecond ) : 7014542 \u9700\u8981\u6ce8\u610f\u7684\u662f return aClass == GuiceAopMatcherService.class; \u8fd9\u91cc\u5224\u5b9a\u7684\u662f\u76f8\u5bf9\u7684\u7c7b,\u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\u662f return aClass == GuiceAopMatcherServiceImpl.class; \u5982\u679c\u8981\u4f7f\u7528\u7236\u7c7b\u81ea\u52a8\u8f6c\u6362\u7684\u8bdd\u9700\u8981\u81ea\u5df1\u89e3\u6790\u7c7b\u7684\u5b9e\u73b0\u5373\u53ef \u6e90\u7801\u5730\u5740 \u00b6 GitHub","title":"Guice AOP(Matcher)"},{"location":"google/guice/aop-matcher.html#_1","text":"\u6280\u672f \u7248\u672c Java 1.8+ Guice 4.2.3","title":"\u57fa\u7840\u73af\u5883"},{"location":"google/guice/aop-matcher.html#_2","text":"\u521d\u59cb\u5316\u9879\u76ee mvn archetype:generate -DgroupId = io.edurt.lc.guice -DartifactId = guice-aop-matcher -DarchetypeArtifactId = maven-archetype-quickstart -Dversion = 1 .0.0 -DinteractiveMode = false \u4fee\u6539pom.xml\u589e\u52a0Guice\u4f9d\u8d56 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <parent> <artifactId> lc-guice </artifactId> <groupId> io.edurt.lc.guice </groupId> <version> 1.0.0 </version> </parent> <modelVersion> 4.0.0 </modelVersion> <artifactId> guice-aop-matcher </artifactId> <name> Learning Center for Guice AOP(Matcher) </name> <properties> <maven.compiler.source> 1.8 </maven.compiler.source> <maven.compiler.target> 1.8 </maven.compiler.target> </properties> <dependencies> <dependency> <groupId> com.google.inject </groupId> <artifactId> guice </artifactId> <version> 4.2.3 </version> </dependency> <dependency> <groupId> junit </groupId> <artifactId> junit </artifactId> <version> 4.12 </version> <scope> test </scope> </dependency> </dependencies> </project>","title":"\u521d\u59cb\u5316\u9879\u76ee"},{"location":"google/guice/aop-matcher.html#service","text":"\u9996\u5148\u6211\u4eec\u5b9a\u4e49\u670d\u52a1Service\uff0c\u8fd9\u4e2a\u670d\u52a1\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u65b9\u6cd5 println . \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceAopMatcherService \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; import com.google.inject.ImplementedBy ; @ImplementedBy ( value = GuiceAopMatcherServiceImpl . class ) public interface GuiceAopMatcherService { void println ( String input ); } \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceAopMatcherServiceImpl \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; public class GuiceAopMatcherServiceImpl implements GuiceAopMatcherService { @Override public void println ( String input ) { System . out . println ( \"Matcher input : \" + input ); } }","title":"\u521d\u59cb\u5316Service"},{"location":"google/guice/aop-matcher.html#aop","text":"Guice\u5141\u8bb8\u5728\u5173\u8054AOP\u4e4b\u524d\u5c06AOP\u7684\u4f9d\u8d56\u90fd\u6ce8\u5165\u5230\u5bb9\u5668\u4e2d! \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceAopMatcherMethodInterceptor \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; import org.aopalliance.intercept.MethodInterceptor ; import org.aopalliance.intercept.MethodInvocation ; public class GuiceAopMatcherMethodInterceptor implements MethodInterceptor { @Override public Object invoke ( MethodInvocation methodInvocation ) throws Throwable { String methodName = methodInvocation . getMethod (). getName (); long startTime = System . nanoTime (); System . out . println ( String . format ( \"Before Method[%s] start in %s\" , methodName , startTime )); Object response ; try { response = methodInvocation . proceed (); } finally { long endTime = System . nanoTime (); System . out . println ( String . format ( \"After Method[%s] stop %s, Elapsed(nanosecond): %d\" , methodName , endTime , ( endTime - startTime ))); } return response ; } } \u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.GuiceAopJavaServiceMatcher \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.matcher.Matcher ; public class GuiceAopJavaServiceMatcher implements Matcher < Class <?>> { @Override public boolean matches ( Class <?> aClass ) { // return aClass == GuiceAopMatcherService.class; return aClass == GuiceAopMatcherServiceImpl . class ; } @Override public Matcher < Class <?>> and ( Matcher <? super Class <?>> matcher ) { return null ; } @Override public Matcher < Class <?>> or ( Matcher <? super Class <?>> matcher ) { return null ; } } \u63a5\u4e0b\u6765\u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.TestGuiceAopJavaServiceMatcher \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.Guice ; import com.google.inject.Injector ; import com.google.inject.matcher.Matchers ; import org.junit.Test ; public class TestGuiceAopJavaServiceMatcher { @Test public void test () { Injector injector = Guice . createInjector ( binder -> binder . bindInterceptor ( new GuiceAopJavaServiceMatcher (), Matchers . any (), new GuiceAopMatcherMethodInterceptor ())); GuiceAopMatcherService javaServiceMatcher = injector . getInstance ( GuiceAopMatcherServiceImpl . class ); javaServiceMatcher . println ( \"Hello Guice!!!\" ); } } \u6211\u4eec\u8fd0\u884c\u7a0b\u5e8f\u8f93\u51fa Before Method [ println ] start in 174453945750833 Matcher input : Hello Guice!!! After Method [ println ] stop 174453952765375 , Elapsed ( nanosecond ) : 7014542 \u9700\u8981\u6ce8\u610f\u7684\u662f return aClass == GuiceAopMatcherService.class; \u8fd9\u91cc\u5224\u5b9a\u7684\u662f\u76f8\u5bf9\u7684\u7c7b,\u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\u662f return aClass == GuiceAopMatcherServiceImpl.class; \u5982\u679c\u8981\u4f7f\u7528\u7236\u7c7b\u81ea\u52a8\u8f6c\u6362\u7684\u8bdd\u9700\u8981\u81ea\u5df1\u89e3\u6790\u7c7b\u7684\u5b9e\u73b0\u5373\u53ef","title":"AOP\u6ce8\u5165\u4f9d\u8d56"},{"location":"google/guice/aop-matcher.html#_3","text":"GitHub","title":"\u6e90\u7801\u5730\u5740"},{"location":"google/guice/aop-senior.html","tags":["Google","Guice","Java","AOP"],"text":"\u672c\u6559\u7a0b\u4e3b\u8981\u8be6\u7ec6\u8bb2\u89e3Guice\u7684\u4e00\u4e9bAOP\u65b9\u5f0f,\u901a\u8fc7\u8be5\u7b80\u5355\u6559\u7a0b\u8ba9\u6211\u4eec\u53ef\u4ee5\u5feb\u901f\u4f7f\u7528Guice\u8fdb\u884cAOP\u5f00\u53d1,\u540e\u7eed\u6211\u4eec\u4f1a\u66f4\u6df1\u5165\u8bb2\u89e3\u66f4\u591aGuice\u4e2d\u7684AOP. \u57fa\u7840\u73af\u5883 \u00b6 \u6280\u672f \u7248\u672c Java 1.8+ Guice 4.2.3 \u521d\u59cb\u5316\u9879\u76ee \u00b6 \u521d\u59cb\u5316\u9879\u76ee mvn archetype:generate -DgroupId = io.edurt.lc.guice -DartifactId = guice-aop-senior -DarchetypeArtifactId = maven-archetype-quickstart -Dversion = 1 .0.0 -DinteractiveMode = false \u4fee\u6539pom.xml\u589e\u52a0Guice\u4f9d\u8d56 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <parent> <artifactId> lc-guice </artifactId> <groupId> io.edurt.lc.guice </groupId> <version> 1.0.0 </version> </parent> <modelVersion> 4.0.0 </modelVersion> <artifactId> guice-aop-senior </artifactId> <name> Learning Center for Guice AOP(Senior) </name> <properties> <maven.compiler.source> 1.8 </maven.compiler.source> <maven.compiler.target> 1.8 </maven.compiler.target> </properties> <dependencies> <dependency> <groupId> com.google.inject </groupId> <artifactId> guice </artifactId> <version> 4.2.3 </version> </dependency> <dependency> <groupId> junit </groupId> <artifactId> junit </artifactId> <version> 4.12 </version> <scope> test </scope> </dependency> </dependencies> </project> \u521d\u59cb\u5316Service \u00b6 \u9996\u5148\u6211\u4eec\u5b9a\u4e49\u670d\u52a1Service\uff0c\u8fd9\u4e2a\u670d\u52a1\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u65b9\u6cd5 println . \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceAopSeniorService \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; import com.google.inject.ImplementedBy ; import org.aopalliance.intercept.MethodInvocation ; @ImplementedBy ( value = GuiceAopSeniorServiceImpl . class ) public interface GuiceAopSeniorService { void before ( MethodInvocation invocation ); } \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceAopSeniorServiceImpl \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; import org.aopalliance.intercept.MethodInvocation ; public class GuiceAopSeniorServiceImpl implements GuiceAopSeniorService { @Override public void before ( MethodInvocation invocation ) { System . out . println ( String . format ( \"Before method [%s]\" , invocation . getMethod (). getName ())); } } AOP\u6ce8\u5165\u4f9d\u8d56 \u00b6 Guice\u5141\u8bb8\u5728\u5173\u8054AOP\u4e4b\u524d\u5c06AOP\u7684\u4f9d\u8d56\u90fd\u6ce8\u5165\u5230\u5bb9\u5668\u4e2d! \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceAopInjectionMethodInterceptor \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; import com.google.inject.Inject ; import org.aopalliance.intercept.MethodInterceptor ; import org.aopalliance.intercept.MethodInvocation ; public class GuiceAopInjectionMethodInterceptor implements MethodInterceptor { @Inject private GuiceAopSeniorService service ; @Override public Object invoke ( MethodInvocation invocation ) throws Throwable { service . before ( invocation ); Object response ; try { response = invocation . proceed (); } finally { System . out . println ( String . format ( \"After [%s]\" , invocation . getMethod (). getName ())); } return response ; } } \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.PrintlnService \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; import com.google.inject.ImplementedBy ; @ImplementedBy ( value = PrintlnServiceImpl . class ) public interface PrintlnService { void println ( String input ); } \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.PrintlnServiceImpl \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; import com.google.inject.name.Named ; public class PrintlnServiceImpl implements PrintlnService { @Override @Named ( value = \"println\" ) public void println ( String input ) { System . out . println ( input ); } } Note PrintlnService \u548c PrintlnServiceImpl \u7528\u4e8e\u6d4b\u8bd5\u65b0\u7684\u670d\u52a1\u4ea7\u51fa. \u63a5\u4e0b\u6765\u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.TestGuiceAopSenior \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.Guice ; import com.google.inject.Inject ; import com.google.inject.Injector ; import com.google.inject.matcher.Matchers ; import com.google.inject.name.Names ; import org.junit.Test ; public class TestGuiceAopSenior { @Inject private PrintlnService printlnService ; @Test public void test () { Injector injector = Guice . createInjector ( binder -> { GuiceAopInjectionMethodInterceptor injectionMethodInterceptor = new GuiceAopInjectionMethodInterceptor (); binder . requestInjection ( injectionMethodInterceptor ); binder . bindInterceptor ( Matchers . any (), Matchers . annotatedWith ( Names . named ( \"println\" )), injectionMethodInterceptor ); }); TestGuiceAopSenior application = injector . getInstance ( TestGuiceAopSenior . class ); application . printlnService . println ( \"Hello Guice AOP\" ); } } \u6211\u4eec\u8fd0\u884c\u7a0b\u5e8f\u8f93\u51fa Before method [ println ] Hello Guice AOP After [ println ] \u9700\u8981\u6ce8\u610f\u7684\u662f binder.requestInjection(injectionMethodInterceptor); \u8be5\u6bb5\u4ee3\u7801\u7528\u4e8e\u6ce8\u5165\u81ea\u5b9a\u4e49\u7684AOP\u670d\u52a1 binder.bindInterceptor(Matchers.any(), Matchers.annotatedWith(Names.named(\"println\")), injectionMethodInterceptor); \u8fd9\u91cc\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e0d\u80fd\u4f7f\u7528 Matchers.any() \u5426\u5219\u4f1a\u51fa\u73b0\u6b7b\u5faa\u73af,\u56e0\u4e3a\u5bb9\u5668\u4f1a\u4e0d\u65ad\u7684\u8fdb\u884caop\u64cd\u4f5c \u6e90\u7801\u5730\u5740 \u00b6 GitHub","title":"Guice AOP(\u8fdb\u9636\u7248)"},{"location":"google/guice/aop-senior.html#_1","text":"\u6280\u672f \u7248\u672c Java 1.8+ Guice 4.2.3","title":"\u57fa\u7840\u73af\u5883"},{"location":"google/guice/aop-senior.html#_2","text":"\u521d\u59cb\u5316\u9879\u76ee mvn archetype:generate -DgroupId = io.edurt.lc.guice -DartifactId = guice-aop-senior -DarchetypeArtifactId = maven-archetype-quickstart -Dversion = 1 .0.0 -DinteractiveMode = false \u4fee\u6539pom.xml\u589e\u52a0Guice\u4f9d\u8d56 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <parent> <artifactId> lc-guice </artifactId> <groupId> io.edurt.lc.guice </groupId> <version> 1.0.0 </version> </parent> <modelVersion> 4.0.0 </modelVersion> <artifactId> guice-aop-senior </artifactId> <name> Learning Center for Guice AOP(Senior) </name> <properties> <maven.compiler.source> 1.8 </maven.compiler.source> <maven.compiler.target> 1.8 </maven.compiler.target> </properties> <dependencies> <dependency> <groupId> com.google.inject </groupId> <artifactId> guice </artifactId> <version> 4.2.3 </version> </dependency> <dependency> <groupId> junit </groupId> <artifactId> junit </artifactId> <version> 4.12 </version> <scope> test </scope> </dependency> </dependencies> </project>","title":"\u521d\u59cb\u5316\u9879\u76ee"},{"location":"google/guice/aop-senior.html#service","text":"\u9996\u5148\u6211\u4eec\u5b9a\u4e49\u670d\u52a1Service\uff0c\u8fd9\u4e2a\u670d\u52a1\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u65b9\u6cd5 println . \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceAopSeniorService \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; import com.google.inject.ImplementedBy ; import org.aopalliance.intercept.MethodInvocation ; @ImplementedBy ( value = GuiceAopSeniorServiceImpl . class ) public interface GuiceAopSeniorService { void before ( MethodInvocation invocation ); } \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceAopSeniorServiceImpl \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; import org.aopalliance.intercept.MethodInvocation ; public class GuiceAopSeniorServiceImpl implements GuiceAopSeniorService { @Override public void before ( MethodInvocation invocation ) { System . out . println ( String . format ( \"Before method [%s]\" , invocation . getMethod (). getName ())); } }","title":"\u521d\u59cb\u5316Service"},{"location":"google/guice/aop-senior.html#aop","text":"Guice\u5141\u8bb8\u5728\u5173\u8054AOP\u4e4b\u524d\u5c06AOP\u7684\u4f9d\u8d56\u90fd\u6ce8\u5165\u5230\u5bb9\u5668\u4e2d! \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceAopInjectionMethodInterceptor \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; import com.google.inject.Inject ; import org.aopalliance.intercept.MethodInterceptor ; import org.aopalliance.intercept.MethodInvocation ; public class GuiceAopInjectionMethodInterceptor implements MethodInterceptor { @Inject private GuiceAopSeniorService service ; @Override public Object invoke ( MethodInvocation invocation ) throws Throwable { service . before ( invocation ); Object response ; try { response = invocation . proceed (); } finally { System . out . println ( String . format ( \"After [%s]\" , invocation . getMethod (). getName ())); } return response ; } } \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.PrintlnService \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; import com.google.inject.ImplementedBy ; @ImplementedBy ( value = PrintlnServiceImpl . class ) public interface PrintlnService { void println ( String input ); } \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.PrintlnServiceImpl \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; import com.google.inject.name.Named ; public class PrintlnServiceImpl implements PrintlnService { @Override @Named ( value = \"println\" ) public void println ( String input ) { System . out . println ( input ); } } Note PrintlnService \u548c PrintlnServiceImpl \u7528\u4e8e\u6d4b\u8bd5\u65b0\u7684\u670d\u52a1\u4ea7\u51fa. \u63a5\u4e0b\u6765\u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.TestGuiceAopSenior \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.Guice ; import com.google.inject.Inject ; import com.google.inject.Injector ; import com.google.inject.matcher.Matchers ; import com.google.inject.name.Names ; import org.junit.Test ; public class TestGuiceAopSenior { @Inject private PrintlnService printlnService ; @Test public void test () { Injector injector = Guice . createInjector ( binder -> { GuiceAopInjectionMethodInterceptor injectionMethodInterceptor = new GuiceAopInjectionMethodInterceptor (); binder . requestInjection ( injectionMethodInterceptor ); binder . bindInterceptor ( Matchers . any (), Matchers . annotatedWith ( Names . named ( \"println\" )), injectionMethodInterceptor ); }); TestGuiceAopSenior application = injector . getInstance ( TestGuiceAopSenior . class ); application . printlnService . println ( \"Hello Guice AOP\" ); } } \u6211\u4eec\u8fd0\u884c\u7a0b\u5e8f\u8f93\u51fa Before method [ println ] Hello Guice AOP After [ println ] \u9700\u8981\u6ce8\u610f\u7684\u662f binder.requestInjection(injectionMethodInterceptor); \u8be5\u6bb5\u4ee3\u7801\u7528\u4e8e\u6ce8\u5165\u81ea\u5b9a\u4e49\u7684AOP\u670d\u52a1 binder.bindInterceptor(Matchers.any(), Matchers.annotatedWith(Names.named(\"println\")), injectionMethodInterceptor); \u8fd9\u91cc\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e0d\u80fd\u4f7f\u7528 Matchers.any() \u5426\u5219\u4f1a\u51fa\u73b0\u6b7b\u5faa\u73af,\u56e0\u4e3a\u5bb9\u5668\u4f1a\u4e0d\u65ad\u7684\u8fdb\u884caop\u64cd\u4f5c","title":"AOP\u6ce8\u5165\u4f9d\u8d56"},{"location":"google/guice/aop-senior.html#_3","text":"GitHub","title":"\u6e90\u7801\u5730\u5740"},{"location":"google/guice/binder-basic.html","tags":["Google","Guice","Java","\u4f9d\u8d56\u6ce8\u5165"],"text":"\u672c\u6559\u7a0b\u4e3b\u8981\u8be6\u7ec6\u8bb2\u89e3Guice\u7684\u4e00\u4e9b\u57fa\u672c\u6ce8\u5165\u65b9\u5f0f,\u901a\u8fc7\u8be5\u7b80\u5355\u6559\u7a0b\u8ba9\u6211\u4eec\u53ef\u4ee5\u5feb\u901f\u4f7f\u7528Guice\u8fdb\u884c\u7b80\u5355\u7cfb\u7edf\u5316\u5f00\u53d1,\u540e\u7eed\u6211\u4eec\u4f1a\u66f4\u6df1\u5165\u8bb2\u89e3\u66f4\u591a\u6a21\u5757,\u5982\u679c\u8fd8\u4e0d\u4e86\u89e3Guice\u5927\u5bb6\u53ef\u4ee5\u5148\u53bb\u7f51\u4e0a\u81ea\u884c\u4e86\u89e3\u4e00\u4e0b. \u57fa\u7840\u73af\u5883 \u00b6 \u6280\u672f \u7248\u672c Java 1.8+ Guice 4.2.3 \u521d\u59cb\u5316\u9879\u76ee \u00b6 \u521d\u59cb\u5316\u9879\u76ee mvn archetype:generate -DgroupId = io.edurt.lc.guice -DartifactId = guice-binder-basic -DarchetypeArtifactId = maven-archetype-quickstart -Dversion = 1 .0.0 -DinteractiveMode = false \u4fee\u6539pom.xml\u589e\u52a0Guice\u4f9d\u8d56 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <parent> <artifactId> lc-guice </artifactId> <groupId> io.edurt.lc.guice </groupId> <version> 1.0.0 </version> </parent> <modelVersion> 4.0.0 </modelVersion> <artifactId> guice-binder-basic </artifactId> <name> Learning Center for Guice Binder(Basic) </name> <properties> <maven.compiler.source> 1.8 </maven.compiler.source> <maven.compiler.target> 1.8 </maven.compiler.target> </properties> <dependencies> <dependency> <groupId> com.google.inject </groupId> <artifactId> guice </artifactId> <version> 4.2.3 </version> </dependency> </dependencies> </project> guice : guice\u5c31\u662f\u6211\u4eec\u6838\u5fc3\u8981\u4f7f\u7528\u7684\u4f9d\u8d56 Guice\u7684\u7ed1\u5b9a\u6a21\u578b \u00b6 \u4fee\u6539 pom.xml \u914d\u7f6e\u6587\u4ef6,\u5728 dependencies \u8282\u70b9\u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9 <dependency> <groupId> junit </groupId> <artifactId> junit </artifactId> <version> 4.12 </version> <scope> test </scope> </dependency> \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice \u76ee\u5f55\u5e76\u5728\u8be5\u76ee\u5f55\u4e0b\u65b0\u5efa GuiceBasicModule \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; import com.google.inject.AbstractModule ; public class GuiceBasicModule extends AbstractModule { @Override protected void configure () { System . out . println ( \"Hello, GuiceBasicModule\" ); } } Guice\u4e2d\u7684\u7ed1\u5b9a\u6a21\u578b\u548cSpring\u4e2d\u7684\u4e00\u6837\u7b80\u5355,\u6211\u4eec\u901a\u8fc7\u7ed1\u5b9a\u53ef\u4ee5\u63d0\u4f9b\u7ed9\u7a0b\u5e8f\u4efb\u610f\u6ce8\u5165\u7c7b. \u7ed1\u5b9a\u6211\u4eec\u9700\u8981\u7684Module\u53ea\u9700\u8981\u7ee7\u627fGuice\u4e2d\u7684 com.google.inject.AbstractModule \u5373\u53ef,\u5728 configure \u65b9\u6cd5\u4e2d\u5b9e\u73b0\u6211\u4eec\u9700\u8981\u7684\u7ed1\u5b9a\u4fe1\u606f. \u5728 src/test/java \u6e90\u4ee3\u7801\u76ee\u5f55\u4e0b\u6784\u5efa io.edurt.lc.guice.TestGuiceBasicModule \u5355\u5143\u6d4b\u8bd5\u7c7b\u6587\u4ef6\u7528\u4e8e\u6211\u4eec\u6d4b\u8bd5\u4ee3\u7801,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; import com.google.inject.AbstractModule ; public class GuiceBasicModule extends AbstractModule { @Override protected void configure () { System . out . println ( \"Hello, GuiceBasicModule\" ); } } \u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\u540e,\u63a7\u5236\u53f0\u4f1a\u8f93\u51fa\u4ee5\u4e0b\u4fe1\u606f: Hello, GuiceBasicModule \u6216\u8005\u4f7f\u7528maven\u547d\u4ee4 mvn clean package ,\u5b83\u5c06\u8f93\u51fa\u7c7b\u4f3c\u4ee5\u4e0b\u5185\u5bb9 ...... ------------------------------------------------------- T E S T S ------------------------------------------------------- Running io.edurt.lc.guice.TestGuiceBasicModule Hello, GuiceBasicModule Tests run: 1 , Failures: 0 , Errors: 0 , Skipped: 0 , Time elapsed: 0 .094 sec Results : Tests run: 1 , Failures: 0 , Errors: 0 , Skipped: 0 ...... \u81ea\u5b9a\u4e49Class \u00b6 \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceBasicService \u7c7b\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b package io.edurt.lc.guice ; public interface GuiceBasicService { void print ( String input ); } \u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u63a5\u53e3\u6587\u4ef6,\u5b83\u6784\u5efa\u4e86\u4e00\u4e2a print \u65b9\u6cd5\u7528\u4e8e\u4fe1\u606f\u8f93\u51fa. \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceBasicServiceImpl \u7c7b\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b package io.edurt.lc.guice ; public class GuiceBasicServiceImpl implements GuiceBasicService { @Override public void print ( String input ) { System . out . println ( String . format ( \"print %s\" , input )); } } \u5b83\u5b9e\u73b0\u4e86 io.edurt.lc.guice.GuiceBasicService \u7c7b\u4e2d\u7684\u6253\u5370\u6570\u636e\u529f\u80fd \u4fee\u6539 src/main/java \u76ee\u5f55\u4e0b io.edurt.lc.guice.GuiceBasicModule \u6587\u4ef6\u5728 configure() \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 bind ( GuiceBasicService . class ). to ( GuiceBasicServiceImpl . class ); \u8fd9\u6837\u6211\u4eec\u5c31\u5f88\u5feb\u7684\u7ed1\u5b9a\u4e86\u4e00\u4e2a\u670d\u52a1,\u7c7b\u4f3c\u4e8eSpring\u4e2d\u7684 @Bean \u65b9\u5f0f bind \u6807\u5fd7\u6211\u4eec\u9700\u8981\u7ed1\u5b9a\u7684\u7c7b, to \u6807\u5fd7\u6211\u4eec\u7ed1\u5b9a\u7684\u5b9e\u73b0\u7c7b \u63a5\u4e0b\u6765\u4fee\u6539 src/test/java \u76ee\u5f55\u4e0b\u7684 io.edurt.lc.guice.TestGuiceBasicModule \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 @Test public void test_service () { Injector injector = Guice . createInjector ( new GuiceBasicModule ()); GuiceBasicService service = injector . getInstance ( GuiceBasicService . class ); service . print ( \"Hello Guice\" ); } \u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\u540e,\u63a7\u5236\u53f0\u4f1a\u8f93\u51fa\u4ee5\u4e0b\u4fe1\u606f: Hello, GuiceBasicModule print Hello Guice \u4f7f\u7528 @ImplementedBy \u6ce8\u89e3 \u00b6 \u4f7f\u7528 @ImplementedBy \u5f88\u7b80\u5355,\u6211\u4eec\u53ea\u9700\u8981\u5728 interface \u7684\u63a5\u53e3\u7c7b\u4e0a\u6dfb\u52a0 @ImplementedBy(GuiceBasicServiceImpl.class) \u6ce8\u89e3\u5373\u53ef,\u4fee\u6539\u540e\u7684\u4ee3\u7801\u5982\u4e0b @ImplementedBy \u544a\u77e5\u7a0b\u5e8f\u6211\u4eec\u7684\u63a5\u53e3\u5177\u4f53\u5b9e\u73b0\u7c7b,Guice\u4f1a\u5e2e\u6211\u4eec\u505a\u81ea\u52a8\u5b9e\u4f8b\u5316 GuiceBasicService package io.edurt.lc.guice ; @ImplementedBy ( GuiceBasicServiceImpl . class ) public interface GuiceBasicService { void print ( String input ); } GuiceBasicServiceImpl \u7c7b\u4e2d\u7684\u5185\u5bb9\u4e0d\u53d8 \u5220\u9664 src/test/java \u76ee\u5f55\u4e0b\u7684 io.edurt.lc.guice.TestGuiceBasicModule \u7c7b\u6587\u4ef6\u4e2d\u7684 GuiceBasicService service = injector.getInstance(GuiceBasicService.class); \u4ee3\u7801\u6bb5\u5373\u53ef. \u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\u540e,\u63a7\u5236\u53f0\u4f1a\u8f93\u51fa\u4ee5\u4e0b\u4fe1\u606f: Hello, GuiceBasicModule print Hello Guice \u6e90\u7801\u5730\u5740 \u00b6 GitHub","title":"Guice\u4f9d\u8d56\u6ce8\u5165(\u57fa\u7840\u7248)"},{"location":"google/guice/binder-basic.html#_1","text":"\u6280\u672f \u7248\u672c Java 1.8+ Guice 4.2.3","title":"\u57fa\u7840\u73af\u5883"},{"location":"google/guice/binder-basic.html#_2","text":"\u521d\u59cb\u5316\u9879\u76ee mvn archetype:generate -DgroupId = io.edurt.lc.guice -DartifactId = guice-binder-basic -DarchetypeArtifactId = maven-archetype-quickstart -Dversion = 1 .0.0 -DinteractiveMode = false \u4fee\u6539pom.xml\u589e\u52a0Guice\u4f9d\u8d56 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <parent> <artifactId> lc-guice </artifactId> <groupId> io.edurt.lc.guice </groupId> <version> 1.0.0 </version> </parent> <modelVersion> 4.0.0 </modelVersion> <artifactId> guice-binder-basic </artifactId> <name> Learning Center for Guice Binder(Basic) </name> <properties> <maven.compiler.source> 1.8 </maven.compiler.source> <maven.compiler.target> 1.8 </maven.compiler.target> </properties> <dependencies> <dependency> <groupId> com.google.inject </groupId> <artifactId> guice </artifactId> <version> 4.2.3 </version> </dependency> </dependencies> </project> guice : guice\u5c31\u662f\u6211\u4eec\u6838\u5fc3\u8981\u4f7f\u7528\u7684\u4f9d\u8d56","title":"\u521d\u59cb\u5316\u9879\u76ee"},{"location":"google/guice/binder-basic.html#guice","text":"\u4fee\u6539 pom.xml \u914d\u7f6e\u6587\u4ef6,\u5728 dependencies \u8282\u70b9\u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9 <dependency> <groupId> junit </groupId> <artifactId> junit </artifactId> <version> 4.12 </version> <scope> test </scope> </dependency> \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice \u76ee\u5f55\u5e76\u5728\u8be5\u76ee\u5f55\u4e0b\u65b0\u5efa GuiceBasicModule \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; import com.google.inject.AbstractModule ; public class GuiceBasicModule extends AbstractModule { @Override protected void configure () { System . out . println ( \"Hello, GuiceBasicModule\" ); } } Guice\u4e2d\u7684\u7ed1\u5b9a\u6a21\u578b\u548cSpring\u4e2d\u7684\u4e00\u6837\u7b80\u5355,\u6211\u4eec\u901a\u8fc7\u7ed1\u5b9a\u53ef\u4ee5\u63d0\u4f9b\u7ed9\u7a0b\u5e8f\u4efb\u610f\u6ce8\u5165\u7c7b. \u7ed1\u5b9a\u6211\u4eec\u9700\u8981\u7684Module\u53ea\u9700\u8981\u7ee7\u627fGuice\u4e2d\u7684 com.google.inject.AbstractModule \u5373\u53ef,\u5728 configure \u65b9\u6cd5\u4e2d\u5b9e\u73b0\u6211\u4eec\u9700\u8981\u7684\u7ed1\u5b9a\u4fe1\u606f. \u5728 src/test/java \u6e90\u4ee3\u7801\u76ee\u5f55\u4e0b\u6784\u5efa io.edurt.lc.guice.TestGuiceBasicModule \u5355\u5143\u6d4b\u8bd5\u7c7b\u6587\u4ef6\u7528\u4e8e\u6211\u4eec\u6d4b\u8bd5\u4ee3\u7801,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; import com.google.inject.AbstractModule ; public class GuiceBasicModule extends AbstractModule { @Override protected void configure () { System . out . println ( \"Hello, GuiceBasicModule\" ); } } \u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\u540e,\u63a7\u5236\u53f0\u4f1a\u8f93\u51fa\u4ee5\u4e0b\u4fe1\u606f: Hello, GuiceBasicModule \u6216\u8005\u4f7f\u7528maven\u547d\u4ee4 mvn clean package ,\u5b83\u5c06\u8f93\u51fa\u7c7b\u4f3c\u4ee5\u4e0b\u5185\u5bb9 ...... ------------------------------------------------------- T E S T S ------------------------------------------------------- Running io.edurt.lc.guice.TestGuiceBasicModule Hello, GuiceBasicModule Tests run: 1 , Failures: 0 , Errors: 0 , Skipped: 0 , Time elapsed: 0 .094 sec Results : Tests run: 1 , Failures: 0 , Errors: 0 , Skipped: 0 ......","title":"Guice\u7684\u7ed1\u5b9a\u6a21\u578b"},{"location":"google/guice/binder-basic.html#class","text":"\u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceBasicService \u7c7b\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b package io.edurt.lc.guice ; public interface GuiceBasicService { void print ( String input ); } \u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u63a5\u53e3\u6587\u4ef6,\u5b83\u6784\u5efa\u4e86\u4e00\u4e2a print \u65b9\u6cd5\u7528\u4e8e\u4fe1\u606f\u8f93\u51fa. \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceBasicServiceImpl \u7c7b\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b package io.edurt.lc.guice ; public class GuiceBasicServiceImpl implements GuiceBasicService { @Override public void print ( String input ) { System . out . println ( String . format ( \"print %s\" , input )); } } \u5b83\u5b9e\u73b0\u4e86 io.edurt.lc.guice.GuiceBasicService \u7c7b\u4e2d\u7684\u6253\u5370\u6570\u636e\u529f\u80fd \u4fee\u6539 src/main/java \u76ee\u5f55\u4e0b io.edurt.lc.guice.GuiceBasicModule \u6587\u4ef6\u5728 configure() \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 bind ( GuiceBasicService . class ). to ( GuiceBasicServiceImpl . class ); \u8fd9\u6837\u6211\u4eec\u5c31\u5f88\u5feb\u7684\u7ed1\u5b9a\u4e86\u4e00\u4e2a\u670d\u52a1,\u7c7b\u4f3c\u4e8eSpring\u4e2d\u7684 @Bean \u65b9\u5f0f bind \u6807\u5fd7\u6211\u4eec\u9700\u8981\u7ed1\u5b9a\u7684\u7c7b, to \u6807\u5fd7\u6211\u4eec\u7ed1\u5b9a\u7684\u5b9e\u73b0\u7c7b \u63a5\u4e0b\u6765\u4fee\u6539 src/test/java \u76ee\u5f55\u4e0b\u7684 io.edurt.lc.guice.TestGuiceBasicModule \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 @Test public void test_service () { Injector injector = Guice . createInjector ( new GuiceBasicModule ()); GuiceBasicService service = injector . getInstance ( GuiceBasicService . class ); service . print ( \"Hello Guice\" ); } \u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\u540e,\u63a7\u5236\u53f0\u4f1a\u8f93\u51fa\u4ee5\u4e0b\u4fe1\u606f: Hello, GuiceBasicModule print Hello Guice","title":"\u81ea\u5b9a\u4e49Class"},{"location":"google/guice/binder-basic.html#implementedby","text":"\u4f7f\u7528 @ImplementedBy \u5f88\u7b80\u5355,\u6211\u4eec\u53ea\u9700\u8981\u5728 interface \u7684\u63a5\u53e3\u7c7b\u4e0a\u6dfb\u52a0 @ImplementedBy(GuiceBasicServiceImpl.class) \u6ce8\u89e3\u5373\u53ef,\u4fee\u6539\u540e\u7684\u4ee3\u7801\u5982\u4e0b @ImplementedBy \u544a\u77e5\u7a0b\u5e8f\u6211\u4eec\u7684\u63a5\u53e3\u5177\u4f53\u5b9e\u73b0\u7c7b,Guice\u4f1a\u5e2e\u6211\u4eec\u505a\u81ea\u52a8\u5b9e\u4f8b\u5316 GuiceBasicService package io.edurt.lc.guice ; @ImplementedBy ( GuiceBasicServiceImpl . class ) public interface GuiceBasicService { void print ( String input ); } GuiceBasicServiceImpl \u7c7b\u4e2d\u7684\u5185\u5bb9\u4e0d\u53d8 \u5220\u9664 src/test/java \u76ee\u5f55\u4e0b\u7684 io.edurt.lc.guice.TestGuiceBasicModule \u7c7b\u6587\u4ef6\u4e2d\u7684 GuiceBasicService service = injector.getInstance(GuiceBasicService.class); \u4ee3\u7801\u6bb5\u5373\u53ef. \u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\u540e,\u63a7\u5236\u53f0\u4f1a\u8f93\u51fa\u4ee5\u4e0b\u4fe1\u606f: Hello, GuiceBasicModule print Hello Guice","title":"\u4f7f\u7528@ImplementedBy\u6ce8\u89e3"},{"location":"google/guice/binder-basic.html#_3","text":"GitHub","title":"\u6e90\u7801\u5730\u5740"},{"location":"google/guice/binder-constructor.html","tags":["Google","Guice","Java","\u4f9d\u8d56\u6ce8\u5165"],"text":"\u672c\u6559\u7a0b\u4e3b\u8981\u8be6\u7ec6\u8bb2\u89e3Guice\u7684\u6784\u9020\u51fd\u6570\u6ce8\u5165. \u6211\u4eec\u5c06\u901a\u8fc7\u8be6\u7ec6\u7684\u4ee3\u7801\u4ee5\u53ca\u6b65\u9aa4\u8fdb\u884c\u8bb2\u89e3. \u57fa\u7840\u73af\u5883 \u00b6 \u6280\u672f \u7248\u672c Java 1.8+ Guice 4.2.3 \u521d\u59cb\u5316\u9879\u76ee \u00b6 \u521d\u59cb\u5316\u9879\u76ee mvn archetype:generate -DgroupId = io.edurt.lc.guice -DartifactId = guice-binder-constructor -DarchetypeArtifactId = maven-archetype-quickstart -Dversion = 1 .0.0 -DinteractiveMode = false \u4fee\u6539pom.xml\u589e\u52a0Guice\u4f9d\u8d56 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <parent> <artifactId> lc-guice </artifactId> <groupId> io.edurt.lc.guice </groupId> <version> 1.0.0 </version> </parent> <modelVersion> 4.0.0 </modelVersion> <artifactId> guice-binder-constructor </artifactId> <name> Learning Center for Guice Binder(Constructor) </name> <properties> <maven.compiler.source> 1.8 </maven.compiler.source> <maven.compiler.target> 1.8 </maven.compiler.target> </properties> <dependencies> <dependency> <groupId> com.google.inject </groupId> <artifactId> guice </artifactId> <version> 4.2.3 </version> </dependency> <dependency> <groupId> junit </groupId> <artifactId> junit </artifactId> <version> 4.12 </version> <scope> test </scope> </dependency> </dependencies> </project> guice : guice\u5c31\u662f\u6211\u4eec\u6838\u5fc3\u8981\u4f7f\u7528\u7684\u4f9d\u8d56 \u6784\u9020\u51fd\u6570\u6ce8\u5165 \u00b6 \u5728Guice\u4e2d\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5c06\u9700\u8981\u7684\u5b9e\u4f53\u4fe1\u606f\u901a\u8fc7\u6784\u9020\u51fd\u6570\u76f4\u63a5\u6ce8\u5165\u5230\u6211\u4eec\u9700\u8981\u7684\u4efb\u610f\u5730\u65b9\uff0c\u6211\u4eec\u901a\u8fc7\u5217\u4e3e\u4e00\u4e2a\u4f8b\u5b50\u6765\u5b9e\u9645\u8bf4\u660e\u3002 \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceConstructorService \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; import com.google.inject.ImplementedBy ; @ImplementedBy ( GuiceConstructorServiceImpl . class ) public interface GuiceConstructorService { void print ( String source ); } \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceConstructorServiceImpl \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; public class GuiceConstructorServiceImpl implements GuiceConstructorService { @Override public void print ( String source ) { System . out . println ( String . format ( \"Hello Guice Binder For Constructor, %s\" , source )); } } \u63a5\u4e0b\u6765\u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.TestGuiceConstructor \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.Guice ; import com.google.inject.Inject ; public class TestGuiceConstructor { private GuiceConstructorService service ; @Inject public TestGuiceConstructor ( GuiceConstructorService service ) { this . service = service ; } public GuiceConstructorService getService () { return service ; } public static void main ( String [] args ) { TestGuiceConstructor test = Guice . createInjector (). getInstance ( TestGuiceConstructor . class ); test . getService (). print ( \"Test Case 1\" ); } } \u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\u540e,\u63a7\u5236\u53f0\u4f1a\u8f93\u51fa\u4ee5\u4e0b\u4fe1\u606f: Hello Guice Binder For Constructor, Test Case 1 \u8fd9\u4e2a\u793a\u4f8b\u5f88\u597d\u7406\u89e3\uff0c\u5b9e\u9645\u5c31\u662f\u8bf4\u6211\u4eec\u5c06 GuiceConstructorService \u63a5\u53e3\u901a\u8fc7 @Inject \u6ce8\u5165\u5230\u4e86 TestGuiceConstructor \u5e94\u7528\u4e2d\u3002\u5f53\u7136\u6211\u4eec\u901a\u8fc7 @ImplementedBy(GuiceConstructorServiceImpl.class) \u5b9e\u73b0\u4e86\u7c7b\u4f3c GuiceConstructorService service = new GuiceConstructorServiceImpl() \u7684\u64cd\u4f5c\uff0c\u4e0d\u8fc7\u6bcf\u6b21\u4f1a\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b\uff0c\u5982\u679c\u9700\u8981\u5355\u4f8b\u6a21\u5f0f\u7684\u8bdd\uff0c\u9700\u8981\u5355\u72ec\u64cd\u4f5c\u3002 \u6ce8\u610f\uff1a\u5728\u672c\u6b21\u7a0b\u5e8f\u4e2d\u6211\u4eec\u5e76\u6ca1\u6709\u901a\u8fc7Module\u5173\u8054\u5230Guice\uff0c\u65b9\u4fbf\u6211\u4eec\u5feb\u901f\u6d4b\u8bd5\u5e94\u7528\u7b49\u3002 \u6211\u4eec\u65e0\u6cd5\u901a\u8fc7\u975eGuice\u5bb9\u5668\u8fdb\u884c\u6ce8\u5165\uff0c\u4ee5\u4e0b\u5c31\u662f\u4e00\u4e2a\u9519\u8bef\u7684\u793a\u4f8b static\u4e5f\u662f\u65e0\u6cd5\u8fdb\u884c\u6ce8\u5165\u7684 package io.edurt.lc.guice ; import com.google.inject.Inject ; public class TestGuiceConstructorNo { @Inject private GuiceConstructorService service ; public GuiceConstructorService getService () { return service ; } public static void main ( String [] args ) { TestGuiceConstructorNo test = new TestGuiceConstructorNo (); test . getService (). print ( \"Test Case 1\" ); } } \u6211\u4eec\u8fd0\u884c\u4e0a\u8ff0\u4ee3\u7801\uff0c\u4f1a\u63d0\u793a\u4ee5\u4e0b\u9519\u8bef\u4fe1\u606f Exception in thread \"main\" java.lang.NullPointerException at io.edurt.lc.guice.TestGuiceConstructorNo.main ( TestGuiceConstructorNo.java:18 ) \u8fd9\u4e5f\u5c31\u8bf4\u660e\u6211\u4eec\u65e0\u6cd5\u5728\u975eGuice\u5bb9\u5668\u4e2d\u8fdb\u884c\u5b9e\u4f8b\u6ce8\u5165 \u591a\u53c2\u6570\u6ce8\u5165 \u00b6 \u4e0a\u8ff0\u5b9e\u4f8b\u6211\u4eec\u53ea\u662f\u6ce8\u5165\u4e86\u4e00\u4e2a\u53c2\u6570\uff0c\u90a3\u6211\u4eec\u5c1d\u8bd5\u4e00\u4e0b\u591a\u53c2\u6570\u6ce8\u5165\u3002 \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceConstructorTwoService \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; import com.google.inject.ImplementedBy ; @ImplementedBy ( GuiceConstructorTwoServiceImpl . class ) public interface GuiceConstructorTwoService { void print (); } \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceConstructorTwoServiceImpl \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; public class GuiceConstructorTwoServiceImpl implements GuiceConstructorTwoService { @Override public void print () { System . out . println ( String . format ( \"Hello Guice Binder For Constructor Two\" )); } } \u63a5\u4e0b\u6765\u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.TestGuiceConstructorMultiple \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.Guice ; import com.google.inject.Inject ; public class TestGuiceConstructorMultiple { private GuiceConstructorService service ; private GuiceConstructorTwoService twoService ; public GuiceConstructorService getService () { return service ; } public void setService ( GuiceConstructorService service ) { this . service = service ; } public GuiceConstructorTwoService getTwoService () { return twoService ; } public void setTwoService ( GuiceConstructorTwoService twoService ) { this . twoService = twoService ; } @Inject public TestGuiceConstructorMultiple ( GuiceConstructorService service , GuiceConstructorTwoService twoService ) { this . service = service ; this . twoService = twoService ; } public static void main ( String [] args ) { TestGuiceConstructorMultiple multiple = Guice . createInjector (). getInstance ( TestGuiceConstructorMultiple . class ); multiple . getService (). print ( \"One\" ); multiple . getTwoService (). print (); } } \u8fd0\u884c\u7a0b\u5e8f\u540e\uff0c\u8f93\u51fa\u4ee5\u4e0b\u7ed3\u679c Hello Guice Binder For Constructor, One Hello Guice Binder For Constructor Two \u6211\u4eec\u4f7f\u7528\u4e00\u4e2a @Inject \u4e5f\u80fd\u5b9e\u73b0\u591a\u4e2a\u53c2\u6570\u7684\u5b9e\u4f8b\u6ce8\u5165\uff0c\u5f53\u7136\u8fd8\u652f\u6301Set\u65b9\u5f0f\u6ce8\u5165\uff0c\u53ea\u9700\u8981\u5728\u53c2\u6570\u7684set\u65b9\u6cd5\u4e0a\u589e\u52a0 @Inject \u6ce8\u89e3\u5373\u53ef\u5b9e\u73b0\uff0c\u8fd9\u91cc\u6211\u4eec\u4e0d\u591a\u505a\u53d9\u8ff0\uff0c\u53ef\u81ea\u884c\u5b9e\u9a8c\u3002 static\u9759\u6001\u53c2\u6570\u6ce8\u5165 \u00b6 \u6211\u4eec\u8bf4\u8fc7\u65e0\u6cd5\u901a\u8fc7static\u5c5e\u6027\u76f4\u63a5\u8fdb\u884c\u6ce8\u5165\u4f7f\u7528\uff0c\u65b9\u6cd5\u603b\u662f\u5f88\u591a\u7684\uff0cGuice\u63d0\u4f9b\u4e86\u4ee5\u4e0bstatic\u6ce8\u5165\u65b9\u5f0f. \u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.TestGuiceStatic \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.Guice ; import com.google.inject.Inject ; public class TestGuiceStatic { @Inject private static GuiceConstructorService service ; public static void main ( String [] args ) { Guice . createInjector ( binder -> binder . requestStaticInjection ( TestGuiceStatic . class )); TestGuiceStatic . service . print ( \"Static\" ); } } \u8fd0\u884c\u7a0b\u5e8f\u540e\uff0c\u8f93\u51fa\u4ee5\u4e0b\u7ed3\u679c Hello Guice Binder For Constructor, Static \u5728\u4ee3\u7801\u4e2d\u6211\u4eec\u6ca1\u6709\u5411\u4ee5\u4e0a\u4e24\u4e2a\u793a\u4f8b\u76f4\u63a5\u4f7f\u7528 Guice \u83b7\u53d6\u5b9e\u4f8b\uff0c\u800c\u662f\u4f7f\u7528\u4e86 binder.requestStaticInjection \u65b9\u5f0f\u8fdb\u884c\u4e86\u6ce8\u5165\uff0c\u8fd9\u4e2a\u662f\u548cstatic\u5c5e\u6027\u606f\u606f\u76f8\u5173\u7684\uff0c\u5f53\u6211\u4eec\u6ce8\u5165static\u5c5e\u6027\u7684\u65f6\u5019\u8981\u544a\u77e5Guice\u6211\u4eec\u5177\u4f53\u4f7f\u7528static\u5c5e\u6027\u7684\u7236\u7c7b\uff0c\u8fd9\u6837Guice\u624d\u53ef\u4ee5\u5e2e\u6211\u4eec\u6ce8\u5165\u8fdb\u6765\u3002 \u7ec6\u5fc3\u7684\u8bdd\u4f1a\u60f3\u5230\u6211\u4eec\u65e2\u7136\u4f7f\u7528 binder.requestStaticInjection \u65b9\u5f0f\u6ce8\u5165static\u5c5e\u6027\uff0c\u90a3\u4e48\u975estatic\u5c5e\u6027\u662f\u4e0d\u662f\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3c\u7684\u65b9\u5f0f\u6ce8\u5165\uff1f \u7b54\u6848\u662f\u53ef\u4ee5\u7684\uff0c\u975estatic\u7684\u5c5e\u6027\u6211\u4eec\u9700\u8981\u901a\u8fc7 binder.requestInjection(Type); \u65b9\u5f0f\u6ce8\u5165\uff0c\u5b9e\u4f8b\u5982\u4e0b\uff1a \u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.TestGuiceNonStatic \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.Guice ; import com.google.inject.Inject ; public class TestGuiceNonStatic { @Inject private GuiceConstructorService service ; public static void main ( String [] args ) { TestGuiceNonStatic applicationBinder = new TestGuiceNonStatic (); Guice . createInjector ( binder -> binder . requestInjection ( applicationBinder )); applicationBinder . service . print ( \"Non Static\" ); } } \u8fd0\u884c\u7a0b\u5e8f\u540e\uff0c\u8f93\u51fa\u4ee5\u4e0b\u7ed3\u679c Hello Guice Binder For Constructor, Non Static \u5f53\u7136\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7 Guice.createInjector().injectMembers(new Object()); \u65b9\u5f0f\u6ce8\u5165\u3002 \u6ce8\u610f\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u4e3b\u7c7b\u7684\u5b9e\u4f8b\u624d\u53ef\u4ee5\u6ce8\u5165\uff0c\u4f7f\u7528TestGuiceNonStatic.class\u662f\u65e0\u6cd5\u6ce8\u5165\u7684 \u6e90\u7801\u5730\u5740 \u00b6 GitHub","title":"Guice\u4f9d\u8d56\u6ce8\u5165(\u6784\u9020\u51fd\u6570)"},{"location":"google/guice/binder-constructor.html#_1","text":"\u6280\u672f \u7248\u672c Java 1.8+ Guice 4.2.3","title":"\u57fa\u7840\u73af\u5883"},{"location":"google/guice/binder-constructor.html#_2","text":"\u521d\u59cb\u5316\u9879\u76ee mvn archetype:generate -DgroupId = io.edurt.lc.guice -DartifactId = guice-binder-constructor -DarchetypeArtifactId = maven-archetype-quickstart -Dversion = 1 .0.0 -DinteractiveMode = false \u4fee\u6539pom.xml\u589e\u52a0Guice\u4f9d\u8d56 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <parent> <artifactId> lc-guice </artifactId> <groupId> io.edurt.lc.guice </groupId> <version> 1.0.0 </version> </parent> <modelVersion> 4.0.0 </modelVersion> <artifactId> guice-binder-constructor </artifactId> <name> Learning Center for Guice Binder(Constructor) </name> <properties> <maven.compiler.source> 1.8 </maven.compiler.source> <maven.compiler.target> 1.8 </maven.compiler.target> </properties> <dependencies> <dependency> <groupId> com.google.inject </groupId> <artifactId> guice </artifactId> <version> 4.2.3 </version> </dependency> <dependency> <groupId> junit </groupId> <artifactId> junit </artifactId> <version> 4.12 </version> <scope> test </scope> </dependency> </dependencies> </project> guice : guice\u5c31\u662f\u6211\u4eec\u6838\u5fc3\u8981\u4f7f\u7528\u7684\u4f9d\u8d56","title":"\u521d\u59cb\u5316\u9879\u76ee"},{"location":"google/guice/binder-constructor.html#_3","text":"\u5728Guice\u4e2d\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5c06\u9700\u8981\u7684\u5b9e\u4f53\u4fe1\u606f\u901a\u8fc7\u6784\u9020\u51fd\u6570\u76f4\u63a5\u6ce8\u5165\u5230\u6211\u4eec\u9700\u8981\u7684\u4efb\u610f\u5730\u65b9\uff0c\u6211\u4eec\u901a\u8fc7\u5217\u4e3e\u4e00\u4e2a\u4f8b\u5b50\u6765\u5b9e\u9645\u8bf4\u660e\u3002 \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceConstructorService \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; import com.google.inject.ImplementedBy ; @ImplementedBy ( GuiceConstructorServiceImpl . class ) public interface GuiceConstructorService { void print ( String source ); } \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceConstructorServiceImpl \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; public class GuiceConstructorServiceImpl implements GuiceConstructorService { @Override public void print ( String source ) { System . out . println ( String . format ( \"Hello Guice Binder For Constructor, %s\" , source )); } } \u63a5\u4e0b\u6765\u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.TestGuiceConstructor \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.Guice ; import com.google.inject.Inject ; public class TestGuiceConstructor { private GuiceConstructorService service ; @Inject public TestGuiceConstructor ( GuiceConstructorService service ) { this . service = service ; } public GuiceConstructorService getService () { return service ; } public static void main ( String [] args ) { TestGuiceConstructor test = Guice . createInjector (). getInstance ( TestGuiceConstructor . class ); test . getService (). print ( \"Test Case 1\" ); } } \u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\u540e,\u63a7\u5236\u53f0\u4f1a\u8f93\u51fa\u4ee5\u4e0b\u4fe1\u606f: Hello Guice Binder For Constructor, Test Case 1 \u8fd9\u4e2a\u793a\u4f8b\u5f88\u597d\u7406\u89e3\uff0c\u5b9e\u9645\u5c31\u662f\u8bf4\u6211\u4eec\u5c06 GuiceConstructorService \u63a5\u53e3\u901a\u8fc7 @Inject \u6ce8\u5165\u5230\u4e86 TestGuiceConstructor \u5e94\u7528\u4e2d\u3002\u5f53\u7136\u6211\u4eec\u901a\u8fc7 @ImplementedBy(GuiceConstructorServiceImpl.class) \u5b9e\u73b0\u4e86\u7c7b\u4f3c GuiceConstructorService service = new GuiceConstructorServiceImpl() \u7684\u64cd\u4f5c\uff0c\u4e0d\u8fc7\u6bcf\u6b21\u4f1a\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b\uff0c\u5982\u679c\u9700\u8981\u5355\u4f8b\u6a21\u5f0f\u7684\u8bdd\uff0c\u9700\u8981\u5355\u72ec\u64cd\u4f5c\u3002 \u6ce8\u610f\uff1a\u5728\u672c\u6b21\u7a0b\u5e8f\u4e2d\u6211\u4eec\u5e76\u6ca1\u6709\u901a\u8fc7Module\u5173\u8054\u5230Guice\uff0c\u65b9\u4fbf\u6211\u4eec\u5feb\u901f\u6d4b\u8bd5\u5e94\u7528\u7b49\u3002 \u6211\u4eec\u65e0\u6cd5\u901a\u8fc7\u975eGuice\u5bb9\u5668\u8fdb\u884c\u6ce8\u5165\uff0c\u4ee5\u4e0b\u5c31\u662f\u4e00\u4e2a\u9519\u8bef\u7684\u793a\u4f8b static\u4e5f\u662f\u65e0\u6cd5\u8fdb\u884c\u6ce8\u5165\u7684 package io.edurt.lc.guice ; import com.google.inject.Inject ; public class TestGuiceConstructorNo { @Inject private GuiceConstructorService service ; public GuiceConstructorService getService () { return service ; } public static void main ( String [] args ) { TestGuiceConstructorNo test = new TestGuiceConstructorNo (); test . getService (). print ( \"Test Case 1\" ); } } \u6211\u4eec\u8fd0\u884c\u4e0a\u8ff0\u4ee3\u7801\uff0c\u4f1a\u63d0\u793a\u4ee5\u4e0b\u9519\u8bef\u4fe1\u606f Exception in thread \"main\" java.lang.NullPointerException at io.edurt.lc.guice.TestGuiceConstructorNo.main ( TestGuiceConstructorNo.java:18 ) \u8fd9\u4e5f\u5c31\u8bf4\u660e\u6211\u4eec\u65e0\u6cd5\u5728\u975eGuice\u5bb9\u5668\u4e2d\u8fdb\u884c\u5b9e\u4f8b\u6ce8\u5165","title":"\u6784\u9020\u51fd\u6570\u6ce8\u5165"},{"location":"google/guice/binder-constructor.html#_4","text":"\u4e0a\u8ff0\u5b9e\u4f8b\u6211\u4eec\u53ea\u662f\u6ce8\u5165\u4e86\u4e00\u4e2a\u53c2\u6570\uff0c\u90a3\u6211\u4eec\u5c1d\u8bd5\u4e00\u4e0b\u591a\u53c2\u6570\u6ce8\u5165\u3002 \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceConstructorTwoService \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; import com.google.inject.ImplementedBy ; @ImplementedBy ( GuiceConstructorTwoServiceImpl . class ) public interface GuiceConstructorTwoService { void print (); } \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceConstructorTwoServiceImpl \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; public class GuiceConstructorTwoServiceImpl implements GuiceConstructorTwoService { @Override public void print () { System . out . println ( String . format ( \"Hello Guice Binder For Constructor Two\" )); } } \u63a5\u4e0b\u6765\u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.TestGuiceConstructorMultiple \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.Guice ; import com.google.inject.Inject ; public class TestGuiceConstructorMultiple { private GuiceConstructorService service ; private GuiceConstructorTwoService twoService ; public GuiceConstructorService getService () { return service ; } public void setService ( GuiceConstructorService service ) { this . service = service ; } public GuiceConstructorTwoService getTwoService () { return twoService ; } public void setTwoService ( GuiceConstructorTwoService twoService ) { this . twoService = twoService ; } @Inject public TestGuiceConstructorMultiple ( GuiceConstructorService service , GuiceConstructorTwoService twoService ) { this . service = service ; this . twoService = twoService ; } public static void main ( String [] args ) { TestGuiceConstructorMultiple multiple = Guice . createInjector (). getInstance ( TestGuiceConstructorMultiple . class ); multiple . getService (). print ( \"One\" ); multiple . getTwoService (). print (); } } \u8fd0\u884c\u7a0b\u5e8f\u540e\uff0c\u8f93\u51fa\u4ee5\u4e0b\u7ed3\u679c Hello Guice Binder For Constructor, One Hello Guice Binder For Constructor Two \u6211\u4eec\u4f7f\u7528\u4e00\u4e2a @Inject \u4e5f\u80fd\u5b9e\u73b0\u591a\u4e2a\u53c2\u6570\u7684\u5b9e\u4f8b\u6ce8\u5165\uff0c\u5f53\u7136\u8fd8\u652f\u6301Set\u65b9\u5f0f\u6ce8\u5165\uff0c\u53ea\u9700\u8981\u5728\u53c2\u6570\u7684set\u65b9\u6cd5\u4e0a\u589e\u52a0 @Inject \u6ce8\u89e3\u5373\u53ef\u5b9e\u73b0\uff0c\u8fd9\u91cc\u6211\u4eec\u4e0d\u591a\u505a\u53d9\u8ff0\uff0c\u53ef\u81ea\u884c\u5b9e\u9a8c\u3002","title":"\u591a\u53c2\u6570\u6ce8\u5165"},{"location":"google/guice/binder-constructor.html#static","text":"\u6211\u4eec\u8bf4\u8fc7\u65e0\u6cd5\u901a\u8fc7static\u5c5e\u6027\u76f4\u63a5\u8fdb\u884c\u6ce8\u5165\u4f7f\u7528\uff0c\u65b9\u6cd5\u603b\u662f\u5f88\u591a\u7684\uff0cGuice\u63d0\u4f9b\u4e86\u4ee5\u4e0bstatic\u6ce8\u5165\u65b9\u5f0f. \u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.TestGuiceStatic \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.Guice ; import com.google.inject.Inject ; public class TestGuiceStatic { @Inject private static GuiceConstructorService service ; public static void main ( String [] args ) { Guice . createInjector ( binder -> binder . requestStaticInjection ( TestGuiceStatic . class )); TestGuiceStatic . service . print ( \"Static\" ); } } \u8fd0\u884c\u7a0b\u5e8f\u540e\uff0c\u8f93\u51fa\u4ee5\u4e0b\u7ed3\u679c Hello Guice Binder For Constructor, Static \u5728\u4ee3\u7801\u4e2d\u6211\u4eec\u6ca1\u6709\u5411\u4ee5\u4e0a\u4e24\u4e2a\u793a\u4f8b\u76f4\u63a5\u4f7f\u7528 Guice \u83b7\u53d6\u5b9e\u4f8b\uff0c\u800c\u662f\u4f7f\u7528\u4e86 binder.requestStaticInjection \u65b9\u5f0f\u8fdb\u884c\u4e86\u6ce8\u5165\uff0c\u8fd9\u4e2a\u662f\u548cstatic\u5c5e\u6027\u606f\u606f\u76f8\u5173\u7684\uff0c\u5f53\u6211\u4eec\u6ce8\u5165static\u5c5e\u6027\u7684\u65f6\u5019\u8981\u544a\u77e5Guice\u6211\u4eec\u5177\u4f53\u4f7f\u7528static\u5c5e\u6027\u7684\u7236\u7c7b\uff0c\u8fd9\u6837Guice\u624d\u53ef\u4ee5\u5e2e\u6211\u4eec\u6ce8\u5165\u8fdb\u6765\u3002 \u7ec6\u5fc3\u7684\u8bdd\u4f1a\u60f3\u5230\u6211\u4eec\u65e2\u7136\u4f7f\u7528 binder.requestStaticInjection \u65b9\u5f0f\u6ce8\u5165static\u5c5e\u6027\uff0c\u90a3\u4e48\u975estatic\u5c5e\u6027\u662f\u4e0d\u662f\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3c\u7684\u65b9\u5f0f\u6ce8\u5165\uff1f \u7b54\u6848\u662f\u53ef\u4ee5\u7684\uff0c\u975estatic\u7684\u5c5e\u6027\u6211\u4eec\u9700\u8981\u901a\u8fc7 binder.requestInjection(Type); \u65b9\u5f0f\u6ce8\u5165\uff0c\u5b9e\u4f8b\u5982\u4e0b\uff1a \u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.TestGuiceNonStatic \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.Guice ; import com.google.inject.Inject ; public class TestGuiceNonStatic { @Inject private GuiceConstructorService service ; public static void main ( String [] args ) { TestGuiceNonStatic applicationBinder = new TestGuiceNonStatic (); Guice . createInjector ( binder -> binder . requestInjection ( applicationBinder )); applicationBinder . service . print ( \"Non Static\" ); } } \u8fd0\u884c\u7a0b\u5e8f\u540e\uff0c\u8f93\u51fa\u4ee5\u4e0b\u7ed3\u679c Hello Guice Binder For Constructor, Non Static \u5f53\u7136\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7 Guice.createInjector().injectMembers(new Object()); \u65b9\u5f0f\u6ce8\u5165\u3002 \u6ce8\u610f\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u4e3b\u7c7b\u7684\u5b9e\u4f8b\u624d\u53ef\u4ee5\u6ce8\u5165\uff0c\u4f7f\u7528TestGuiceNonStatic.class\u662f\u65e0\u6cd5\u6ce8\u5165\u7684","title":"static\u9759\u6001\u53c2\u6570\u6ce8\u5165"},{"location":"google/guice/binder-constructor.html#_5","text":"GitHub","title":"\u6e90\u7801\u5730\u5740"},{"location":"google/guice/binder-multiple.html","tags":["Google","Guice","Java","\u4f9d\u8d56\u6ce8\u5165"],"text":"\u672c\u6587\u7ae0\u4e3b\u8981\u8be6\u7ec6\u8bb2\u89e3Guice\u4f9d\u8d56\u6ce8\u5165\u4e2d\u7684\u7279\u6027\u63a5\u53e3\u591a\u5b9e\u73b0\uff0c\u4e00\u822c\u4f7f\u7528\u5230guice\u7684\u6846\u67b6\u7684\u63d2\u4ef6\u673a\u5236\u90fd\u662f\u57fa\u4e8e\u8be5\u65b9\u5f0f\u5b9e\u73b0\u3002 \u57fa\u7840\u73af\u5883 \u00b6 \u6280\u672f \u7248\u672c Java 1.8+ Guice 4.2.3 \u521d\u59cb\u5316\u9879\u76ee \u00b6 \u521d\u59cb\u5316\u9879\u76ee mvn archetype:generate -DgroupId = io.edurt.lc.guice -DartifactId = guice-binder-multiple -DarchetypeArtifactId = maven-archetype-quickstart -Dversion = 1 .0.0 -DinteractiveMode = false \u4fee\u6539pom.xml\u589e\u52a0Guice\u4f9d\u8d56 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <parent> <artifactId> lc-guice </artifactId> <groupId> io.edurt.lc.guice </groupId> <version> 1.0.0 </version> </parent> <modelVersion> 4.0.0 </modelVersion> <artifactId> guice-binder-multiple </artifactId> <name> Learning Center for Guice Binder(Multiple Service) </name> <properties> <maven.compiler.source> 1.8 </maven.compiler.source> <maven.compiler.target> 1.8 </maven.compiler.target> </properties> <dependencies> <dependency> <groupId> com.google.inject </groupId> <artifactId> guice </artifactId> <version> 4.2.3 </version> </dependency> <dependency> <groupId> junit </groupId> <artifactId> junit </artifactId> <version> 4.12 </version> <scope> test </scope> </dependency> </dependencies> </project> guice : guice\u5c31\u662f\u6211\u4eec\u6838\u5fc3\u8981\u4f7f\u7528\u7684\u4f9d\u8d56 \u63a5\u53e3\u591a\u5b9e\u73b0\u6ce8\u5165 \u00b6 \u5982\u679c\u4e00\u4e2a\u63a5\u53e3\u6709\u591a\u4e2a\u5b9e\u73b0\uff0c\u5982\u679c\u5355\u5355\u901a\u8fc7 @Inject \u548c Module \u90fd\u96be\u4ee5\u76f4\u63a5\u5b9e\u73b0\uff0c\u4f46\u591a\u5b9e\u73b0\u662f\u7ecf\u5e38\u4f1a\u51fa\u73b0\u7684\uff0cGuice\u63d0\u4f9b\u4e86\u5176\u5b83\u6ce8\u5165\u65b9\u5f0f\u6765\u89e3\u51b3\u6b64\u95ee\u9898\u3002 \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceService \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; public interface GuiceService { void println ( String input ); } \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceJavaService \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; public class GuiceJavaService implements GuiceService { @Override public void println ( String input ) { System . out . println ( String . format ( \"Java %s\" , input )); } } \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuicePythonService \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; public class GuicePythonService implements GuiceService { @Override public void println ( String input ) { System . out . println ( String . format ( \"Python %s\" , input )); } } \u521b\u5efa src/main/java \u76ee\u5f55\u4e0b\u521b\u5efa io.edurt.lc.guice.annotation.Java \u548c io.edurt.lc.guice.annotation.Python \u6ce8\u89e3\u7c7b\uff0c\u7528\u4e8e\u63d0\u4f9bguice\u6846\u67b6\u6807\u8bc6 io.edurt.lc.guice.annotation.Java \u6587\u4ef6\u5185\u5bb9 package io.edurt.lc.guice.annotation ; import com.google.inject.BindingAnnotation ; import java.lang.annotation.ElementType ; import java.lang.annotation.Retention ; import java.lang.annotation.RetentionPolicy ; import java.lang.annotation.Target ; @Retention ( RetentionPolicy . RUNTIME ) @Target ({ ElementType . FIELD , ElementType . PARAMETER }) @BindingAnnotation public @interface Java { } io.edurt.lc.guice.annotation.Python \u6587\u4ef6\u5185\u5bb9 package io.edurt.lc.guice.annotation ; import com.google.inject.BindingAnnotation ; import java.lang.annotation.ElementType ; import java.lang.annotation.Retention ; import java.lang.annotation.RetentionPolicy ; import java.lang.annotation.Target ; @Retention ( RetentionPolicy . RUNTIME ) @Target ({ ElementType . FIELD , ElementType . PARAMETER }) @BindingAnnotation public @interface Python { } \u63a5\u4e0b\u6765\u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.TestGuiceMultiple \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.Guice ; import com.google.inject.Inject ; import io.edurt.lc.guice.annotation.Java ; import io.edurt.lc.guice.annotation.Python ; public class TestGuiceMultiple { @Inject @Java public GuiceService java ; @Inject @Python public GuiceService python ; public static void main ( String [] args ) { TestGuiceMultiple application = Guice . createInjector ( binder -> { binder . bind ( GuiceService . class ). annotatedWith ( Java . class ). to ( GuiceJavaService . class ); binder . bind ( GuiceService . class ). annotatedWith ( Python . class ). to ( GuicePythonService . class ); }). getInstance ( TestGuiceMultiple . class ); application . java . println ( \"Hello Java Implement\" ); application . python . println ( \"Hello Python Implement\" ); } } \u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\u540e,\u63a7\u5236\u53f0\u4f1a\u8f93\u51fa\u4ee5\u4e0b\u4fe1\u606f: Java Hello Java Implement Python Hello Python Implement \u6211\u4eec\u6ce8\u610f\u770b binder \u7684\u914d\u7f6e\u4e2d\uff0c\u6211\u4eec\u5c06\u6ce8\u89e3\u4e0e\u5b9e\u9645\u7684\u5b9e\u73b0\u7c7b\u7ed1\u5b9a\u5230\u4e86\u4e00\u8d77\uff0c\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u7ed1\u5b9a\u591a\u63a5\u53e3\u5b9e\u73b0\u7684\u529f\u80fd\u3002 \u6ce8\u610f\uff1a\u5728\u672c\u6b21\u7a0b\u5e8f\u4e2d\u6211\u4eec\u4f7f\u7528\u7684\u662flambda\u8868\u8fbe\u5f0f\u8fdb\u884c\u7684\u4ee3\u7801\u7f16\u7a0b\uff0c\u9700\u8981jdk1.8\u53ca\u4ee5\u4e0a\u7248\u672c \u9759\u6001\u4ee3\u7801\u6ce8\u5165 \u00b6 \u6211\u4eec\u5982\u679c\u9700\u8981\u8fdb\u884c\u9759\u6001\u4ee3\u7801\u6ce8\u5165\u670d\u52a1\u8be5\u600e\u4e48\u5199\u5462\uff1f\u6211\u4eec\u53c2\u7167\u4ee5\u524d\u8bb2\u89e3\u7684 Guice\u4f9d\u8d56\u6ce8\u5165(\u6784\u9020\u51fd\u6570\u6ce8\u5165) \u8d44\u6e90\u4e2d\uff0c\u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.TestGuiceMultipleStatic \u7c7b\u8fdb\u884cstatic\u7684\u6ce8\u5165\uff0c\u4ee3\u7801\u5982\u4e0b package io.edurt.lc.guice ; import com.google.inject.Inject ; import io.edurt.lc.guice.annotation.Java ; import io.edurt.lc.guice.annotation.Python ; public class TestGuiceMultipleStatic { @Inject @Java public static GuiceService java ; @Inject @Python public static GuiceService python ; public static void main ( String [] args ) { com . google . inject . Guice . createInjector ( binder -> { binder . bind ( GuiceService . class ). annotatedWith ( Java . class ). to ( GuiceJavaService . class ); binder . bind ( GuiceService . class ). annotatedWith ( Python . class ). to ( GuicePythonService . class ); binder . requestStaticInjection ( TestGuiceMultipleStatic . class ); }); TestGuiceMultipleStatic . java . println ( \"Hello Java Static Bind\" ); TestGuiceMultipleStatic . python . println ( \"Hello Python Static Bind\" ); } } \u6211\u4eec\u53ea\u9700\u8981\u5728binder\u9636\u6bb5\u5c06\u6211\u4eec\u7684\u4e3b\u7c7b\u6ce8\u5165\u5230guice\u5bb9\u5668\u4e2d\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u770b\u5230\u7684 binder.requestStaticInjection(TestGuiceMultipleStatic.class); \u4ee3\u7801\uff0c\u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\u540e,\u63a7\u5236\u53f0\u4f1a\u8f93\u51fa\u4ee5\u4e0b\u4fe1\u606f: Java Hello Java Static Bind Python Hello Python Static Bind \u4f7f\u7528@Named\u6ce8\u89e3\u7ed1\u5b9a \u00b6 \u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.TestGuiceMultipleNamed \u7c7b,\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b package io.edurt.lc.guice ; import com.google.inject.Guice ; import com.google.inject.Inject ; public class TestGuiceMultipleNamed { @Inject public GuiceService java ; @Inject public GuiceService python ; public static void main ( String [] args ) { TestGuiceMultipleNamed application = Guice . createInjector ( binder -> { binder . bind ( GuiceService . class ). to ( GuiceJavaService . class ); binder . bind ( GuiceService . class ). to ( GuicePythonService . class ); }). getInstance ( TestGuiceMultipleNamed . class ); application . java . println ( \"Hello Java Named Implement\" ); application . python . println ( \"Hello Python Named Implement\" ); } } \u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\u540e,\u63a7\u5236\u53f0\u4f1a\u8f93\u51fa\u4ee5\u4e0b\u4fe1\u606f: Exception in thread \"main\" com.google.inject.CreationException: Unable to create injector, see the following errors: 1 ) A binding to io.edurt.lc.guice.GuiceService was already configured at io.edurt.lc.guice.TestGuiceMultipleNamed.lambda $main$0 ( TestGuiceMultipleNamed.java:17 ) . at io.edurt.lc.guice.TestGuiceMultipleNamed.lambda $main$0 ( TestGuiceMultipleNamed.java:18 ) 1 error at com.google.inject.internal.Errors.throwCreationExceptionIfErrorsExist ( Errors.java:554 ) at com.google.inject.internal.InternalInjectorCreator.initializeStatically ( InternalInjectorCreator.java:161 ) at com.google.inject.internal.InternalInjectorCreator.build ( InternalInjectorCreator.java:108 ) at com.google.inject.Guice.createInjector ( Guice.java:87 ) at com.google.inject.Guice.createInjector ( Guice.java:69 ) at com.google.inject.Guice.createInjector ( Guice.java:59 ) at io.edurt.lc.guice.TestGuiceMultipleNamed.main ( TestGuiceMultipleNamed.java:16 ) \u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u4e86\u5c5e\u6027\u7ed1\u5b9a\u4e86\u591a\u63a5\u53e3\u5b9e\u73b0\uff0c\u5bfc\u81f4guice\u65e0\u6cd5\u8bc6\u522b\u5177\u4f53\u662f\u54ea\u4e2a\u5b9e\u73b0\u7c7b\uff0c\u4e0d\u8fc7guice\u662f\u5f3a\u5927\u7684\u8fd9\u79cd\u95ee\u9898\u4e5f\u88ab\u8003\u8651\u5230\u4e86\uff0c\u53ea\u9700\u8981\u4f7f\u7528 @Named \u6a21\u677f\u751f\u6210\u6ce8\u89e3\u5373\u53ef\u89e3\u51b3\uff0c\u6211\u4eec\u5c06\u4ee3\u7801\u4fee\u6539\u4e3a\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; import com.google.inject.Guice ; import com.google.inject.Inject ; import com.google.inject.name.Named ; import com.google.inject.name.Names ; public class TestGuiceMultipleNamed { @Inject @Named ( \"Java\" ) public GuiceService java ; @Inject @Named ( \"Python\" ) public GuiceService python ; public static void main ( String [] args ) { TestGuiceMultipleNamed application = Guice . createInjector ( binder -> { binder . bind ( GuiceService . class ). annotatedWith ( Names . named ( \"Java\" )). to ( GuiceJavaService . class ); binder . bind ( GuiceService . class ). annotatedWith ( Names . named ( \"Python\" )). to ( GuicePythonService . class ); }). getInstance ( TestGuiceMultipleNamed . class ); application . java . println ( \"Hello Java Named Implement\" ); application . python . println ( \"Hello Python Named Implement\" ); } } \u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\u540e,\u63a7\u5236\u53f0\u4f1a\u8f93\u51fa\u4ee5\u4e0b\u4fe1\u606f: Java Hello Java Named Implement Python Hello Python Named Implement \u8fd9\u4e2a\u793a\u4f8b\u4e5f\u5f88\u597d\u7406\u89e3\uff0c\u5176\u5b9e\u6211\u4eec\u53ea\u662f\u505a\u4e86\u4e24\u6b65\u64cd\u4f5c \u5728\u7ed1\u5b9a\u5b9e\u73b0\u7684\u65f6\u5019\u4f7f\u7528 annotatedWith(Names.named(\"Java\")) \u8fdb\u884c\u5bf9\u8be5\u670d\u52a1\u5b9e\u73b0\u505a\u540d\u79f0\u6807\u5fd7 \u5728\u9700\u8981\u4f7f\u7528\u670d\u52a1\u5b9e\u73b0\u7684\u5730\u65b9\u4f7f\u7528 @Named(\"Java\") \u8fdb\u884c\u670d\u52a1\u7684\u5f15\u7528\u5373\u53ef \u6e90\u7801\u5730\u5740 \u00b6 GitHub","title":"Guice\u4f9d\u8d56\u6ce8\u5165(\u63a5\u53e3\u591a\u5b9e\u73b0)"},{"location":"google/guice/binder-multiple.html#_1","text":"\u6280\u672f \u7248\u672c Java 1.8+ Guice 4.2.3","title":"\u57fa\u7840\u73af\u5883"},{"location":"google/guice/binder-multiple.html#_2","text":"\u521d\u59cb\u5316\u9879\u76ee mvn archetype:generate -DgroupId = io.edurt.lc.guice -DartifactId = guice-binder-multiple -DarchetypeArtifactId = maven-archetype-quickstart -Dversion = 1 .0.0 -DinteractiveMode = false \u4fee\u6539pom.xml\u589e\u52a0Guice\u4f9d\u8d56 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <parent> <artifactId> lc-guice </artifactId> <groupId> io.edurt.lc.guice </groupId> <version> 1.0.0 </version> </parent> <modelVersion> 4.0.0 </modelVersion> <artifactId> guice-binder-multiple </artifactId> <name> Learning Center for Guice Binder(Multiple Service) </name> <properties> <maven.compiler.source> 1.8 </maven.compiler.source> <maven.compiler.target> 1.8 </maven.compiler.target> </properties> <dependencies> <dependency> <groupId> com.google.inject </groupId> <artifactId> guice </artifactId> <version> 4.2.3 </version> </dependency> <dependency> <groupId> junit </groupId> <artifactId> junit </artifactId> <version> 4.12 </version> <scope> test </scope> </dependency> </dependencies> </project> guice : guice\u5c31\u662f\u6211\u4eec\u6838\u5fc3\u8981\u4f7f\u7528\u7684\u4f9d\u8d56","title":"\u521d\u59cb\u5316\u9879\u76ee"},{"location":"google/guice/binder-multiple.html#_3","text":"\u5982\u679c\u4e00\u4e2a\u63a5\u53e3\u6709\u591a\u4e2a\u5b9e\u73b0\uff0c\u5982\u679c\u5355\u5355\u901a\u8fc7 @Inject \u548c Module \u90fd\u96be\u4ee5\u76f4\u63a5\u5b9e\u73b0\uff0c\u4f46\u591a\u5b9e\u73b0\u662f\u7ecf\u5e38\u4f1a\u51fa\u73b0\u7684\uff0cGuice\u63d0\u4f9b\u4e86\u5176\u5b83\u6ce8\u5165\u65b9\u5f0f\u6765\u89e3\u51b3\u6b64\u95ee\u9898\u3002 \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceService \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; public interface GuiceService { void println ( String input ); } \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceJavaService \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; public class GuiceJavaService implements GuiceService { @Override public void println ( String input ) { System . out . println ( String . format ( \"Java %s\" , input )); } } \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuicePythonService \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; public class GuicePythonService implements GuiceService { @Override public void println ( String input ) { System . out . println ( String . format ( \"Python %s\" , input )); } } \u521b\u5efa src/main/java \u76ee\u5f55\u4e0b\u521b\u5efa io.edurt.lc.guice.annotation.Java \u548c io.edurt.lc.guice.annotation.Python \u6ce8\u89e3\u7c7b\uff0c\u7528\u4e8e\u63d0\u4f9bguice\u6846\u67b6\u6807\u8bc6 io.edurt.lc.guice.annotation.Java \u6587\u4ef6\u5185\u5bb9 package io.edurt.lc.guice.annotation ; import com.google.inject.BindingAnnotation ; import java.lang.annotation.ElementType ; import java.lang.annotation.Retention ; import java.lang.annotation.RetentionPolicy ; import java.lang.annotation.Target ; @Retention ( RetentionPolicy . RUNTIME ) @Target ({ ElementType . FIELD , ElementType . PARAMETER }) @BindingAnnotation public @interface Java { } io.edurt.lc.guice.annotation.Python \u6587\u4ef6\u5185\u5bb9 package io.edurt.lc.guice.annotation ; import com.google.inject.BindingAnnotation ; import java.lang.annotation.ElementType ; import java.lang.annotation.Retention ; import java.lang.annotation.RetentionPolicy ; import java.lang.annotation.Target ; @Retention ( RetentionPolicy . RUNTIME ) @Target ({ ElementType . FIELD , ElementType . PARAMETER }) @BindingAnnotation public @interface Python { } \u63a5\u4e0b\u6765\u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.TestGuiceMultiple \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.Guice ; import com.google.inject.Inject ; import io.edurt.lc.guice.annotation.Java ; import io.edurt.lc.guice.annotation.Python ; public class TestGuiceMultiple { @Inject @Java public GuiceService java ; @Inject @Python public GuiceService python ; public static void main ( String [] args ) { TestGuiceMultiple application = Guice . createInjector ( binder -> { binder . bind ( GuiceService . class ). annotatedWith ( Java . class ). to ( GuiceJavaService . class ); binder . bind ( GuiceService . class ). annotatedWith ( Python . class ). to ( GuicePythonService . class ); }). getInstance ( TestGuiceMultiple . class ); application . java . println ( \"Hello Java Implement\" ); application . python . println ( \"Hello Python Implement\" ); } } \u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\u540e,\u63a7\u5236\u53f0\u4f1a\u8f93\u51fa\u4ee5\u4e0b\u4fe1\u606f: Java Hello Java Implement Python Hello Python Implement \u6211\u4eec\u6ce8\u610f\u770b binder \u7684\u914d\u7f6e\u4e2d\uff0c\u6211\u4eec\u5c06\u6ce8\u89e3\u4e0e\u5b9e\u9645\u7684\u5b9e\u73b0\u7c7b\u7ed1\u5b9a\u5230\u4e86\u4e00\u8d77\uff0c\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u7ed1\u5b9a\u591a\u63a5\u53e3\u5b9e\u73b0\u7684\u529f\u80fd\u3002 \u6ce8\u610f\uff1a\u5728\u672c\u6b21\u7a0b\u5e8f\u4e2d\u6211\u4eec\u4f7f\u7528\u7684\u662flambda\u8868\u8fbe\u5f0f\u8fdb\u884c\u7684\u4ee3\u7801\u7f16\u7a0b\uff0c\u9700\u8981jdk1.8\u53ca\u4ee5\u4e0a\u7248\u672c","title":"\u63a5\u53e3\u591a\u5b9e\u73b0\u6ce8\u5165"},{"location":"google/guice/binder-multiple.html#_4","text":"\u6211\u4eec\u5982\u679c\u9700\u8981\u8fdb\u884c\u9759\u6001\u4ee3\u7801\u6ce8\u5165\u670d\u52a1\u8be5\u600e\u4e48\u5199\u5462\uff1f\u6211\u4eec\u53c2\u7167\u4ee5\u524d\u8bb2\u89e3\u7684 Guice\u4f9d\u8d56\u6ce8\u5165(\u6784\u9020\u51fd\u6570\u6ce8\u5165) \u8d44\u6e90\u4e2d\uff0c\u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.TestGuiceMultipleStatic \u7c7b\u8fdb\u884cstatic\u7684\u6ce8\u5165\uff0c\u4ee3\u7801\u5982\u4e0b package io.edurt.lc.guice ; import com.google.inject.Inject ; import io.edurt.lc.guice.annotation.Java ; import io.edurt.lc.guice.annotation.Python ; public class TestGuiceMultipleStatic { @Inject @Java public static GuiceService java ; @Inject @Python public static GuiceService python ; public static void main ( String [] args ) { com . google . inject . Guice . createInjector ( binder -> { binder . bind ( GuiceService . class ). annotatedWith ( Java . class ). to ( GuiceJavaService . class ); binder . bind ( GuiceService . class ). annotatedWith ( Python . class ). to ( GuicePythonService . class ); binder . requestStaticInjection ( TestGuiceMultipleStatic . class ); }); TestGuiceMultipleStatic . java . println ( \"Hello Java Static Bind\" ); TestGuiceMultipleStatic . python . println ( \"Hello Python Static Bind\" ); } } \u6211\u4eec\u53ea\u9700\u8981\u5728binder\u9636\u6bb5\u5c06\u6211\u4eec\u7684\u4e3b\u7c7b\u6ce8\u5165\u5230guice\u5bb9\u5668\u4e2d\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u770b\u5230\u7684 binder.requestStaticInjection(TestGuiceMultipleStatic.class); \u4ee3\u7801\uff0c\u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\u540e,\u63a7\u5236\u53f0\u4f1a\u8f93\u51fa\u4ee5\u4e0b\u4fe1\u606f: Java Hello Java Static Bind Python Hello Python Static Bind","title":"\u9759\u6001\u4ee3\u7801\u6ce8\u5165"},{"location":"google/guice/binder-multiple.html#named","text":"\u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.TestGuiceMultipleNamed \u7c7b,\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b package io.edurt.lc.guice ; import com.google.inject.Guice ; import com.google.inject.Inject ; public class TestGuiceMultipleNamed { @Inject public GuiceService java ; @Inject public GuiceService python ; public static void main ( String [] args ) { TestGuiceMultipleNamed application = Guice . createInjector ( binder -> { binder . bind ( GuiceService . class ). to ( GuiceJavaService . class ); binder . bind ( GuiceService . class ). to ( GuicePythonService . class ); }). getInstance ( TestGuiceMultipleNamed . class ); application . java . println ( \"Hello Java Named Implement\" ); application . python . println ( \"Hello Python Named Implement\" ); } } \u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\u540e,\u63a7\u5236\u53f0\u4f1a\u8f93\u51fa\u4ee5\u4e0b\u4fe1\u606f: Exception in thread \"main\" com.google.inject.CreationException: Unable to create injector, see the following errors: 1 ) A binding to io.edurt.lc.guice.GuiceService was already configured at io.edurt.lc.guice.TestGuiceMultipleNamed.lambda $main$0 ( TestGuiceMultipleNamed.java:17 ) . at io.edurt.lc.guice.TestGuiceMultipleNamed.lambda $main$0 ( TestGuiceMultipleNamed.java:18 ) 1 error at com.google.inject.internal.Errors.throwCreationExceptionIfErrorsExist ( Errors.java:554 ) at com.google.inject.internal.InternalInjectorCreator.initializeStatically ( InternalInjectorCreator.java:161 ) at com.google.inject.internal.InternalInjectorCreator.build ( InternalInjectorCreator.java:108 ) at com.google.inject.Guice.createInjector ( Guice.java:87 ) at com.google.inject.Guice.createInjector ( Guice.java:69 ) at com.google.inject.Guice.createInjector ( Guice.java:59 ) at io.edurt.lc.guice.TestGuiceMultipleNamed.main ( TestGuiceMultipleNamed.java:16 ) \u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528\u4e86\u5c5e\u6027\u7ed1\u5b9a\u4e86\u591a\u63a5\u53e3\u5b9e\u73b0\uff0c\u5bfc\u81f4guice\u65e0\u6cd5\u8bc6\u522b\u5177\u4f53\u662f\u54ea\u4e2a\u5b9e\u73b0\u7c7b\uff0c\u4e0d\u8fc7guice\u662f\u5f3a\u5927\u7684\u8fd9\u79cd\u95ee\u9898\u4e5f\u88ab\u8003\u8651\u5230\u4e86\uff0c\u53ea\u9700\u8981\u4f7f\u7528 @Named \u6a21\u677f\u751f\u6210\u6ce8\u89e3\u5373\u53ef\u89e3\u51b3\uff0c\u6211\u4eec\u5c06\u4ee3\u7801\u4fee\u6539\u4e3a\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; import com.google.inject.Guice ; import com.google.inject.Inject ; import com.google.inject.name.Named ; import com.google.inject.name.Names ; public class TestGuiceMultipleNamed { @Inject @Named ( \"Java\" ) public GuiceService java ; @Inject @Named ( \"Python\" ) public GuiceService python ; public static void main ( String [] args ) { TestGuiceMultipleNamed application = Guice . createInjector ( binder -> { binder . bind ( GuiceService . class ). annotatedWith ( Names . named ( \"Java\" )). to ( GuiceJavaService . class ); binder . bind ( GuiceService . class ). annotatedWith ( Names . named ( \"Python\" )). to ( GuicePythonService . class ); }). getInstance ( TestGuiceMultipleNamed . class ); application . java . println ( \"Hello Java Named Implement\" ); application . python . println ( \"Hello Python Named Implement\" ); } } \u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\u540e,\u63a7\u5236\u53f0\u4f1a\u8f93\u51fa\u4ee5\u4e0b\u4fe1\u606f: Java Hello Java Named Implement Python Hello Python Named Implement \u8fd9\u4e2a\u793a\u4f8b\u4e5f\u5f88\u597d\u7406\u89e3\uff0c\u5176\u5b9e\u6211\u4eec\u53ea\u662f\u505a\u4e86\u4e24\u6b65\u64cd\u4f5c \u5728\u7ed1\u5b9a\u5b9e\u73b0\u7684\u65f6\u5019\u4f7f\u7528 annotatedWith(Names.named(\"Java\")) \u8fdb\u884c\u5bf9\u8be5\u670d\u52a1\u5b9e\u73b0\u505a\u540d\u79f0\u6807\u5fd7 \u5728\u9700\u8981\u4f7f\u7528\u670d\u52a1\u5b9e\u73b0\u7684\u5730\u65b9\u4f7f\u7528 @Named(\"Java\") \u8fdb\u884c\u670d\u52a1\u7684\u5f15\u7528\u5373\u53ef","title":"\u4f7f\u7528@Named\u6ce8\u89e3\u7ed1\u5b9a"},{"location":"google/guice/binder-multiple.html#_5","text":"GitHub","title":"\u6e90\u7801\u5730\u5740"},{"location":"google/guice/binder-provider.html","tags":["Google","Guice","Java","\u4f9d\u8d56\u6ce8\u5165"],"text":"\u672c\u6587\u7ae0\u4e3b\u8981\u8be6\u7ec6\u8bb2\u89e3Guice\u4f9d\u8d56\u6ce8\u5165\u4e2d\u7684Provider\u670d\u52a1\u6ce8\u5165\u5b9e\u73b0\uff0c\u4e00\u822c\u90fd\u662f\u7528\u4e8e\u5916\u90e8\u670d\u52a1\u7684\u6ce8\u5165\uff0c\u6bd4\u5982\u5b9e\u73b0Redis\u7b49\u3002 \u57fa\u7840\u73af\u5883 \u00b6 \u6280\u672f \u7248\u672c Java 1.8+ Guice 4.2.3 \u521d\u59cb\u5316\u9879\u76ee \u00b6 \u521d\u59cb\u5316\u9879\u76ee mvn archetype:generate -DgroupId = io.edurt.lc.guice -DartifactId = guice-binder-provider -DarchetypeArtifactId = maven-archetype-quickstart -Dversion = 1 .0.0 -DinteractiveMode = false \u4fee\u6539pom.xml\u589e\u52a0Guice\u4f9d\u8d56 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <parent> <artifactId> lc-guice </artifactId> <groupId> io.edurt.lc.guice </groupId> <version> 1.0.0 </version> </parent> <modelVersion> 4.0.0 </modelVersion> <artifactId> guice-binder-provider </artifactId> <name> Learning Center for Guice Binder(Provider) </name> <properties> <maven.compiler.source> 1.8 </maven.compiler.source> <maven.compiler.target> 1.8 </maven.compiler.target> </properties> <dependencies> <dependency> <groupId> com.google.inject </groupId> <artifactId> guice </artifactId> <version> 4.2.3 </version> </dependency> <dependency> <groupId> junit </groupId> <artifactId> junit </artifactId> <version> 4.12 </version> <scope> test </scope> </dependency> </dependencies> </project> guice : guice\u5c31\u662f\u6211\u4eec\u6838\u5fc3\u8981\u4f7f\u7528\u7684\u4f9d\u8d56 \u5b9e\u73b0Provider\u6ce8\u5165 \u00b6 \u5982\u679c\u60f3\u8981\u6ce8\u5165\u4e00\u4e2a\u670d\u52a1\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Provider \u8fdb\u884c\u5b9e\u73b0\u3002 \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceProviderService \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; public interface GuiceProviderService { void println ( String input ); } \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceProviderServiceImpl \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice.io.edurt.lc.guice ; import io.edurt.lc.guice.GuiceProviderService ; public class GuiceProviderServiceImpl implements GuiceProviderService { @Override public void println ( String input ) { System . out . println ( input ); } } \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceProvider \u7c7b\u6587\u4ef6\u7528\u4e8e\u5b9e\u73b0\u6ce8\u5165,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; import com.google.inject.Provider ; public class GuiceProvider implements Provider < GuiceProviderService > { @Override public GuiceProviderService get () { return new GuiceProviderServiceImpl (); } } \u63a5\u4e0b\u6765\u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.TestGuiceProvider \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.Guice ; import com.google.inject.Inject ; import com.google.inject.Injector ; public class TestGuiceProvider { @Inject private GuiceProviderService providerService ; public static void main ( String [] args ) { Injector injector = Guice . createInjector ( binder -> binder . bind ( GuiceProviderService . class ). toProvider ( GuiceProvider . class )); TestGuiceProvider application = injector . getInstance ( TestGuiceProvider . class ); application . providerService . println ( \"Hello Guice Provider\" ); } } \u6211\u4eec\u8fd0\u884c\u7a0b\u5e8f\u8f93\u51fa Hello Guice Provider \u6211\u4eec\u6ce8\u610f\u770b binder \u7684\u914d\u7f6e\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u662f toProvider \u5c06\u5b9e\u73b0\u7c7b\u7ed1\u5b9a\u5230\u4e86 Service \u63a5\u53e3\u4e2d\uff0c\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u5bf9Provider\u7684\u6ce8\u5165\u3002 \u4f7f\u7528 @ProvidedBy \u6ce8\u89e3\u7ed1\u5b9a \u00b6 \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceAutoProviderService \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; import com.google.inject.ProvidedBy ; @ProvidedBy ( value = GuiceAutoProvider . class ) public interface GuiceAutoProviderService { void println ( String input ); } \u6ce8\u610f\u6211\u4eec\u4f7f\u7528 @ProvidedBy \u6807\u5fd7\u4e86\u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b\uff0c\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u5c31\u53ef\u4ee5\u5b9e\u73b0\u81ea\u52a8\u6ce8\u5165\u3002 \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceAutoProviderServiceImpl \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; public class GuiceAutoProviderServiceImpl implements GuiceAutoProviderService { @Override public void println ( String input ) { System . out . println ( input ); } } \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceAutoProvider \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; import com.google.inject.Provider ; public class GuiceAutoProvider implements Provider < GuiceAutoProviderService > { @Override public GuiceAutoProviderService get () { return new GuiceAutoProviderServiceImpl (); } } \u63a5\u4e0b\u6765\u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.TestGuiceAutoProvider \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.Guice ; import com.google.inject.Inject ; public class TestGuiceAutoProvider { @Inject private GuiceAutoProviderService autoProviderService ; public static void main ( String [] args ) { TestGuiceAutoProvider application = Guice . createInjector (). getInstance ( TestGuiceAutoProvider . class ); application . autoProviderService . println ( \"Hello Auto Guice Provider\" ); } } \u6211\u4eec\u8fd0\u884c\u7a0b\u5e8f\u8f93\u51fa Hello Auto Guice Provider \u5728\u4ee3\u7801\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u6ca1\u6709\u53bb\u7ed1\u5b9aModule\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u6ce8\u5165\u3002 \u6e90\u7801\u5730\u5740 \u00b6 GitHub","title":"Guice\u4f9d\u8d56\u6ce8\u5165(Provider)"},{"location":"google/guice/binder-provider.html#_1","text":"\u6280\u672f \u7248\u672c Java 1.8+ Guice 4.2.3","title":"\u57fa\u7840\u73af\u5883"},{"location":"google/guice/binder-provider.html#_2","text":"\u521d\u59cb\u5316\u9879\u76ee mvn archetype:generate -DgroupId = io.edurt.lc.guice -DartifactId = guice-binder-provider -DarchetypeArtifactId = maven-archetype-quickstart -Dversion = 1 .0.0 -DinteractiveMode = false \u4fee\u6539pom.xml\u589e\u52a0Guice\u4f9d\u8d56 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <parent> <artifactId> lc-guice </artifactId> <groupId> io.edurt.lc.guice </groupId> <version> 1.0.0 </version> </parent> <modelVersion> 4.0.0 </modelVersion> <artifactId> guice-binder-provider </artifactId> <name> Learning Center for Guice Binder(Provider) </name> <properties> <maven.compiler.source> 1.8 </maven.compiler.source> <maven.compiler.target> 1.8 </maven.compiler.target> </properties> <dependencies> <dependency> <groupId> com.google.inject </groupId> <artifactId> guice </artifactId> <version> 4.2.3 </version> </dependency> <dependency> <groupId> junit </groupId> <artifactId> junit </artifactId> <version> 4.12 </version> <scope> test </scope> </dependency> </dependencies> </project> guice : guice\u5c31\u662f\u6211\u4eec\u6838\u5fc3\u8981\u4f7f\u7528\u7684\u4f9d\u8d56","title":"\u521d\u59cb\u5316\u9879\u76ee"},{"location":"google/guice/binder-provider.html#provider","text":"\u5982\u679c\u60f3\u8981\u6ce8\u5165\u4e00\u4e2a\u670d\u52a1\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Provider \u8fdb\u884c\u5b9e\u73b0\u3002 \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceProviderService \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; public interface GuiceProviderService { void println ( String input ); } \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceProviderServiceImpl \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice.io.edurt.lc.guice ; import io.edurt.lc.guice.GuiceProviderService ; public class GuiceProviderServiceImpl implements GuiceProviderService { @Override public void println ( String input ) { System . out . println ( input ); } } \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceProvider \u7c7b\u6587\u4ef6\u7528\u4e8e\u5b9e\u73b0\u6ce8\u5165,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; import com.google.inject.Provider ; public class GuiceProvider implements Provider < GuiceProviderService > { @Override public GuiceProviderService get () { return new GuiceProviderServiceImpl (); } } \u63a5\u4e0b\u6765\u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.TestGuiceProvider \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.Guice ; import com.google.inject.Inject ; import com.google.inject.Injector ; public class TestGuiceProvider { @Inject private GuiceProviderService providerService ; public static void main ( String [] args ) { Injector injector = Guice . createInjector ( binder -> binder . bind ( GuiceProviderService . class ). toProvider ( GuiceProvider . class )); TestGuiceProvider application = injector . getInstance ( TestGuiceProvider . class ); application . providerService . println ( \"Hello Guice Provider\" ); } } \u6211\u4eec\u8fd0\u884c\u7a0b\u5e8f\u8f93\u51fa Hello Guice Provider \u6211\u4eec\u6ce8\u610f\u770b binder \u7684\u914d\u7f6e\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u7684\u662f toProvider \u5c06\u5b9e\u73b0\u7c7b\u7ed1\u5b9a\u5230\u4e86 Service \u63a5\u53e3\u4e2d\uff0c\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u5bf9Provider\u7684\u6ce8\u5165\u3002","title":"\u5b9e\u73b0Provider\u6ce8\u5165"},{"location":"google/guice/binder-provider.html#providedby","text":"\u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceAutoProviderService \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; import com.google.inject.ProvidedBy ; @ProvidedBy ( value = GuiceAutoProvider . class ) public interface GuiceAutoProviderService { void println ( String input ); } \u6ce8\u610f\u6211\u4eec\u4f7f\u7528 @ProvidedBy \u6807\u5fd7\u4e86\u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b\uff0c\u8fd9\u6837\u7684\u8bdd\u6211\u4eec\u5c31\u53ef\u4ee5\u5b9e\u73b0\u81ea\u52a8\u6ce8\u5165\u3002 \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceAutoProviderServiceImpl \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; public class GuiceAutoProviderServiceImpl implements GuiceAutoProviderService { @Override public void println ( String input ) { System . out . println ( input ); } } \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceAutoProvider \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; import com.google.inject.Provider ; public class GuiceAutoProvider implements Provider < GuiceAutoProviderService > { @Override public GuiceAutoProviderService get () { return new GuiceAutoProviderServiceImpl (); } } \u63a5\u4e0b\u6765\u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.TestGuiceAutoProvider \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.Guice ; import com.google.inject.Inject ; public class TestGuiceAutoProvider { @Inject private GuiceAutoProviderService autoProviderService ; public static void main ( String [] args ) { TestGuiceAutoProvider application = Guice . createInjector (). getInstance ( TestGuiceAutoProvider . class ); application . autoProviderService . println ( \"Hello Auto Guice Provider\" ); } } \u6211\u4eec\u8fd0\u884c\u7a0b\u5e8f\u8f93\u51fa Hello Auto Guice Provider \u5728\u4ee3\u7801\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u6ca1\u6709\u53bb\u7ed1\u5b9aModule\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u6ce8\u5165\u3002","title":"\u4f7f\u7528@ProvidedBy\u6ce8\u89e3\u7ed1\u5b9a"},{"location":"google/guice/binder-provider.html#_3","text":"GitHub","title":"\u6e90\u7801\u5730\u5740"},{"location":"google/guice/binder-scope-other.html","tags":["Google","Guice","Java","\u4f9d\u8d56\u6ce8\u5165"],"text":"\u672c\u6587\u7ae0\u4e3b\u8981\u8be6\u7ec6\u8bb2\u89e3Guice\u4f9d\u8d56\u6ce8\u5165\u4e2d\u7684\u4e00\u4e9b\u9ad8\u7ea7\u9009\u9879\uff0c\u4ed6\u4eec\u5206\u522b\u662f Eagerly Loading Bindings \uff0c Stage \uff0c Optional Injection \u3002\u6211\u4eec\u5c06\u4e00\u4e00\u5bf9\u4ed6\u4eec\u8fdb\u884c\u8bb2\u89e3\u3002 \u57fa\u7840\u73af\u5883 \u00b6 \u6280\u672f \u7248\u672c Java 1.8+ Guice 4.2.3 \u521d\u59cb\u5316\u9879\u76ee \u00b6 \u521d\u59cb\u5316\u9879\u76ee mvn archetype:generate -DgroupId = io.edurt.lc.guice -DartifactId = guice-binder-scope-other -DarchetypeArtifactId = maven-archetype-quickstart -Dversion = 1 .0.0 -DinteractiveMode = false \u4fee\u6539pom.xml\u589e\u52a0Guice\u4f9d\u8d56 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <parent> <artifactId> lc-guice </artifactId> <groupId> io.edurt.lc.guice </groupId> <version> 1.0.0 </version> </parent> <modelVersion> 4.0.0 </modelVersion> <artifactId> guice-binder-scope-other </artifactId> <name> Learning Center for Guice Binder(Scope Other) </name> <properties> <maven.compiler.source> 1.8 </maven.compiler.source> <maven.compiler.target> 1.8 </maven.compiler.target> </properties> <dependencies> <dependency> <groupId> com.google.inject </groupId> <artifactId> guice </artifactId> <version> 4.2.3 </version> </dependency> <dependency> <groupId> junit </groupId> <artifactId> junit </artifactId> <version> 4.12 </version> <scope> test </scope> </dependency> </dependencies> </project> guice : guice\u5c31\u662f\u6211\u4eec\u6838\u5fc3\u8981\u4f7f\u7528\u7684\u4f9d\u8d56 Eagerly Loading Bindings \u00b6 \u9664\u7ed1\u5b9aScope\u5916\uff0c\u5bf9\u8c61\u9ed8\u8ba4\u5728\u7b2c\u4e00\u6b21\u8c03\u7528\u65f6\u88ab\u521b\u5efa\uff0c\u4e5f\u5c31\u662f Eagerly Loading Bindings \u5ef6\u65f6\u52a0\u8f7d\uff0cGuice\u4e5f\u5141\u8bb8\u5bf9\u8c61\u5728\u6ce8\u5165\u5230Guice\u5bb9\u5668\u4e2d\u65f6\u5c31\u88ab\u521b\u5efa\u51fa\u6765(\u53ea\u662f\u9488\u5bf9\u5355\u4f8b\u6a21\u5f0f\u624d\u6709\u6548)\u3002 \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceEagerlyLoadingBindingsService \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; public class GuiceEagerlyLoadingBindingsService { public GuiceEagerlyLoadingBindingsService () { System . out . println ( \"Init Success\" ); } public void println () { System . out . println ( \"After Eagerly Loading Bindings\" ); } } \u63a5\u4e0b\u6765\u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.TestGuiceEagerlyLoadingBindings \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.Guice ; import com.google.inject.Injector ; import org.junit.Test ; public class TestGuiceEagerlyLoadingBindings { @Test public void test () { Injector injector = Guice . createInjector ( binder -> binder . bind ( GuiceEagerlyLoadingBindingsService . class ). asEagerSingleton ()); injector . getInstance ( GuiceEagerlyLoadingBindingsService . class ). println (); } } \u6211\u4eec\u8fd0\u884c\u7a0b\u5e8f\u8f93\u51fa Init Success After Eagerly Loading Bindings \u901a\u8fc7\u8fd0\u884c\u7ed3\u679c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5728 getInstance \u83b7\u53d6\u5b9e\u4f8b\u65f6,\u8be5\u5b9e\u4f8b\u5c31\u88ab\u6784\u5efa\u51fa\u6765. Stages \u00b6 Guice\u4e2d\u6709\u9ed8\u8ba4\u4e09\u79cd\u8fd0\u884c\u65b9\u5f0f\u6765\u63a7\u5236Guice\u5bb9\u5668\u7684\u52a0\u8f7d\u901f\u5ea6.\u5728 com.google.inject.Stage \u679a\u4e3e\u4e2d\u63d0\u4f9b\u4e86 TOOL \uff0c DEVELOPMENT \uff0c PRODUCTION \u4e09\u79cd\u6a21\u5f0f\u3002 \u9ed8\u8ba4\u6e90\u7801\u4e2d\u4f7f\u7528\u7684\u662f DEVELOPMENT \u65b9\u5f0f,\u6e90\u7801\u5982\u4e0b public static Injector createInjector ( Iterable <? extends Module > modules ){ return createInjector ( Stage . DEVELOPMENT , modules ); } \u5982\u9700\u6307\u5b9a\u81ea\u5df1\u7684\u683c\u5f0f,\u4ee3\u7801\u5982\u4e0b Injector injector = Guice . createInjector ( Stage . DEVELOPMENT , binder -> binder . bind ( GuiceEagerlyLoadingBindingsService . class ). asEagerSingleton ()); \u5728\u6784\u5efa\u65f6\u6307\u5b9a Stage \u5373\u53ef. Optional Injection \u00b6 Optional Injection \u53ef\u4ee5\u7528\u4e8e\u6211\u4eec\u9009\u62e9\u6027\u7684\u6ce8\u5165\u5185\u5bb9, \u4e5f\u5c31\u662f\u6dfb\u52a0\u4e00\u4e2a\u9ed8\u8ba4\u5bf9\u8c61. \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceService \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; public interface GuiceService { void println (); } \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceOptionalInjectionDefaultService \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; public class GuiceOptionalInjectionDefaultService implements GuiceService { @Override public void println () { System . out . println ( \"Optional Injection Default\" ); } } \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceOptionalInjectionDefaultService \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; public class GuiceOptionalInjectionCustomService implements GuiceService { @Override public void println () { System . out . println ( \"Optional Injection Custom\" ); } } \u63a5\u4e0b\u6765\u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.TestGuiceOptionalInjection \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.Guice ; import com.google.inject.Inject ; import com.google.inject.Injector ; import org.junit.Test ; public class TestGuiceOptionalInjection { @Inject ( optional = true ) private GuiceService service = new GuiceOptionalInjectionDefaultService (); @Test public void testDefault () { Injector injector = Guice . createInjector ( binder -> { }); injector . getInstance ( TestGuiceOptionalInjection . class ). service . println (); } @Test public void testCustom () { Injector injector = Guice . createInjector ( binder -> { binder . bind ( GuiceService . class ). to ( GuiceOptionalInjectionCustomService . class ); }); injector . getInstance ( TestGuiceOptionalInjection . class ). service . println (); } } \u5f53\u6211\u4eec\u8fd0\u884c testDefault() \u65f6,\u63a7\u5236\u53f0\u8f93\u51fa Optional Injection Default \u5f53\u6211\u4eec\u8fd0\u884c testCustom() \u65f6,\u63a7\u5236\u53f0\u8f93\u51fa Optional Injection Custom Guice\u5bb9\u5668\u4e2d\u65e0\u6cd5\u83b7\u53d6\u83b7\u53d6\u4e00\u4e2a GuiceService \u670d\u52a1\u90a3\u4e48\u5c31\u4f7f\u7528\u9ed8\u8ba4\u7684 GuiceOptionalInjectionDefaultService \uff0c\u5426\u5219\u5c31\u662f\u7528\u83b7\u53d6\u5230\u7684 GuiceOptionalInjectionCustomService \u670d\u52a1\u3002 \u6e90\u7801\u5730\u5740 \u00b6 GitHub","title":"Guice\u4f9d\u8d56\u6ce8\u5165(Scope\u5176\u4ed6\u65b9\u5f0f)"},{"location":"google/guice/binder-scope-other.html#_1","text":"\u6280\u672f \u7248\u672c Java 1.8+ Guice 4.2.3","title":"\u57fa\u7840\u73af\u5883"},{"location":"google/guice/binder-scope-other.html#_2","text":"\u521d\u59cb\u5316\u9879\u76ee mvn archetype:generate -DgroupId = io.edurt.lc.guice -DartifactId = guice-binder-scope-other -DarchetypeArtifactId = maven-archetype-quickstart -Dversion = 1 .0.0 -DinteractiveMode = false \u4fee\u6539pom.xml\u589e\u52a0Guice\u4f9d\u8d56 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <parent> <artifactId> lc-guice </artifactId> <groupId> io.edurt.lc.guice </groupId> <version> 1.0.0 </version> </parent> <modelVersion> 4.0.0 </modelVersion> <artifactId> guice-binder-scope-other </artifactId> <name> Learning Center for Guice Binder(Scope Other) </name> <properties> <maven.compiler.source> 1.8 </maven.compiler.source> <maven.compiler.target> 1.8 </maven.compiler.target> </properties> <dependencies> <dependency> <groupId> com.google.inject </groupId> <artifactId> guice </artifactId> <version> 4.2.3 </version> </dependency> <dependency> <groupId> junit </groupId> <artifactId> junit </artifactId> <version> 4.12 </version> <scope> test </scope> </dependency> </dependencies> </project> guice : guice\u5c31\u662f\u6211\u4eec\u6838\u5fc3\u8981\u4f7f\u7528\u7684\u4f9d\u8d56","title":"\u521d\u59cb\u5316\u9879\u76ee"},{"location":"google/guice/binder-scope-other.html#eagerly-loading-bindings","text":"\u9664\u7ed1\u5b9aScope\u5916\uff0c\u5bf9\u8c61\u9ed8\u8ba4\u5728\u7b2c\u4e00\u6b21\u8c03\u7528\u65f6\u88ab\u521b\u5efa\uff0c\u4e5f\u5c31\u662f Eagerly Loading Bindings \u5ef6\u65f6\u52a0\u8f7d\uff0cGuice\u4e5f\u5141\u8bb8\u5bf9\u8c61\u5728\u6ce8\u5165\u5230Guice\u5bb9\u5668\u4e2d\u65f6\u5c31\u88ab\u521b\u5efa\u51fa\u6765(\u53ea\u662f\u9488\u5bf9\u5355\u4f8b\u6a21\u5f0f\u624d\u6709\u6548)\u3002 \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceEagerlyLoadingBindingsService \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; public class GuiceEagerlyLoadingBindingsService { public GuiceEagerlyLoadingBindingsService () { System . out . println ( \"Init Success\" ); } public void println () { System . out . println ( \"After Eagerly Loading Bindings\" ); } } \u63a5\u4e0b\u6765\u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.TestGuiceEagerlyLoadingBindings \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.Guice ; import com.google.inject.Injector ; import org.junit.Test ; public class TestGuiceEagerlyLoadingBindings { @Test public void test () { Injector injector = Guice . createInjector ( binder -> binder . bind ( GuiceEagerlyLoadingBindingsService . class ). asEagerSingleton ()); injector . getInstance ( GuiceEagerlyLoadingBindingsService . class ). println (); } } \u6211\u4eec\u8fd0\u884c\u7a0b\u5e8f\u8f93\u51fa Init Success After Eagerly Loading Bindings \u901a\u8fc7\u8fd0\u884c\u7ed3\u679c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5728 getInstance \u83b7\u53d6\u5b9e\u4f8b\u65f6,\u8be5\u5b9e\u4f8b\u5c31\u88ab\u6784\u5efa\u51fa\u6765.","title":"Eagerly Loading Bindings"},{"location":"google/guice/binder-scope-other.html#stages","text":"Guice\u4e2d\u6709\u9ed8\u8ba4\u4e09\u79cd\u8fd0\u884c\u65b9\u5f0f\u6765\u63a7\u5236Guice\u5bb9\u5668\u7684\u52a0\u8f7d\u901f\u5ea6.\u5728 com.google.inject.Stage \u679a\u4e3e\u4e2d\u63d0\u4f9b\u4e86 TOOL \uff0c DEVELOPMENT \uff0c PRODUCTION \u4e09\u79cd\u6a21\u5f0f\u3002 \u9ed8\u8ba4\u6e90\u7801\u4e2d\u4f7f\u7528\u7684\u662f DEVELOPMENT \u65b9\u5f0f,\u6e90\u7801\u5982\u4e0b public static Injector createInjector ( Iterable <? extends Module > modules ){ return createInjector ( Stage . DEVELOPMENT , modules ); } \u5982\u9700\u6307\u5b9a\u81ea\u5df1\u7684\u683c\u5f0f,\u4ee3\u7801\u5982\u4e0b Injector injector = Guice . createInjector ( Stage . DEVELOPMENT , binder -> binder . bind ( GuiceEagerlyLoadingBindingsService . class ). asEagerSingleton ()); \u5728\u6784\u5efa\u65f6\u6307\u5b9a Stage \u5373\u53ef.","title":"Stages"},{"location":"google/guice/binder-scope-other.html#optional-injection","text":"Optional Injection \u53ef\u4ee5\u7528\u4e8e\u6211\u4eec\u9009\u62e9\u6027\u7684\u6ce8\u5165\u5185\u5bb9, \u4e5f\u5c31\u662f\u6dfb\u52a0\u4e00\u4e2a\u9ed8\u8ba4\u5bf9\u8c61. \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceService \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; public interface GuiceService { void println (); } \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceOptionalInjectionDefaultService \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; public class GuiceOptionalInjectionDefaultService implements GuiceService { @Override public void println () { System . out . println ( \"Optional Injection Default\" ); } } \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceOptionalInjectionDefaultService \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; public class GuiceOptionalInjectionCustomService implements GuiceService { @Override public void println () { System . out . println ( \"Optional Injection Custom\" ); } } \u63a5\u4e0b\u6765\u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.TestGuiceOptionalInjection \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.Guice ; import com.google.inject.Inject ; import com.google.inject.Injector ; import org.junit.Test ; public class TestGuiceOptionalInjection { @Inject ( optional = true ) private GuiceService service = new GuiceOptionalInjectionDefaultService (); @Test public void testDefault () { Injector injector = Guice . createInjector ( binder -> { }); injector . getInstance ( TestGuiceOptionalInjection . class ). service . println (); } @Test public void testCustom () { Injector injector = Guice . createInjector ( binder -> { binder . bind ( GuiceService . class ). to ( GuiceOptionalInjectionCustomService . class ); }); injector . getInstance ( TestGuiceOptionalInjection . class ). service . println (); } } \u5f53\u6211\u4eec\u8fd0\u884c testDefault() \u65f6,\u63a7\u5236\u53f0\u8f93\u51fa Optional Injection Default \u5f53\u6211\u4eec\u8fd0\u884c testCustom() \u65f6,\u63a7\u5236\u53f0\u8f93\u51fa Optional Injection Custom Guice\u5bb9\u5668\u4e2d\u65e0\u6cd5\u83b7\u53d6\u83b7\u53d6\u4e00\u4e2a GuiceService \u670d\u52a1\u90a3\u4e48\u5c31\u4f7f\u7528\u9ed8\u8ba4\u7684 GuiceOptionalInjectionDefaultService \uff0c\u5426\u5219\u5c31\u662f\u7528\u83b7\u53d6\u5230\u7684 GuiceOptionalInjectionCustomService \u670d\u52a1\u3002","title":"Optional Injection"},{"location":"google/guice/binder-scope-other.html#_3","text":"GitHub","title":"\u6e90\u7801\u5730\u5740"},{"location":"google/guice/binder-scope.html","tags":["Google","Guice","Java","\u4f9d\u8d56\u6ce8\u5165"],"text":"\u672c\u6587\u7ae0\u4e3b\u8981\u8be6\u7ec6\u8bb2\u89e3Guice\u4f9d\u8d56\u6ce8\u5165\u4e2d\u7684\u4e00\u4e9b\u9ad8\u7ea7\u9009\u9879\uff0c\u4ed6\u4eec\u5206\u522b\u662f Scope \uff0c Eagerly Loading Bindings \uff0c Stage \uff0c Optional Injection \u3002\u6211\u4eec\u5c06\u4e00\u4e00\u5bf9\u4ed6\u4eec\u8fdb\u884c\u8bb2\u89e3\u3002 \u57fa\u7840\u73af\u5883 \u00b6 \u6280\u672f \u7248\u672c Java 1.8+ Guice 4.2.3 \u521d\u59cb\u5316\u9879\u76ee \u00b6 \u521d\u59cb\u5316\u9879\u76ee mvn archetype:generate -DgroupId = io.edurt.lc.guice -DartifactId = guice-binder-scope -DarchetypeArtifactId = maven-archetype-quickstart -Dversion = 1 .0.0 -DinteractiveMode = false \u4fee\u6539pom.xml\u589e\u52a0Guice\u4f9d\u8d56 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <parent> <artifactId> lc-guice </artifactId> <groupId> io.edurt.lc.guice </groupId> <version> 1.0.0 </version> </parent> <modelVersion> 4.0.0 </modelVersion> <artifactId> guice-binder-scope </artifactId> <name> Learning Center for Guice Binder(Scope) </name> <properties> <maven.compiler.source> 1.8 </maven.compiler.source> <maven.compiler.target> 1.8 </maven.compiler.target> </properties> <dependencies> <dependency> <groupId> com.google.inject </groupId> <artifactId> guice </artifactId> <version> 4.2.3 </version> </dependency> <dependency> <groupId> junit </groupId> <artifactId> junit </artifactId> <version> 4.12 </version> <scope> test </scope> </dependency> </dependencies> </project> guice : guice\u5c31\u662f\u6211\u4eec\u6838\u5fc3\u8981\u4f7f\u7528\u7684\u4f9d\u8d56 Singleton \u00b6 Guice\u652f\u6301\u6211\u4eec\u5728\u5176\u4ed6DI\u6846\u67b6\u4e2d\u9010\u6e10\u4e60\u60ef\u7684 Scope \u548c Scope \u673a\u5236\u3002Guice\u9ed8\u8ba4\u63d0\u4f9b\u5df2\u5b9a\u4e49\u4f9d\u8d56\u9879\u7684\u65b0\u5b9e\u4f8b\u3002 \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceScopeService \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; public interface GuiceScopeService { void println ( String input ); } \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceScopeServiceImpl \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; public class GuiceScopeServiceImpl implements GuiceScopeService { @Override public void println ( String input ) { System . out . println ( input ); } } \u63a5\u4e0b\u6765\u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.TestGuiceScope \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.Guice ; import com.google.inject.Injector ; import com.google.inject.Scopes ; import org.junit.Test ; public class TestGuiceScope { @Test public void test () { Injector injector = Guice . createInjector ( binder -> binder . bind ( GuiceScopeService . class ). to ( GuiceScopeServiceImpl . class ). in ( Scopes . SINGLETON )); GuiceScopeService service = injector . getInstance ( GuiceScopeService . class ); service . println ( \"Singleton Scope\" ); } } \u6211\u4eec\u8fd0\u884c\u7a0b\u5e8f\u8f93\u51fa Singleton Scope Note \u901a\u8fc7\u4ee3\u7801 binder.bind(GuiceScopeService.class).to(GuiceScopeServiceImpl.class).in(Scopes.SINGLETON) \u6211\u4eec\u6307\u5b9a\u4e86GuiceScopeService\u7684Scope\uff0c\u4ed6\u5c06\u4f1a\u88ab\u6807\u5fd7\u4e3a\u4e00\u4e2a\u5355\u4f8b\u5b9e\u4f8b\u3002\u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 @Singleton \u6807\u5fd7\u8be5\u7c7b\u7684\u4f5c\u7528\u57df \u5728 src/test/java \u76ee\u5f55\u521b\u5efa GuiceScopeServiceAutoImpl \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.Singleton ; @Singleton public class GuiceScopeServiceAutoImpl implements GuiceScopeService { @Override public void println ( String input ) { System . out . println ( input ); } } \u63a5\u4e0b\u6765\u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.TestGuiceScopeAuto \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.Guice ; import com.google.inject.Injector ; import org.junit.Test ; public class TestGuiceScopeAuto { @Test public void test () { Injector injector = Guice . createInjector ( binder -> binder . bind ( GuiceScopeService . class ). to ( GuiceScopeServiceAutoImpl . class )); GuiceScopeService service = injector . getInstance ( GuiceScopeService . class ); service . println ( \"Singleton Auto Scope\" ); } } \u6211\u4eec\u8fd0\u884c\u7a0b\u5e8f\u8f93\u51fa Singleton Auto Scope \u4e24\u79cd\u65b9\u5f0f\u5b9e\u73b0\u7684\u6548\u679c\u90fd\u662f\u4e00\u81f4\u7684\u3002\u6b64\u65f6 GuiceScopeService \u4f1a\u88ab\u6784\u5efa\u4e3a\u5355\u4f8b\u5b9e\u4f8b\u3002 \u5f53\u7136\u8fd8\u6709\u4e00\u4e2a asEagerSingleton() \u65b9\u6cd5\u4e5f\u53ef\u4ee5\u7528\u6765\u6807\u8bb0\u5355\u4f8b\u6a21\u5f0f\u3002 \u4ed6\u4eec\u7684\u5bf9\u6bd4\u56fe\u5982\u4e0b\uff1a \u4f7f\u7528\u65b9\u5f0f PRODUCTION DEVELOPMENT .asEagerSingleton() eager eager .in(Singleton.class) eager lazy .in(Scopes.SINGLETON) eager lazy @Singleton eager* lazy \u81ea\u5b9a\u4e49Scope \u00b6 Guice\u8fd8\u652f\u6301\u6211\u4eec\u7528\u6237\u81ea\u5b9a\u4e49\u4f5c\u7528\u57df\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\u6211\u4eec\u4e0d\u9700\u8981\u81ea\u5df1\u5b9e\u73b0Scope\uff0c\u4e00\u822c\u5185\u7f6e\u7684\u4f5c\u7528\u57df\u5bf9\u4e8e\u5927\u591a\u6570\u7684\u5e94\u7528\u5df2\u7ecf\u8db3\u591f\u4e86\u3002\u5982\u679c\u60a8\u6b63\u5728\u7f16\u5199\u4e00\u4e2aweb\u5e94\u7528\u7a0b\u5e8f\uff0c\u90a3\u4e48 ServletModule \u4e3aHTTP\u8bf7\u6c42\u548cHTTP\u4f1a\u8bdd\u63d0\u4f9b\u4e86\u7b80\u5355\u7684\u3001\u826f\u597d\u4f5c\u7528\u57df\u5b9e\u73b0\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u60f3\u6cd5\u3002 \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.annotation.GuiceCustomScope \u7c7b\u6587\u4ef6,\u5b9e\u73b0\u81ea\u5b9a\u4e49Scope\u6ce8\u89e3,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 Note Scope\u6ce8\u89e3\u7528\u4e8e\u6807\u8bb0\u5f53\u524dScope\u5728\u5bb9\u5668\u4e2d\u4f7f\u7528\u7684\u4f5c\u7528\u57df\u3002\u5c06\u4f7f\u7528\u5b83\u6765\u6ce8\u91caguice\u6784\u9020\u7684\u7c7b\u578b\uff0c @Provides \u65b9\u6cd5\u548cbind\u8bed\u6cd5\u4e2d\u7684 in() package io.edurt.lc.guice.annotation ; import com.google.inject.ScopeAnnotation ; import java.lang.annotation.Retention ; import java.lang.annotation.Target ; import static java.lang.annotation.ElementType.METHOD ; import static java.lang.annotation.ElementType.TYPE ; import static java.lang.annotation.RetentionPolicy.RUNTIME ; @Target ({ TYPE , METHOD }) @Retention ( RUNTIME ) @ScopeAnnotation public @interface GuiceCustomScope { } \u5728\u4f7f\u7528\u81ea\u5b9a\u4e49Scope\u65f6\uff0c\u8bf7\u786e\u4fdd\u5bfc\u5165\u4e86\u6b63\u786e\u7684Scope\u6ce8\u89e3\u3002\u5426\u5219\uff0c\u60a8\u53ef\u80fd\u4f1a\u5f97\u5230\u4e00\u4e2a SCOPE_NOT_FOUND \u9519\u8bef\u3002 \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceCustomScopeImpl \u7c7b\u6587\u4ef6, \u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 Note Scope\u63a5\u53e3\u786e\u4fdd\u6bcf\u4e2aScope\u5b9e\u4f8b\u62e5\u6709\u4e00\u5230\u591a\u4e2a\u7c7b\u578b\u5b9e\u4f8b\u3002 package io.edurt.lc.guice ; import com.google.inject.Key ; import com.google.inject.Provider ; import com.google.inject.Scope ; public class GuiceCustomScopeImpl implements Scope { ThreadLocal < Object > threadLocal = new ThreadLocal <> (); @Override public < T > Provider < T > scope ( Key < T > key , Provider < T > unscoped ) { return () -> { T instance = ( T ) threadLocal . get (); if ( instance == null ) { instance = unscoped . get (); threadLocal . set ( instance ); } return instance ; }; } } \u6211\u4eec\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5355\u7ebf\u7a0b\u62bd\u53d6Scope\uff0c\u6211\u4eec\u53ea\u662f\u4e3a\u4e86\u505a\u6d4b\u8bd5\u4f7f\u7528\uff0c\u5177\u4f53\u7684Scope\u8fd8\u9700\u8981\u6839\u636e\u4e1a\u52a1\u81ea\u5df1\u4f7f\u7528\u3002\u5f53\u6211\u4eec\u4f20\u9012\u7684\u7ebf\u7a0b\u4e2d\u6ca1\u6709\u6784\u9020\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u5148\u6784\u9020\u4e00\u4e2a\uff0c\u7136\u540e\u653e\u5165\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u4e2d\uff0c\u4ee5\u540e\u6bcf\u6b21\u90fd\u4ece\u7ebf\u7a0b\u4e2d\u83b7\u53d6\u5bf9\u8c61\u3002 \u63a5\u4e0b\u6765\u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.TestGuiceCustomScope \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.Guice ; import com.google.inject.Injector ; import org.junit.Test ; public class TestGuiceCustomScope { @Test public void test () { Injector injector = Guice . createInjector ( binder -> { binder . bind ( GuiceScopeService . class ). to ( GuiceScopeServiceImpl . class ). in ( new GuiceCustomScopeImpl ()); }); for ( int i = 0 ; i < 3 ; i ++ ) { System . out . println ( injector . getInstance ( GuiceScopeService . class ). hashCode ()); } } } \u8fd0\u884c\u7a0b\u5e8f\u540e\u6211\u4eec\u5f97\u5230\u4ee5\u4e0b\u7ed3\u679c\uff1a 508198356 508198356 508198356 \u6211\u4eec\u901a\u8fc7\u7ed3\u679c\u5f97\u5230\u8fd0\u884c\u4e863\u6b21\u540e\u7684\u5b9e\u4f8bhashCode\u662f\u4e00\u81f4\u7684\uff0c\u8fd9\u5c31\u8bf4\u660e\u6211\u4eec\u7684\u81ea\u5b9a\u4e49Scope\u5df2\u7ecf\u8d77\u4f5c\u7528\u4e86\u3002\u5982\u679c\u65b0\u7684\u5b9e\u4f8b\u6784\u5efa\u540e\u90a3\u4e48hashCode\u5c06\u4f1a\u88ab\u6539\u53d8\u3002 \u63a5\u4e0b\u6765\u5728 src/main/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.GuiceCustomScopeModule \u7c7b\u6587\u4ef6\u7ed1\u5b9a\u81ea\u5b9a\u4e49Scope\u6ce8\u89e3\uff0c\u6211\u4eec\u901a\u8fc7\u5b9e\u73b0Module\u8fdb\u884c\u6ce8\u5165,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.AbstractModule ; import io.edurt.lc.guice.annotation.GuiceCustomScope ; public class GuiceCustomScopeModule extends AbstractModule { @Override protected void configure () { bindScope ( GuiceCustomScope . class , new GuiceCustomScopeImpl ()); } } \u9700\u8981\u4f7f\u7528\u5230\u6539Module\u53ea\u9700\u8981\u5728Guice.createInjector\u6784\u5efa\u7684\u65f6\u5019\u6dfb\u52a0\u8be5Module\u5373\u53ef\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a Injector injector = Guice . createInjector ( new GuiceCustomScopeModule (), binder -> { binder . bind ( GuiceScopeService . class ). to ( GuiceScopeServiceImpl . class ). in ( new GuiceCustomScopeImpl ()); }); \u5728 ScopeService \u7c7b\u4e0a\u4f7f\u7528 @GuiceCustomScope \u6ce8\u89e3\u5373\u53ef\u3002 \u6e90\u7801\u5730\u5740 \u00b6 GitHub","title":"Guice\u4f9d\u8d56\u6ce8\u5165(Scope)"},{"location":"google/guice/binder-scope.html#_1","text":"\u6280\u672f \u7248\u672c Java 1.8+ Guice 4.2.3","title":"\u57fa\u7840\u73af\u5883"},{"location":"google/guice/binder-scope.html#_2","text":"\u521d\u59cb\u5316\u9879\u76ee mvn archetype:generate -DgroupId = io.edurt.lc.guice -DartifactId = guice-binder-scope -DarchetypeArtifactId = maven-archetype-quickstart -Dversion = 1 .0.0 -DinteractiveMode = false \u4fee\u6539pom.xml\u589e\u52a0Guice\u4f9d\u8d56 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <parent> <artifactId> lc-guice </artifactId> <groupId> io.edurt.lc.guice </groupId> <version> 1.0.0 </version> </parent> <modelVersion> 4.0.0 </modelVersion> <artifactId> guice-binder-scope </artifactId> <name> Learning Center for Guice Binder(Scope) </name> <properties> <maven.compiler.source> 1.8 </maven.compiler.source> <maven.compiler.target> 1.8 </maven.compiler.target> </properties> <dependencies> <dependency> <groupId> com.google.inject </groupId> <artifactId> guice </artifactId> <version> 4.2.3 </version> </dependency> <dependency> <groupId> junit </groupId> <artifactId> junit </artifactId> <version> 4.12 </version> <scope> test </scope> </dependency> </dependencies> </project> guice : guice\u5c31\u662f\u6211\u4eec\u6838\u5fc3\u8981\u4f7f\u7528\u7684\u4f9d\u8d56","title":"\u521d\u59cb\u5316\u9879\u76ee"},{"location":"google/guice/binder-scope.html#singleton","text":"Guice\u652f\u6301\u6211\u4eec\u5728\u5176\u4ed6DI\u6846\u67b6\u4e2d\u9010\u6e10\u4e60\u60ef\u7684 Scope \u548c Scope \u673a\u5236\u3002Guice\u9ed8\u8ba4\u63d0\u4f9b\u5df2\u5b9a\u4e49\u4f9d\u8d56\u9879\u7684\u65b0\u5b9e\u4f8b\u3002 \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceScopeService \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; public interface GuiceScopeService { void println ( String input ); } \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceScopeServiceImpl \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; public class GuiceScopeServiceImpl implements GuiceScopeService { @Override public void println ( String input ) { System . out . println ( input ); } } \u63a5\u4e0b\u6765\u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.TestGuiceScope \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.Guice ; import com.google.inject.Injector ; import com.google.inject.Scopes ; import org.junit.Test ; public class TestGuiceScope { @Test public void test () { Injector injector = Guice . createInjector ( binder -> binder . bind ( GuiceScopeService . class ). to ( GuiceScopeServiceImpl . class ). in ( Scopes . SINGLETON )); GuiceScopeService service = injector . getInstance ( GuiceScopeService . class ); service . println ( \"Singleton Scope\" ); } } \u6211\u4eec\u8fd0\u884c\u7a0b\u5e8f\u8f93\u51fa Singleton Scope Note \u901a\u8fc7\u4ee3\u7801 binder.bind(GuiceScopeService.class).to(GuiceScopeServiceImpl.class).in(Scopes.SINGLETON) \u6211\u4eec\u6307\u5b9a\u4e86GuiceScopeService\u7684Scope\uff0c\u4ed6\u5c06\u4f1a\u88ab\u6807\u5fd7\u4e3a\u4e00\u4e2a\u5355\u4f8b\u5b9e\u4f8b\u3002\u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 @Singleton \u6807\u5fd7\u8be5\u7c7b\u7684\u4f5c\u7528\u57df \u5728 src/test/java \u76ee\u5f55\u521b\u5efa GuiceScopeServiceAutoImpl \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.Singleton ; @Singleton public class GuiceScopeServiceAutoImpl implements GuiceScopeService { @Override public void println ( String input ) { System . out . println ( input ); } } \u63a5\u4e0b\u6765\u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.TestGuiceScopeAuto \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.Guice ; import com.google.inject.Injector ; import org.junit.Test ; public class TestGuiceScopeAuto { @Test public void test () { Injector injector = Guice . createInjector ( binder -> binder . bind ( GuiceScopeService . class ). to ( GuiceScopeServiceAutoImpl . class )); GuiceScopeService service = injector . getInstance ( GuiceScopeService . class ); service . println ( \"Singleton Auto Scope\" ); } } \u6211\u4eec\u8fd0\u884c\u7a0b\u5e8f\u8f93\u51fa Singleton Auto Scope \u4e24\u79cd\u65b9\u5f0f\u5b9e\u73b0\u7684\u6548\u679c\u90fd\u662f\u4e00\u81f4\u7684\u3002\u6b64\u65f6 GuiceScopeService \u4f1a\u88ab\u6784\u5efa\u4e3a\u5355\u4f8b\u5b9e\u4f8b\u3002 \u5f53\u7136\u8fd8\u6709\u4e00\u4e2a asEagerSingleton() \u65b9\u6cd5\u4e5f\u53ef\u4ee5\u7528\u6765\u6807\u8bb0\u5355\u4f8b\u6a21\u5f0f\u3002 \u4ed6\u4eec\u7684\u5bf9\u6bd4\u56fe\u5982\u4e0b\uff1a \u4f7f\u7528\u65b9\u5f0f PRODUCTION DEVELOPMENT .asEagerSingleton() eager eager .in(Singleton.class) eager lazy .in(Scopes.SINGLETON) eager lazy @Singleton eager* lazy","title":"Singleton"},{"location":"google/guice/binder-scope.html#scope","text":"Guice\u8fd8\u652f\u6301\u6211\u4eec\u7528\u6237\u81ea\u5b9a\u4e49\u4f5c\u7528\u57df\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\u6211\u4eec\u4e0d\u9700\u8981\u81ea\u5df1\u5b9e\u73b0Scope\uff0c\u4e00\u822c\u5185\u7f6e\u7684\u4f5c\u7528\u57df\u5bf9\u4e8e\u5927\u591a\u6570\u7684\u5e94\u7528\u5df2\u7ecf\u8db3\u591f\u4e86\u3002\u5982\u679c\u60a8\u6b63\u5728\u7f16\u5199\u4e00\u4e2aweb\u5e94\u7528\u7a0b\u5e8f\uff0c\u90a3\u4e48 ServletModule \u4e3aHTTP\u8bf7\u6c42\u548cHTTP\u4f1a\u8bdd\u63d0\u4f9b\u4e86\u7b80\u5355\u7684\u3001\u826f\u597d\u4f5c\u7528\u57df\u5b9e\u73b0\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u60f3\u6cd5\u3002 \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.annotation.GuiceCustomScope \u7c7b\u6587\u4ef6,\u5b9e\u73b0\u81ea\u5b9a\u4e49Scope\u6ce8\u89e3,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 Note Scope\u6ce8\u89e3\u7528\u4e8e\u6807\u8bb0\u5f53\u524dScope\u5728\u5bb9\u5668\u4e2d\u4f7f\u7528\u7684\u4f5c\u7528\u57df\u3002\u5c06\u4f7f\u7528\u5b83\u6765\u6ce8\u91caguice\u6784\u9020\u7684\u7c7b\u578b\uff0c @Provides \u65b9\u6cd5\u548cbind\u8bed\u6cd5\u4e2d\u7684 in() package io.edurt.lc.guice.annotation ; import com.google.inject.ScopeAnnotation ; import java.lang.annotation.Retention ; import java.lang.annotation.Target ; import static java.lang.annotation.ElementType.METHOD ; import static java.lang.annotation.ElementType.TYPE ; import static java.lang.annotation.RetentionPolicy.RUNTIME ; @Target ({ TYPE , METHOD }) @Retention ( RUNTIME ) @ScopeAnnotation public @interface GuiceCustomScope { } \u5728\u4f7f\u7528\u81ea\u5b9a\u4e49Scope\u65f6\uff0c\u8bf7\u786e\u4fdd\u5bfc\u5165\u4e86\u6b63\u786e\u7684Scope\u6ce8\u89e3\u3002\u5426\u5219\uff0c\u60a8\u53ef\u80fd\u4f1a\u5f97\u5230\u4e00\u4e2a SCOPE_NOT_FOUND \u9519\u8bef\u3002 \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.GuiceCustomScopeImpl \u7c7b\u6587\u4ef6, \u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 Note Scope\u63a5\u53e3\u786e\u4fdd\u6bcf\u4e2aScope\u5b9e\u4f8b\u62e5\u6709\u4e00\u5230\u591a\u4e2a\u7c7b\u578b\u5b9e\u4f8b\u3002 package io.edurt.lc.guice ; import com.google.inject.Key ; import com.google.inject.Provider ; import com.google.inject.Scope ; public class GuiceCustomScopeImpl implements Scope { ThreadLocal < Object > threadLocal = new ThreadLocal <> (); @Override public < T > Provider < T > scope ( Key < T > key , Provider < T > unscoped ) { return () -> { T instance = ( T ) threadLocal . get (); if ( instance == null ) { instance = unscoped . get (); threadLocal . set ( instance ); } return instance ; }; } } \u6211\u4eec\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5355\u7ebf\u7a0b\u62bd\u53d6Scope\uff0c\u6211\u4eec\u53ea\u662f\u4e3a\u4e86\u505a\u6d4b\u8bd5\u4f7f\u7528\uff0c\u5177\u4f53\u7684Scope\u8fd8\u9700\u8981\u6839\u636e\u4e1a\u52a1\u81ea\u5df1\u4f7f\u7528\u3002\u5f53\u6211\u4eec\u4f20\u9012\u7684\u7ebf\u7a0b\u4e2d\u6ca1\u6709\u6784\u9020\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u5148\u6784\u9020\u4e00\u4e2a\uff0c\u7136\u540e\u653e\u5165\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u4e2d\uff0c\u4ee5\u540e\u6bcf\u6b21\u90fd\u4ece\u7ebf\u7a0b\u4e2d\u83b7\u53d6\u5bf9\u8c61\u3002 \u63a5\u4e0b\u6765\u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.TestGuiceCustomScope \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.Guice ; import com.google.inject.Injector ; import org.junit.Test ; public class TestGuiceCustomScope { @Test public void test () { Injector injector = Guice . createInjector ( binder -> { binder . bind ( GuiceScopeService . class ). to ( GuiceScopeServiceImpl . class ). in ( new GuiceCustomScopeImpl ()); }); for ( int i = 0 ; i < 3 ; i ++ ) { System . out . println ( injector . getInstance ( GuiceScopeService . class ). hashCode ()); } } } \u8fd0\u884c\u7a0b\u5e8f\u540e\u6211\u4eec\u5f97\u5230\u4ee5\u4e0b\u7ed3\u679c\uff1a 508198356 508198356 508198356 \u6211\u4eec\u901a\u8fc7\u7ed3\u679c\u5f97\u5230\u8fd0\u884c\u4e863\u6b21\u540e\u7684\u5b9e\u4f8bhashCode\u662f\u4e00\u81f4\u7684\uff0c\u8fd9\u5c31\u8bf4\u660e\u6211\u4eec\u7684\u81ea\u5b9a\u4e49Scope\u5df2\u7ecf\u8d77\u4f5c\u7528\u4e86\u3002\u5982\u679c\u65b0\u7684\u5b9e\u4f8b\u6784\u5efa\u540e\u90a3\u4e48hashCode\u5c06\u4f1a\u88ab\u6539\u53d8\u3002 \u63a5\u4e0b\u6765\u5728 src/main/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.GuiceCustomScopeModule \u7c7b\u6587\u4ef6\u7ed1\u5b9a\u81ea\u5b9a\u4e49Scope\u6ce8\u89e3\uff0c\u6211\u4eec\u901a\u8fc7\u5b9e\u73b0Module\u8fdb\u884c\u6ce8\u5165,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.AbstractModule ; import io.edurt.lc.guice.annotation.GuiceCustomScope ; public class GuiceCustomScopeModule extends AbstractModule { @Override protected void configure () { bindScope ( GuiceCustomScope . class , new GuiceCustomScopeImpl ()); } } \u9700\u8981\u4f7f\u7528\u5230\u6539Module\u53ea\u9700\u8981\u5728Guice.createInjector\u6784\u5efa\u7684\u65f6\u5019\u6dfb\u52a0\u8be5Module\u5373\u53ef\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a Injector injector = Guice . createInjector ( new GuiceCustomScopeModule (), binder -> { binder . bind ( GuiceScopeService . class ). to ( GuiceScopeServiceImpl . class ). in ( new GuiceCustomScopeImpl ()); }); \u5728 ScopeService \u7c7b\u4e0a\u4f7f\u7528 @GuiceCustomScope \u6ce8\u89e3\u5373\u53ef\u3002","title":"\u81ea\u5b9a\u4e49Scope"},{"location":"google/guice/binder-scope.html#_3","text":"GitHub","title":"\u6e90\u7801\u5730\u5740"},{"location":"google/guice/integration-configuration.html","tags":["Google","Guice","Java","\u96c6\u6210"],"text":"\u5728\u5927\u591a\u6570\u9879\u76ee\u4e2d\u6211\u4eec\u7ecf\u5e38\u4f1a\u4f7f\u7528\u5230\u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6,\u7528\u4e8e\u9002\u914d\u81ea\u5b9a\u4e49\u7684\u5c5e\u6027\u503c\u7b49,\u672c\u6559\u7a0b\u6211\u4eec\u4e3b\u8981\u901a\u8fc7\u5b9e\u73b0\u5bf9Properties\u7684\u89e3\u6790\u5b9e\u73b0\u57fa\u4e8eGuice\u7684\u914d\u7f6e\u89e3\u6790Module. \u57fa\u7840\u73af\u5883 \u00b6 \u6280\u672f \u7248\u672c Java 1.8+ Guice 4.2.3 \u521d\u59cb\u5316\u9879\u76ee \u00b6 \u521d\u59cb\u5316\u9879\u76ee mvn archetype:generate -DgroupId = io.edurt.lc.guice -DartifactId = guice-integration-configuration -DarchetypeArtifactId = maven-archetype-quickstart -Dversion = 1 .0.0 -DinteractiveMode = false \u4fee\u6539pom.xml\u589e\u52a0Guice\u4f9d\u8d56 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <parent> <artifactId> lc-guice </artifactId> <groupId> io.edurt.lc.guice </groupId> <version> 1.0.0 </version> </parent> <modelVersion> 4.0.0 </modelVersion> <artifactId> guice-integration-configuration </artifactId> <name> Learning Center for Guice Integration(Configuration) </name> <properties> <maven.compiler.source> 1.8 </maven.compiler.source> <maven.compiler.target> 1.8 </maven.compiler.target> </properties> <dependencies> <dependency> <groupId> com.google.inject </groupId> <artifactId> guice </artifactId> <version> 4.2.3 </version> </dependency> <dependency> <groupId> junit </groupId> <artifactId> junit </artifactId> <version> 4.12 </version> <scope> test </scope> </dependency> </dependencies> </project> guice : guice\u5c31\u662f\u6211\u4eec\u6838\u5fc3\u8981\u4f7f\u7528\u7684\u4f9d\u8d56 \u6784\u5efaPropertiesUtils \u00b6 PropertiesUtils \u4e3b\u8981\u7528\u4e8e\u6211\u4eec\u5bf9Properties\u7c7b\u578b\u6587\u4ef6\u7684\u89e3\u6790. \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.PropertiesUtils \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; import java.io.File ; import java.io.FileInputStream ; import java.io.IOException ; import java.io.InputStream ; import java.util.Properties ; public class PropertiesUtils { private PropertiesUtils () {} public static Properties loadProperties ( String ... resourcesPaths ) { Properties props = new Properties (); for ( String location : resourcesPaths ) { File propertiesFile = new File ( location ); try ( InputStream inputStream = new FileInputStream ( propertiesFile )) { props . load ( inputStream ); } catch ( IOException ex ) { ex . printStackTrace (); } } return props ; } public static Integer getIntValue ( Properties properties , String key , Integer defaultValue ) { return Integer . valueOf ( getStringValue ( properties , key , String . valueOf ( defaultValue ))); } public static String getStringValue ( Properties properties , String key , String defaultValue ) { if ( properties == null ) { return defaultValue ; } if ( ! properties . containsKey ( key )) { return defaultValue ; } return String . valueOf ( properties . getOrDefault ( key , defaultValue )); } public static Boolean getBoolValue ( Properties properties , String key , Boolean defaultValue ) { return Boolean . valueOf ( getStringValue ( properties , key , String . valueOf ( defaultValue ))); } } Note \u6211\u4eec\u5728\u5de5\u5177\u7c7b\u4e2d\u63d0\u4f9b\u4e86\u51e0\u4e2a\u4fbf\u6377\u7684\u65b9\u6cd5: getIntValue \u83b7\u53d6Integer\u7c7b\u578b\u6570\u636e getStringValue \u83b7\u53d6\u5b57\u7b26\u4e32\u7c7b\u578b\u6570\u636e getBoolValue \u83b7\u53d6Boolean\u7c7b\u578b\u6570\u636e \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.ConfigurationModule \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; import com.google.inject.AbstractModule ; import com.google.inject.name.Names ; import java.util.Properties ; public class ConfigurationModule extends AbstractModule { private Properties bootstrapConfiguration ; public ConfigurationModule ( Properties bootstrapConfiguration ) { this . bootstrapConfiguration = bootstrapConfiguration ; } public ConfigurationModule ( String configurationFilePath ) { if ( configurationFilePath != null ) { this . bootstrapConfiguration = PropertiesUtils . loadProperties ( configurationFilePath ); } } @Override protected void configure () { Names . bindProperties ( binder (), bootstrapConfiguration ); } } \u6d4b\u8bd5\u793a\u4f8b \u00b6 \u63a5\u4e0b\u6765\u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.TestConfigurationModule \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.Guice ; import com.google.inject.Injector ; import org.junit.After ; import org.junit.Assert ; import org.junit.Before ; import org.junit.Test ; public class TestConfigurationModule { private String path ; private Injector injector ; @Before public void before () { path = this . getClass (). getResource ( \"/file.properties\" ). getPath (); injector = Guice . createInjector ( new ConfigurationModule ( path )); } @After public void after () { } /** * Method: configure() */ @Test public void testConfigure () { Assert . assertTrue ( injector . getBindings (). toString (). contains ( \"Test1\" )); } } \u5728 test/resources \u76ee\u5f55\u4e0b\u65b0\u5efa file.properties \u6587\u4ef6,\u5185\u5bb9\u5982\u4e0b: name = Test1 \u6211\u4eec\u8fd0\u884c\u7a0b\u5e8f\u8f93\u51fa Connected to the target VM, address: '127.0.0.1:63962' , transport: 'socket' Disconnected from the target VM, address: '127.0.0.1:63962' , transport: 'socket' \u7531\u4e8e\u6211\u4eec\u4f7f\u7528\u4e86\u65ad\u8a00\u6765\u64cd\u4f5c,\u6240\u4ee5\u6b63\u5e38\u8fd0\u884c\u540e\u7cfb\u7edf\u4e0d\u4f1a\u51fa\u73b0\u4efb\u4f55\u8f93\u5165,\u5982\u679c\u6709\u9519\u8bef\u4fe1\u606f,\u90a3\u4e48\u63a7\u5236\u53f0\u4f1a\u629b\u51fa\u9519\u8bef\u4fe1\u606f. \u6e90\u7801\u5730\u5740 \u00b6 GitHub","title":"\u96c6\u6210Properties\u914d\u7f6e"},{"location":"google/guice/integration-configuration.html#_1","text":"\u6280\u672f \u7248\u672c Java 1.8+ Guice 4.2.3","title":"\u57fa\u7840\u73af\u5883"},{"location":"google/guice/integration-configuration.html#_2","text":"\u521d\u59cb\u5316\u9879\u76ee mvn archetype:generate -DgroupId = io.edurt.lc.guice -DartifactId = guice-integration-configuration -DarchetypeArtifactId = maven-archetype-quickstart -Dversion = 1 .0.0 -DinteractiveMode = false \u4fee\u6539pom.xml\u589e\u52a0Guice\u4f9d\u8d56 <?xml version=\"1.0\" encoding=\"UTF-8\"?> <project xmlns= \"http://maven.apache.org/POM/4.0.0\" xmlns:xsi= \"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation= \"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" > <parent> <artifactId> lc-guice </artifactId> <groupId> io.edurt.lc.guice </groupId> <version> 1.0.0 </version> </parent> <modelVersion> 4.0.0 </modelVersion> <artifactId> guice-integration-configuration </artifactId> <name> Learning Center for Guice Integration(Configuration) </name> <properties> <maven.compiler.source> 1.8 </maven.compiler.source> <maven.compiler.target> 1.8 </maven.compiler.target> </properties> <dependencies> <dependency> <groupId> com.google.inject </groupId> <artifactId> guice </artifactId> <version> 4.2.3 </version> </dependency> <dependency> <groupId> junit </groupId> <artifactId> junit </artifactId> <version> 4.12 </version> <scope> test </scope> </dependency> </dependencies> </project> guice : guice\u5c31\u662f\u6211\u4eec\u6838\u5fc3\u8981\u4f7f\u7528\u7684\u4f9d\u8d56","title":"\u521d\u59cb\u5316\u9879\u76ee"},{"location":"google/guice/integration-configuration.html#propertiesutils","text":"PropertiesUtils \u4e3b\u8981\u7528\u4e8e\u6211\u4eec\u5bf9Properties\u7c7b\u578b\u6587\u4ef6\u7684\u89e3\u6790. \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.PropertiesUtils \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; import java.io.File ; import java.io.FileInputStream ; import java.io.IOException ; import java.io.InputStream ; import java.util.Properties ; public class PropertiesUtils { private PropertiesUtils () {} public static Properties loadProperties ( String ... resourcesPaths ) { Properties props = new Properties (); for ( String location : resourcesPaths ) { File propertiesFile = new File ( location ); try ( InputStream inputStream = new FileInputStream ( propertiesFile )) { props . load ( inputStream ); } catch ( IOException ex ) { ex . printStackTrace (); } } return props ; } public static Integer getIntValue ( Properties properties , String key , Integer defaultValue ) { return Integer . valueOf ( getStringValue ( properties , key , String . valueOf ( defaultValue ))); } public static String getStringValue ( Properties properties , String key , String defaultValue ) { if ( properties == null ) { return defaultValue ; } if ( ! properties . containsKey ( key )) { return defaultValue ; } return String . valueOf ( properties . getOrDefault ( key , defaultValue )); } public static Boolean getBoolValue ( Properties properties , String key , Boolean defaultValue ) { return Boolean . valueOf ( getStringValue ( properties , key , String . valueOf ( defaultValue ))); } } Note \u6211\u4eec\u5728\u5de5\u5177\u7c7b\u4e2d\u63d0\u4f9b\u4e86\u51e0\u4e2a\u4fbf\u6377\u7684\u65b9\u6cd5: getIntValue \u83b7\u53d6Integer\u7c7b\u578b\u6570\u636e getStringValue \u83b7\u53d6\u5b57\u7b26\u4e32\u7c7b\u578b\u6570\u636e getBoolValue \u83b7\u53d6Boolean\u7c7b\u578b\u6570\u636e \u5728 src/main/java \u76ee\u5f55\u4e0b\u65b0\u5efa io.edurt.lc.guice.ConfigurationModule \u7c7b\u6587\u4ef6,\u5728\u6587\u4ef6\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9 package io.edurt.lc.guice ; import com.google.inject.AbstractModule ; import com.google.inject.name.Names ; import java.util.Properties ; public class ConfigurationModule extends AbstractModule { private Properties bootstrapConfiguration ; public ConfigurationModule ( Properties bootstrapConfiguration ) { this . bootstrapConfiguration = bootstrapConfiguration ; } public ConfigurationModule ( String configurationFilePath ) { if ( configurationFilePath != null ) { this . bootstrapConfiguration = PropertiesUtils . loadProperties ( configurationFilePath ); } } @Override protected void configure () { Names . bindProperties ( binder (), bootstrapConfiguration ); } }","title":"\u6784\u5efaPropertiesUtils"},{"location":"google/guice/integration-configuration.html#_3","text":"\u63a5\u4e0b\u6765\u5728 src/test/java \u76ee\u5f55\u521b\u5efa io.edurt.lc.guice.TestConfigurationModule \u7c7b\u6587\u4ef6\u8fdb\u884c\u5b9a\u4e49\u7684\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5,\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801 package io.edurt.lc.guice ; import com.google.inject.Guice ; import com.google.inject.Injector ; import org.junit.After ; import org.junit.Assert ; import org.junit.Before ; import org.junit.Test ; public class TestConfigurationModule { private String path ; private Injector injector ; @Before public void before () { path = this . getClass (). getResource ( \"/file.properties\" ). getPath (); injector = Guice . createInjector ( new ConfigurationModule ( path )); } @After public void after () { } /** * Method: configure() */ @Test public void testConfigure () { Assert . assertTrue ( injector . getBindings (). toString (). contains ( \"Test1\" )); } } \u5728 test/resources \u76ee\u5f55\u4e0b\u65b0\u5efa file.properties \u6587\u4ef6,\u5185\u5bb9\u5982\u4e0b: name = Test1 \u6211\u4eec\u8fd0\u884c\u7a0b\u5e8f\u8f93\u51fa Connected to the target VM, address: '127.0.0.1:63962' , transport: 'socket' Disconnected from the target VM, address: '127.0.0.1:63962' , transport: 'socket' \u7531\u4e8e\u6211\u4eec\u4f7f\u7528\u4e86\u65ad\u8a00\u6765\u64cd\u4f5c,\u6240\u4ee5\u6b63\u5e38\u8fd0\u884c\u540e\u7cfb\u7edf\u4e0d\u4f1a\u51fa\u73b0\u4efb\u4f55\u8f93\u5165,\u5982\u679c\u6709\u9519\u8bef\u4fe1\u606f,\u90a3\u4e48\u63a7\u5236\u53f0\u4f1a\u629b\u51fa\u9519\u8bef\u4fe1\u606f.","title":"\u6d4b\u8bd5\u793a\u4f8b"},{"location":"google/guice/integration-configuration.html#_4","text":"GitHub","title":"\u6e90\u7801\u5730\u5740"},{"location":"presto_trino/index.html","text":"\u5f00\u6e90\u7684\u5206\u5e03\u5f0fSQL\u67e5\u8be2\u5f15\u64ce\uff0c\u9002\u7528\u4e8e\u4ea4\u4e92\u5f0f\u5206\u6790\u67e5\u8be2\uff0c\u6570\u636e\u91cf\u652f\u6301GB\u5230PB\u5b57\u8282\u3002\u67b6\u6784\u7531\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7684\u67b6\u6784\u6f14\u5316\u800c\u6765\u3002 \u5feb\u901f \u9ad8\u5ea6\u5e76\u884c\u548c\u5206\u5e03\u5f0f\u7684\u67e5\u8be2\u5f15\u64ce\uff0c\u5b83\u662f\u4ece\u5934\u5f00\u59cb\u6784\u5efa\u7684\uff0c\u7528\u4e8e\u9ad8\u6548\u3001\u4f4e\u5ef6\u8fdf\u7684\u5206\u6790\u3002 \u6570\u636e\u96c6\u6210 \u67e5\u8be2 EB \u7ea7\u6570\u636e\u6e56\u548c\u6d77\u91cf\u6570\u636e\u4ed3\u5e93\u7b49\u3002 \u5e7f\u6cdb\u9002\u7528\u6027 \u652f\u6301\u591a\u79cd\u7528\u4f8b\uff1a\u4ea4\u4e92\u5f0f\u901f\u5ea6\u7684\u5373\u5e2d\u5206\u6790\u3001\u591a\u5c0f\u65f6\u7684\u5927\u89c4\u6a21\u6279\u91cf\u67e5\u8be2\u4ee5\u53ca\u6267\u884c\u4e9a\u79d2\u7ea7\u67e5\u8be2\u7684\u5927\u5bb9\u91cf\u5e94\u7528\u7a0b\u5e8f\u3002 \u6df7\u5408 \u5728\u5355\u4e2a\u67e5\u8be2\u4e2d\u8bbf\u95ee\u6765\u81ea\u591a\u4e2a\u7cfb\u7edf\u7684\u6570\u636e\u3002\u4f8b\u5982\uff0c\u5c06\u5b58\u50a8\u5728 S3 \u5bf9\u8c61\u5b58\u50a8\u4e2d\u7684\u5386\u53f2\u65e5\u5fd7\u6570\u636e\u4e0e\u5b58\u50a8\u5728 MySQL \u5173\u7cfb\u6570\u636e\u5e93\u4e2d\u7684\u5ba2\u6237\u6570\u636e\u8fde\u63a5\u8d77\u6765\u3002 \u5feb\u901f\u5206\u6790 \u60a8\u53ef\u4ee5\u5728 Hadoop\u3001S3\u3001Cassandra\u3001MySQL \u548c\u8bb8\u591a\u5176\u4ed6\u5de5\u5177\u4e2d\u672c\u5730\u67e5\u8be2\u6570\u636e\uff0c\u800c\u65e0\u9700\u590d\u6742\u3001\u7f13\u6162\u4e14\u5bb9\u6613\u51fa\u9519\u7684\u6570\u636e\u590d\u5236\u8fc7\u7a0b\u3002 \u7b80\u5355 \u7b26\u5408 ANSI SQL \u7684\u67e5\u8be2\u5f15\u64ce\uff0c\u53ef\u4e0e R\u3001Tableau\u3001Power BI\u3001Superset \u7b49 BI \u5de5\u5177\u914d\u5408\u4f7f\u7528\u3002","title":"Index"},{"location":"zh/tags.html","text":"Tags \u00b6 [TAGS]","title":"Tags"},{"location":"zh/tags.html#tags","text":"[TAGS]","title":"Tags"}]}